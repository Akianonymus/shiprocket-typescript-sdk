// tslint:disable
/**
 * shiprocket
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as globalImportUrl from 'url';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { InlineResponse20028 } from '../models';
// @ts-ignore
import { InlineResponse20029 } from '../models';
// @ts-ignore
import { InlineResponse403 } from '../models';
// @ts-ignore
import { InlineResponse4228 } from '../models';
/**
 * HyperlocalPickupAddressesApi - axios parameter creator
 * @export
 */
export const HyperlocalPickupAddressesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * This API can be used to add a new pickup location to your account.   Pass the minimum required parameters to add the location.   Further details to the address can be added if required.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `pickup_location` | YES | _string_ | The nickname of the new pickup location. Max 36 characters. | Home | | `name` | YES | _string_ | The shipper\'s name. | Deadpool | | `email` | YES | _string_ | The shipper\'s email address. | [deadpool@chimichanga.com](https://mailto:deadpool@chimichanga.com) | | `phone` | YES | _integer_ | Shipper\'s phone number. | 9777777779 | | `address` | YES | _string_ | Shipper\'s primary address. Max 80 characters. | Mutant Facility, Sector 3 | | `address_2` | NO | _string_ | Additional address details. | House number 34 | | `city` | YES | _string_ | Pickup location city name. | Pune | | `state` | YES | _string_ | Pickup location state name. | Maharashtra | | `country` | YES | _string_ | Pickup location country. | India | | `pin_code` | YES | _integer_ | Pickup location pincode. | 110022 | | `lat` | YES | _float_ | Pickup location Latitude. | 22.4064 | | `long` | YES | _float_ | Pickup location Longitude. | 69.0747 | | `address_type` | NO | _string_ | To be given if address of different vendor is to be provided with pickup address | vendor | | `vendor_name` | NO | _string_ | Name of vendor if address_type is vendor | John | | `gstin` | NO | _string_ | gstin of vendor | 09XXXCH7409R1XXX |
         * @summary Add a New Pickup Location
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalSettingsCompanyAddpickupPost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/settings/company/addpickup`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a list of all pickup locations that have been added to your Shiprocket account through this API.  No parameters are required to use this API.
         * @summary Get All Pickup  Locations
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalSettingsCompanyPickupGet: async (options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/settings/company/pickup`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * HyperlocalPickupAddressesApi - functional programming interface
 * @export
 */
export const HyperlocalPickupAddressesApiFp = function(configuration?: Configuration) {
    return {
        /**
         * This API can be used to add a new pickup location to your account.   Pass the minimum required parameters to add the location.   Further details to the address can be added if required.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `pickup_location` | YES | _string_ | The nickname of the new pickup location. Max 36 characters. | Home | | `name` | YES | _string_ | The shipper\'s name. | Deadpool | | `email` | YES | _string_ | The shipper\'s email address. | [deadpool@chimichanga.com](https://mailto:deadpool@chimichanga.com) | | `phone` | YES | _integer_ | Shipper\'s phone number. | 9777777779 | | `address` | YES | _string_ | Shipper\'s primary address. Max 80 characters. | Mutant Facility, Sector 3 | | `address_2` | NO | _string_ | Additional address details. | House number 34 | | `city` | YES | _string_ | Pickup location city name. | Pune | | `state` | YES | _string_ | Pickup location state name. | Maharashtra | | `country` | YES | _string_ | Pickup location country. | India | | `pin_code` | YES | _integer_ | Pickup location pincode. | 110022 | | `lat` | YES | _float_ | Pickup location Latitude. | 22.4064 | | `long` | YES | _float_ | Pickup location Longitude. | 69.0747 | | `address_type` | NO | _string_ | To be given if address of different vendor is to be provided with pickup address | vendor | | `vendor_name` | NO | _string_ | Name of vendor if address_type is vendor | John | | `gstin` | NO | _string_ | gstin of vendor | 09XXXCH7409R1XXX |
         * @summary Add a New Pickup Location
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalSettingsCompanyAddpickupPost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20029>> {
            const localVarAxiosArgs = await HyperlocalPickupAddressesApiAxiosParamCreator(configuration).v1ExternalSettingsCompanyAddpickupPost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Get a list of all pickup locations that have been added to your Shiprocket account through this API.  No parameters are required to use this API.
         * @summary Get All Pickup  Locations
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalSettingsCompanyPickupGet(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20028>> {
            const localVarAxiosArgs = await HyperlocalPickupAddressesApiAxiosParamCreator(configuration).v1ExternalSettingsCompanyPickupGet(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * HyperlocalPickupAddressesApi - factory interface
 * @export
 */
export const HyperlocalPickupAddressesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * This API can be used to add a new pickup location to your account.   Pass the minimum required parameters to add the location.   Further details to the address can be added if required.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `pickup_location` | YES | _string_ | The nickname of the new pickup location. Max 36 characters. | Home | | `name` | YES | _string_ | The shipper\'s name. | Deadpool | | `email` | YES | _string_ | The shipper\'s email address. | [deadpool@chimichanga.com](https://mailto:deadpool@chimichanga.com) | | `phone` | YES | _integer_ | Shipper\'s phone number. | 9777777779 | | `address` | YES | _string_ | Shipper\'s primary address. Max 80 characters. | Mutant Facility, Sector 3 | | `address_2` | NO | _string_ | Additional address details. | House number 34 | | `city` | YES | _string_ | Pickup location city name. | Pune | | `state` | YES | _string_ | Pickup location state name. | Maharashtra | | `country` | YES | _string_ | Pickup location country. | India | | `pin_code` | YES | _integer_ | Pickup location pincode. | 110022 | | `lat` | YES | _float_ | Pickup location Latitude. | 22.4064 | | `long` | YES | _float_ | Pickup location Longitude. | 69.0747 | | `address_type` | NO | _string_ | To be given if address of different vendor is to be provided with pickup address | vendor | | `vendor_name` | NO | _string_ | Name of vendor if address_type is vendor | John | | `gstin` | NO | _string_ | gstin of vendor | 09XXXCH7409R1XXX |
         * @summary Add a New Pickup Location
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalSettingsCompanyAddpickupPost(body?: string, options?: any): AxiosPromise<InlineResponse20029> {
            return HyperlocalPickupAddressesApiFp(configuration).v1ExternalSettingsCompanyAddpickupPost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a list of all pickup locations that have been added to your Shiprocket account through this API.  No parameters are required to use this API.
         * @summary Get All Pickup  Locations
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalSettingsCompanyPickupGet(options?: any): AxiosPromise<InlineResponse20028> {
            return HyperlocalPickupAddressesApiFp(configuration).v1ExternalSettingsCompanyPickupGet(options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * HyperlocalPickupAddressesApi - interface
 * @export
 * @interface HyperlocalPickupAddressesApi
 */
export interface HyperlocalPickupAddressesApiInterface {
    /**
     * This API can be used to add a new pickup location to your account.   Pass the minimum required parameters to add the location.   Further details to the address can be added if required.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `pickup_location` | YES | _string_ | The nickname of the new pickup location. Max 36 characters. | Home | | `name` | YES | _string_ | The shipper\'s name. | Deadpool | | `email` | YES | _string_ | The shipper\'s email address. | [deadpool@chimichanga.com](https://mailto:deadpool@chimichanga.com) | | `phone` | YES | _integer_ | Shipper\'s phone number. | 9777777779 | | `address` | YES | _string_ | Shipper\'s primary address. Max 80 characters. | Mutant Facility, Sector 3 | | `address_2` | NO | _string_ | Additional address details. | House number 34 | | `city` | YES | _string_ | Pickup location city name. | Pune | | `state` | YES | _string_ | Pickup location state name. | Maharashtra | | `country` | YES | _string_ | Pickup location country. | India | | `pin_code` | YES | _integer_ | Pickup location pincode. | 110022 | | `lat` | YES | _float_ | Pickup location Latitude. | 22.4064 | | `long` | YES | _float_ | Pickup location Longitude. | 69.0747 | | `address_type` | NO | _string_ | To be given if address of different vendor is to be provided with pickup address | vendor | | `vendor_name` | NO | _string_ | Name of vendor if address_type is vendor | John | | `gstin` | NO | _string_ | gstin of vendor | 09XXXCH7409R1XXX |
     * @summary Add a New Pickup Location
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalPickupAddressesApiInterface
     */
    v1ExternalSettingsCompanyAddpickupPost(body?: string, options?: any): AxiosPromise<InlineResponse20029>;

    /**
     * Get a list of all pickup locations that have been added to your Shiprocket account through this API.  No parameters are required to use this API.
     * @summary Get All Pickup  Locations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalPickupAddressesApiInterface
     */
    v1ExternalSettingsCompanyPickupGet(options?: any): AxiosPromise<InlineResponse20028>;

}

/**
 * HyperlocalPickupAddressesApi - object-oriented interface
 * @export
 * @class HyperlocalPickupAddressesApi
 * @extends {BaseAPI}
 */
export class HyperlocalPickupAddressesApi extends BaseAPI implements HyperlocalPickupAddressesApiInterface {
    /**
     * This API can be used to add a new pickup location to your account.   Pass the minimum required parameters to add the location.   Further details to the address can be added if required.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `pickup_location` | YES | _string_ | The nickname of the new pickup location. Max 36 characters. | Home | | `name` | YES | _string_ | The shipper\'s name. | Deadpool | | `email` | YES | _string_ | The shipper\'s email address. | [deadpool@chimichanga.com](https://mailto:deadpool@chimichanga.com) | | `phone` | YES | _integer_ | Shipper\'s phone number. | 9777777779 | | `address` | YES | _string_ | Shipper\'s primary address. Max 80 characters. | Mutant Facility, Sector 3 | | `address_2` | NO | _string_ | Additional address details. | House number 34 | | `city` | YES | _string_ | Pickup location city name. | Pune | | `state` | YES | _string_ | Pickup location state name. | Maharashtra | | `country` | YES | _string_ | Pickup location country. | India | | `pin_code` | YES | _integer_ | Pickup location pincode. | 110022 | | `lat` | YES | _float_ | Pickup location Latitude. | 22.4064 | | `long` | YES | _float_ | Pickup location Longitude. | 69.0747 | | `address_type` | NO | _string_ | To be given if address of different vendor is to be provided with pickup address | vendor | | `vendor_name` | NO | _string_ | Name of vendor if address_type is vendor | John | | `gstin` | NO | _string_ | gstin of vendor | 09XXXCH7409R1XXX |
     * @summary Add a New Pickup Location
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalPickupAddressesApi
     */
    public v1ExternalSettingsCompanyAddpickupPost(body?: string, options?: any) {
        return HyperlocalPickupAddressesApiFp(this.configuration).v1ExternalSettingsCompanyAddpickupPost(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a list of all pickup locations that have been added to your Shiprocket account through this API.  No parameters are required to use this API.
     * @summary Get All Pickup  Locations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalPickupAddressesApi
     */
    public v1ExternalSettingsCompanyPickupGet(options?: any) {
        return HyperlocalPickupAddressesApiFp(this.configuration).v1ExternalSettingsCompanyPickupGet(options).then((request) => request(this.axios, this.basePath));
    }

}
