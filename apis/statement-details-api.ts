// tslint:disable
/**
 * shiprocket
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as globalImportUrl from 'url';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { InlineResponse20048 } from '../models';
// @ts-ignore
import { InlineResponse403 } from '../models';
/**
 * StatementDetailsApi - axios parameter creator
 * @export
 */
export const StatementDetailsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Use this API to get the account statement details of your Shiprocket account. No parameters are required to access this API. However, you sort and filter the data displayed using the optional parameters.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |              **DESCRIPTION**              | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:----------------------------------------: |:-----------: | |   ` page`     |      NO       |    *integer*    |   The page number you want to display.    |      5       | | `per_page`  |      NO       |    *integer*    | The number of orders to get per request.  |      2       | |    `from`     |      NO       |    *string*     |           From a specific date.           |  2017-08-12  | |     `to`      |      NO       |    *string*     |            To a specific date.            |  2017-09-12  |
         * @summary Get Statement Details
         * @param {string} contentType 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalAccountDetailsStatementGet: async (contentType: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'contentType' is not null or undefined
            if (contentType === null || contentType === undefined) {
                throw new RequiredError('contentType','Required parameter contentType was null or undefined when calling v1ExternalAccountDetailsStatementGet.');
            }
            const localVarPath = `/v1/external/account/details/statement`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (contentType !== undefined && contentType !== null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * StatementDetailsApi - functional programming interface
 * @export
 */
export const StatementDetailsApiFp = function(configuration?: Configuration) {
    return {
        /**
         * Use this API to get the account statement details of your Shiprocket account. No parameters are required to access this API. However, you sort and filter the data displayed using the optional parameters.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |              **DESCRIPTION**              | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:----------------------------------------: |:-----------: | |   ` page`     |      NO       |    *integer*    |   The page number you want to display.    |      5       | | `per_page`  |      NO       |    *integer*    | The number of orders to get per request.  |      2       | |    `from`     |      NO       |    *string*     |           From a specific date.           |  2017-08-12  | |     `to`      |      NO       |    *string*     |            To a specific date.            |  2017-09-12  |
         * @summary Get Statement Details
         * @param {string} contentType 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalAccountDetailsStatementGet(contentType: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20048>> {
            const localVarAxiosArgs = await StatementDetailsApiAxiosParamCreator(configuration).v1ExternalAccountDetailsStatementGet(contentType, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * StatementDetailsApi - factory interface
 * @export
 */
export const StatementDetailsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * Use this API to get the account statement details of your Shiprocket account. No parameters are required to access this API. However, you sort and filter the data displayed using the optional parameters.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |              **DESCRIPTION**              | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:----------------------------------------: |:-----------: | |   ` page`     |      NO       |    *integer*    |   The page number you want to display.    |      5       | | `per_page`  |      NO       |    *integer*    | The number of orders to get per request.  |      2       | |    `from`     |      NO       |    *string*     |           From a specific date.           |  2017-08-12  | |     `to`      |      NO       |    *string*     |            To a specific date.            |  2017-09-12  |
         * @summary Get Statement Details
         * @param {string} contentType 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalAccountDetailsStatementGet(contentType: string, options?: any): AxiosPromise<InlineResponse20048> {
            return StatementDetailsApiFp(configuration).v1ExternalAccountDetailsStatementGet(contentType, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * StatementDetailsApi - interface
 * @export
 * @interface StatementDetailsApi
 */
export interface StatementDetailsApiInterface {
    /**
     * Use this API to get the account statement details of your Shiprocket account. No parameters are required to access this API. However, you sort and filter the data displayed using the optional parameters.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |              **DESCRIPTION**              | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:----------------------------------------: |:-----------: | |   ` page`     |      NO       |    *integer*    |   The page number you want to display.    |      5       | | `per_page`  |      NO       |    *integer*    | The number of orders to get per request.  |      2       | |    `from`     |      NO       |    *string*     |           From a specific date.           |  2017-08-12  | |     `to`      |      NO       |    *string*     |            To a specific date.            |  2017-09-12  |
     * @summary Get Statement Details
     * @param {string} contentType 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StatementDetailsApiInterface
     */
    v1ExternalAccountDetailsStatementGet(contentType: string, options?: any): AxiosPromise<InlineResponse20048>;

}

/**
 * StatementDetailsApi - object-oriented interface
 * @export
 * @class StatementDetailsApi
 * @extends {BaseAPI}
 */
export class StatementDetailsApi extends BaseAPI implements StatementDetailsApiInterface {
    /**
     * Use this API to get the account statement details of your Shiprocket account. No parameters are required to access this API. However, you sort and filter the data displayed using the optional parameters.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |              **DESCRIPTION**              | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:----------------------------------------: |:-----------: | |   ` page`     |      NO       |    *integer*    |   The page number you want to display.    |      5       | | `per_page`  |      NO       |    *integer*    | The number of orders to get per request.  |      2       | |    `from`     |      NO       |    *string*     |           From a specific date.           |  2017-08-12  | |     `to`      |      NO       |    *string*     |            To a specific date.            |  2017-09-12  |
     * @summary Get Statement Details
     * @param {string} contentType 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StatementDetailsApi
     */
    public v1ExternalAccountDetailsStatementGet(contentType: string, options?: any) {
        return StatementDetailsApiFp(this.configuration).v1ExternalAccountDetailsStatementGet(contentType, options).then((request) => request(this.axios, this.basePath));
    }

}
