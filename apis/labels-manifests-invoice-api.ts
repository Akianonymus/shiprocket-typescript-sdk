// tslint:disable
/**
 * shiprocket
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as globalImportUrl from 'url';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { InlineResponse20018 } from '../models';
// @ts-ignore
import { InlineResponse20019 } from '../models';
// @ts-ignore
import { InlineResponse20020 } from '../models';
// @ts-ignore
import { InlineResponse20021 } from '../models';
// @ts-ignore
import { InlineResponse4001 } from '../models';
// @ts-ignore
import { InlineResponse4002 } from '../models';
// @ts-ignore
import { InlineResponse403 } from '../models';
// @ts-ignore
import { InlineResponse4225 } from '../models';
/**
 * LabelsManifestsInvoiceApi - axios parameter creator
 * @export
 */
export const LabelsManifestsInvoiceApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Generate the label of order by passing the shipment id in the form of an array. This API displays the URL of the generated label.  **Note:** - The AWB must be assigned to the shipment to generate the label. - \'shipment_id\' must be passed as an array.  #### Parameters:  |  **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                  **DESCRIPTION**                                                  |     **EXAMPLE**      | |:-----------: |:------------: |:--------------: |:----------------------------------------------------------------------------------------------------------------: |:-------------------: | | `shipment_id`  |      YES      |    *integer*    |  The shipment id of the order whose label is to be generated.   Multiple ids can be passed together as an array.  | [16104408,16104409]  |
         * @summary Generate Label
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalCourierGenerateLabelPost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/courier/generate/label`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Using this API, you can generate the manifest for your order. This API generates the manifest and displays the download URL of the same.  **Note:** - Multiple ids can also be passed as an array for bulk generation of manifests. - AWB must be assigned and pickup requested on the shipment id to generate manifest.  #### Parameters:  |  **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                       **DESCRIPTION**                                       | **EXAMPLE**  | |:-----------: |:------------: |:--------------: |:------------------------------------------------------------------------------------------: |:-----------: | | `shipment_id`  |      YES      |    *integer*    | The shipment id of the order. Multiple ids can be passed as an array, separated by commas.  |  [16090109]  |
         * @summary Generate Manifest
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalManifestsGeneratePost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/manifests/generate`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Use this API to print the generated manifest of orders at an individual level.  **Note** - Manifest needs to be generated first for this API to print it. Use the \'Generate Manifest\' API to do the same. - Multiple order ids can be passed together.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                 **DESCRIPTION**                                                 | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:--------------------------------------------------------------------------------------------------------------: |:-----------: | |  `order_ids`  |      YES      |    *integer*    | The Shiprocket order id of whose manifest is to be generated. Multiple ids can be passed together as an array.  |  [16090109]  |
         * @summary Print Manifest
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalManifestsPrintPost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/manifests/print`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Use this API to generate the invoice for your order by passing the respective Shiprocket order ids.  The generated invoice URL is displayed as a response. Multiple ids can be passed together as an array.  **Note** - Order ids must be passed as an array.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                      **DESCRIPTION**                                                       |     **EXAMPLE**      | |:----------: |:------------: |:--------------: |:-------------------------------------------------------------------------------------------------------------------------: |:-------------------: | |     `ids`     |      YES      |    *integer*    |  The Shiprocket order id of the orders whose invoices are to be created. Multiple ids can be passed together as an array.  | [16255275,16255276]  |
         * @summary Generate Invoice
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersPrintInvoicePost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/orders/print/invoice`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * LabelsManifestsInvoiceApi - functional programming interface
 * @export
 */
export const LabelsManifestsInvoiceApiFp = function(configuration?: Configuration) {
    return {
        /**
         * Generate the label of order by passing the shipment id in the form of an array. This API displays the URL of the generated label.  **Note:** - The AWB must be assigned to the shipment to generate the label. - \'shipment_id\' must be passed as an array.  #### Parameters:  |  **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                  **DESCRIPTION**                                                  |     **EXAMPLE**      | |:-----------: |:------------: |:--------------: |:----------------------------------------------------------------------------------------------------------------: |:-------------------: | | `shipment_id`  |      YES      |    *integer*    |  The shipment id of the order whose label is to be generated.   Multiple ids can be passed together as an array.  | [16104408,16104409]  |
         * @summary Generate Label
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalCourierGenerateLabelPost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20020>> {
            const localVarAxiosArgs = await LabelsManifestsInvoiceApiAxiosParamCreator(configuration).v1ExternalCourierGenerateLabelPost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Using this API, you can generate the manifest for your order. This API generates the manifest and displays the download URL of the same.  **Note:** - Multiple ids can also be passed as an array for bulk generation of manifests. - AWB must be assigned and pickup requested on the shipment id to generate manifest.  #### Parameters:  |  **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                       **DESCRIPTION**                                       | **EXAMPLE**  | |:-----------: |:------------: |:--------------: |:------------------------------------------------------------------------------------------: |:-----------: | | `shipment_id`  |      YES      |    *integer*    | The shipment id of the order. Multiple ids can be passed as an array, separated by commas.  |  [16090109]  |
         * @summary Generate Manifest
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalManifestsGeneratePost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20018>> {
            const localVarAxiosArgs = await LabelsManifestsInvoiceApiAxiosParamCreator(configuration).v1ExternalManifestsGeneratePost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Use this API to print the generated manifest of orders at an individual level.  **Note** - Manifest needs to be generated first for this API to print it. Use the \'Generate Manifest\' API to do the same. - Multiple order ids can be passed together.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                 **DESCRIPTION**                                                 | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:--------------------------------------------------------------------------------------------------------------: |:-----------: | |  `order_ids`  |      YES      |    *integer*    | The Shiprocket order id of whose manifest is to be generated. Multiple ids can be passed together as an array.  |  [16090109]  |
         * @summary Print Manifest
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalManifestsPrintPost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20019>> {
            const localVarAxiosArgs = await LabelsManifestsInvoiceApiAxiosParamCreator(configuration).v1ExternalManifestsPrintPost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Use this API to generate the invoice for your order by passing the respective Shiprocket order ids.  The generated invoice URL is displayed as a response. Multiple ids can be passed together as an array.  **Note** - Order ids must be passed as an array.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                      **DESCRIPTION**                                                       |     **EXAMPLE**      | |:----------: |:------------: |:--------------: |:-------------------------------------------------------------------------------------------------------------------------: |:-------------------: | |     `ids`     |      YES      |    *integer*    |  The Shiprocket order id of the orders whose invoices are to be created. Multiple ids can be passed together as an array.  | [16255275,16255276]  |
         * @summary Generate Invoice
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersPrintInvoicePost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20021>> {
            const localVarAxiosArgs = await LabelsManifestsInvoiceApiAxiosParamCreator(configuration).v1ExternalOrdersPrintInvoicePost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * LabelsManifestsInvoiceApi - factory interface
 * @export
 */
export const LabelsManifestsInvoiceApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * Generate the label of order by passing the shipment id in the form of an array. This API displays the URL of the generated label.  **Note:** - The AWB must be assigned to the shipment to generate the label. - \'shipment_id\' must be passed as an array.  #### Parameters:  |  **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                  **DESCRIPTION**                                                  |     **EXAMPLE**      | |:-----------: |:------------: |:--------------: |:----------------------------------------------------------------------------------------------------------------: |:-------------------: | | `shipment_id`  |      YES      |    *integer*    |  The shipment id of the order whose label is to be generated.   Multiple ids can be passed together as an array.  | [16104408,16104409]  |
         * @summary Generate Label
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalCourierGenerateLabelPost(body?: string, options?: any): AxiosPromise<InlineResponse20020> {
            return LabelsManifestsInvoiceApiFp(configuration).v1ExternalCourierGenerateLabelPost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * Using this API, you can generate the manifest for your order. This API generates the manifest and displays the download URL of the same.  **Note:** - Multiple ids can also be passed as an array for bulk generation of manifests. - AWB must be assigned and pickup requested on the shipment id to generate manifest.  #### Parameters:  |  **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                       **DESCRIPTION**                                       | **EXAMPLE**  | |:-----------: |:------------: |:--------------: |:------------------------------------------------------------------------------------------: |:-----------: | | `shipment_id`  |      YES      |    *integer*    | The shipment id of the order. Multiple ids can be passed as an array, separated by commas.  |  [16090109]  |
         * @summary Generate Manifest
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalManifestsGeneratePost(body?: string, options?: any): AxiosPromise<InlineResponse20018> {
            return LabelsManifestsInvoiceApiFp(configuration).v1ExternalManifestsGeneratePost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * Use this API to print the generated manifest of orders at an individual level.  **Note** - Manifest needs to be generated first for this API to print it. Use the \'Generate Manifest\' API to do the same. - Multiple order ids can be passed together.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                 **DESCRIPTION**                                                 | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:--------------------------------------------------------------------------------------------------------------: |:-----------: | |  `order_ids`  |      YES      |    *integer*    | The Shiprocket order id of whose manifest is to be generated. Multiple ids can be passed together as an array.  |  [16090109]  |
         * @summary Print Manifest
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalManifestsPrintPost(body?: string, options?: any): AxiosPromise<InlineResponse20019> {
            return LabelsManifestsInvoiceApiFp(configuration).v1ExternalManifestsPrintPost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * Use this API to generate the invoice for your order by passing the respective Shiprocket order ids.  The generated invoice URL is displayed as a response. Multiple ids can be passed together as an array.  **Note** - Order ids must be passed as an array.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                      **DESCRIPTION**                                                       |     **EXAMPLE**      | |:----------: |:------------: |:--------------: |:-------------------------------------------------------------------------------------------------------------------------: |:-------------------: | |     `ids`     |      YES      |    *integer*    |  The Shiprocket order id of the orders whose invoices are to be created. Multiple ids can be passed together as an array.  | [16255275,16255276]  |
         * @summary Generate Invoice
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersPrintInvoicePost(body?: string, options?: any): AxiosPromise<InlineResponse20021> {
            return LabelsManifestsInvoiceApiFp(configuration).v1ExternalOrdersPrintInvoicePost(body, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * LabelsManifestsInvoiceApi - interface
 * @export
 * @interface LabelsManifestsInvoiceApi
 */
export interface LabelsManifestsInvoiceApiInterface {
    /**
     * Generate the label of order by passing the shipment id in the form of an array. This API displays the URL of the generated label.  **Note:** - The AWB must be assigned to the shipment to generate the label. - \'shipment_id\' must be passed as an array.  #### Parameters:  |  **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                  **DESCRIPTION**                                                  |     **EXAMPLE**      | |:-----------: |:------------: |:--------------: |:----------------------------------------------------------------------------------------------------------------: |:-------------------: | | `shipment_id`  |      YES      |    *integer*    |  The shipment id of the order whose label is to be generated.   Multiple ids can be passed together as an array.  | [16104408,16104409]  |
     * @summary Generate Label
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsManifestsInvoiceApiInterface
     */
    v1ExternalCourierGenerateLabelPost(body?: string, options?: any): AxiosPromise<InlineResponse20020>;

    /**
     * Using this API, you can generate the manifest for your order. This API generates the manifest and displays the download URL of the same.  **Note:** - Multiple ids can also be passed as an array for bulk generation of manifests. - AWB must be assigned and pickup requested on the shipment id to generate manifest.  #### Parameters:  |  **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                       **DESCRIPTION**                                       | **EXAMPLE**  | |:-----------: |:------------: |:--------------: |:------------------------------------------------------------------------------------------: |:-----------: | | `shipment_id`  |      YES      |    *integer*    | The shipment id of the order. Multiple ids can be passed as an array, separated by commas.  |  [16090109]  |
     * @summary Generate Manifest
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsManifestsInvoiceApiInterface
     */
    v1ExternalManifestsGeneratePost(body?: string, options?: any): AxiosPromise<InlineResponse20018>;

    /**
     * Use this API to print the generated manifest of orders at an individual level.  **Note** - Manifest needs to be generated first for this API to print it. Use the \'Generate Manifest\' API to do the same. - Multiple order ids can be passed together.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                 **DESCRIPTION**                                                 | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:--------------------------------------------------------------------------------------------------------------: |:-----------: | |  `order_ids`  |      YES      |    *integer*    | The Shiprocket order id of whose manifest is to be generated. Multiple ids can be passed together as an array.  |  [16090109]  |
     * @summary Print Manifest
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsManifestsInvoiceApiInterface
     */
    v1ExternalManifestsPrintPost(body?: string, options?: any): AxiosPromise<InlineResponse20019>;

    /**
     * Use this API to generate the invoice for your order by passing the respective Shiprocket order ids.  The generated invoice URL is displayed as a response. Multiple ids can be passed together as an array.  **Note** - Order ids must be passed as an array.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                      **DESCRIPTION**                                                       |     **EXAMPLE**      | |:----------: |:------------: |:--------------: |:-------------------------------------------------------------------------------------------------------------------------: |:-------------------: | |     `ids`     |      YES      |    *integer*    |  The Shiprocket order id of the orders whose invoices are to be created. Multiple ids can be passed together as an array.  | [16255275,16255276]  |
     * @summary Generate Invoice
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsManifestsInvoiceApiInterface
     */
    v1ExternalOrdersPrintInvoicePost(body?: string, options?: any): AxiosPromise<InlineResponse20021>;

}

/**
 * LabelsManifestsInvoiceApi - object-oriented interface
 * @export
 * @class LabelsManifestsInvoiceApi
 * @extends {BaseAPI}
 */
export class LabelsManifestsInvoiceApi extends BaseAPI implements LabelsManifestsInvoiceApiInterface {
    /**
     * Generate the label of order by passing the shipment id in the form of an array. This API displays the URL of the generated label.  **Note:** - The AWB must be assigned to the shipment to generate the label. - \'shipment_id\' must be passed as an array.  #### Parameters:  |  **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                  **DESCRIPTION**                                                  |     **EXAMPLE**      | |:-----------: |:------------: |:--------------: |:----------------------------------------------------------------------------------------------------------------: |:-------------------: | | `shipment_id`  |      YES      |    *integer*    |  The shipment id of the order whose label is to be generated.   Multiple ids can be passed together as an array.  | [16104408,16104409]  |
     * @summary Generate Label
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsManifestsInvoiceApi
     */
    public v1ExternalCourierGenerateLabelPost(body?: string, options?: any) {
        return LabelsManifestsInvoiceApiFp(this.configuration).v1ExternalCourierGenerateLabelPost(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Using this API, you can generate the manifest for your order. This API generates the manifest and displays the download URL of the same.  **Note:** - Multiple ids can also be passed as an array for bulk generation of manifests. - AWB must be assigned and pickup requested on the shipment id to generate manifest.  #### Parameters:  |  **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                       **DESCRIPTION**                                       | **EXAMPLE**  | |:-----------: |:------------: |:--------------: |:------------------------------------------------------------------------------------------: |:-----------: | | `shipment_id`  |      YES      |    *integer*    | The shipment id of the order. Multiple ids can be passed as an array, separated by commas.  |  [16090109]  |
     * @summary Generate Manifest
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsManifestsInvoiceApi
     */
    public v1ExternalManifestsGeneratePost(body?: string, options?: any) {
        return LabelsManifestsInvoiceApiFp(this.configuration).v1ExternalManifestsGeneratePost(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Use this API to print the generated manifest of orders at an individual level.  **Note** - Manifest needs to be generated first for this API to print it. Use the \'Generate Manifest\' API to do the same. - Multiple order ids can be passed together.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                 **DESCRIPTION**                                                 | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:--------------------------------------------------------------------------------------------------------------: |:-----------: | |  `order_ids`  |      YES      |    *integer*    | The Shiprocket order id of whose manifest is to be generated. Multiple ids can be passed together as an array.  |  [16090109]  |
     * @summary Print Manifest
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsManifestsInvoiceApi
     */
    public v1ExternalManifestsPrintPost(body?: string, options?: any) {
        return LabelsManifestsInvoiceApiFp(this.configuration).v1ExternalManifestsPrintPost(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Use this API to generate the invoice for your order by passing the respective Shiprocket order ids.  The generated invoice URL is displayed as a response. Multiple ids can be passed together as an array.  **Note** - Order ids must be passed as an array.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                                                      **DESCRIPTION**                                                       |     **EXAMPLE**      | |:----------: |:------------: |:--------------: |:-------------------------------------------------------------------------------------------------------------------------: |:-------------------: | |     `ids`     |      YES      |    *integer*    |  The Shiprocket order id of the orders whose invoices are to be created. Multiple ids can be passed together as an array.  | [16255275,16255276]  |
     * @summary Generate Invoice
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LabelsManifestsInvoiceApi
     */
    public v1ExternalOrdersPrintInvoicePost(body?: string, options?: any) {
        return LabelsManifestsInvoiceApiFp(this.configuration).v1ExternalOrdersPrintInvoicePost(body, options).then((request) => request(this.axios, this.basePath));
    }

}
