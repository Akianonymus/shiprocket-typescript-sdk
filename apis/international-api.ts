// tslint:disable
/**
 * shiprocket
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as globalImportUrl from 'url';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { InlineObject2 } from '../models';
// @ts-ignore
import { InlineObject4 } from '../models';
// @ts-ignore
import { InlineObject5 } from '../models';
// @ts-ignore
import { InlineObject6 } from '../models';
// @ts-ignore
import { InlineObject7 } from '../models';
// @ts-ignore
import { InlineObject8 } from '../models';
// @ts-ignore
import { InlineResponse20018 } from '../models';
// @ts-ignore
import { InlineResponse2003 } from '../models';
// @ts-ignore
import { InlineResponse20030 } from '../models';
// @ts-ignore
import { InlineResponse20031 } from '../models';
// @ts-ignore
import { InlineResponse20032 } from '../models';
// @ts-ignore
import { InlineResponse20033 } from '../models';
// @ts-ignore
import { InlineResponse20034 } from '../models';
// @ts-ignore
import { InlineResponse20035 } from '../models';
// @ts-ignore
import { InlineResponse2004 } from '../models';
// @ts-ignore
import { InlineResponse4001 } from '../models';
// @ts-ignore
import { InlineResponse403 } from '../models';
// @ts-ignore
import { InlineResponse4229 } from '../models';
/**
 * InternationalApi - axios parameter creator
 * @export
 */
export const InternationalApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Use this API to create a pickup request for your order shipment. The API returns the pickup status along with the estimated pickup time.   You will have to call the \'Generate Manifest\' API after the successful response of this API.  **Note:**  *   The AWB must be already generated for the shipment id to generate the pickup request. *   Only one shipment_id can be passed at a time.       | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the shipment which is requested for pickup. | 1603434 | | status | no | string | Use this field to retry if the pickup request fails. Value: retry | retry |
         * @summary Generate Pickup
         * @param {string} accept 
         * @param {InlineObject2} [inlineObject2] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalCourierGeneratePickupPost: async (accept: string, inlineObject2?: InlineObject2, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'accept' is not null or undefined
            if (accept === null || accept === undefined) {
                throw new RequiredError('accept','Required parameter accept was null or undefined when calling v1ExternalCourierGeneratePickupPost.');
            }
            const localVarPath = `/v1/external/courier/generate/pickup`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (accept !== undefined && accept !== null) {
                localVarHeaderParameter['accept'] = String(accept);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof inlineObject2 !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(inlineObject2 !== undefined ? inlineObject2 : {}) : (inlineObject2 || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API can be used to assign the AWB (Air Waybill Number) to your shipment. The AWB is a unique number that helps you track the shipment and get details about it.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the order you want to create the AWB for. | 1603434 | | courier_id | no | integer | The courier id of the courier service you want to select. The default courier is selected in case no id is specified. | 35 | | status | no | string | Use this to change the courier of a shipment. Value: reassign. Note that this can be done only once in 24 hours. | reassign | |  |  |  |  |  |
         * @summary AWB Assignment
         * @param {string} accept 
         * @param {InlineObject7} [inlineObject7] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalCourierAssignAwbPost: async (accept: string, inlineObject7?: InlineObject7, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'accept' is not null or undefined
            if (accept === null || accept === undefined) {
                throw new RequiredError('accept','Required parameter accept was null or undefined when calling v1ExternalInternationalCourierAssignAwbPost.');
            }
            const localVarPath = `/v1/external/international/courier/assign/awb`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (accept !== undefined && accept !== null) {
                localVarHeaderParameter['accept'] = String(accept);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof inlineObject7 !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(inlineObject7 !== undefined ? inlineObject7 : {}) : (inlineObject7 || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API checks courier serviceability for international orders and displays them as a list.  **Notes:**  - \'cod\' field must be 0 as COD is not available for international orders.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `weight` | YES | _integer_ | The weight of the shipment. | 10 | | `cod` | YES | _integer_ | Cash on delivery status. Must be 0. | 0 | | `delivery_country` | YES | _string_ | The destination country ISO Alpha 2 code. | US | | `order_id` | NO | _integer_ | The Shiprocket order_id of the shipment if available. | 1 | | `pickup_postcode` | NO | _integer_ | Use this field to select a different pickup postcode other than the primary pickup address. | 2 |
         * @summary Serviceability
         * @param {string} orderId 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalCourierServiceabilityGet: async (orderId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'orderId' is not null or undefined
            if (orderId === null || orderId === undefined) {
                throw new RequiredError('orderId','Required parameter orderId was null or undefined when calling v1ExternalInternationalCourierServiceabilityGet.');
            }
            const localVarPath = `/v1/external/international/courier/serviceability`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (orderId !== undefined) {
                localVarQueryParameter['order_id'] = orderId;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Use this API to create a pickup request for your order shipment. The API returns the pickup status along with the estimated pickup time.   You will have to call the \'Generate Manifest\' API after the successful response of this API.  **Note:**  *   The AWB must be already generated for the shipment id to generate the pickup request. *   Only one shipment_id can be passed at a time.       | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the shipment which is requested for pickup. | 1603434 | | status | no | string | Use this field to retry if the pickup request fails. Value: retry | retry |
         * @summary Manifest Generation
         * @param {InlineObject8} [inlineObject8] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalManifestsGeneratePost: async (inlineObject8?: InlineObject8, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/international/manifests/generate`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof inlineObject8 !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(inlineObject8 !== undefined ? inlineObject8 : {}) : (inlineObject8 || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Use this API to create a quick custom order. Quick orders are the ones where we do not store the product details in the master catalogue.  You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  **Note:**  - In case the \'shipping_is_billing\' field is false, further shipping detail fields are required.       If no channel id is passed, the order will be assigned to the default custom channel. If the channel id is not known, use the \'Get All Channels\' API to get the list of all integrated channels in your Shiprocket account.  - order_id field cannot be equal to an already existing id. Doing so does not change or affect the existing order. - New orders cannot be created with order id\'s same as that of cancelled orders. If error 422 shows up despite filling in the correct details, consider changing the order_id. - Be sure to input the correct calculated sub_total amount. The total is not calculated automatically through the API. - The \'order_id\' returned in the response is the Shiprocket order_id. Please save this order ID as we will use this in future API calls.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `order_id` | YES | _string_ | The order id you want to specify to the order. Max char: 50. (Avoid passing character values as this contradicts some other API calls). | 224477 or 224-477 | | `order_date` | YES | _string_ | The date of order creation in yyyy-mm-dd format. Time is additional. | 2019-07-24 11:11 | | `pickup_location` | YES | _string_ | The name of the pickup location added in your Shiprocket account. This cannot be a new location. | Jammu | | `channel_id` | NO | _integer_ | Mention this in case you need to assign the order to a particular channel. Deafult is \'Custom\'. | 27022 | | `comment` | NO | _string_ | Option to add \'From\' field to the shipment. To do this, enter the name in the following format: \'Reseller: \\[name\\]\'. | Reseller: Divine | | `reseller_name` | NO | _string_ | The \'from\' name if you want to print. Use \'Reseller: \\[name\\]\' | Reseller: Divine | | `company_name` | NO | _string_ | Name of the company. | Amazon | | `billing_customer_name` | YES | _string_ | First name of the billed customer. | John | | `billing_last_name` | NO | _string_ | Last name of the billed customer. | Doe | | `billing_address` | NO | _string_ | address details of the billed customer. | Civil line, House 20 | | `billing_address_2` | NO | _string_ | Further address details of the billed customer. | Near Hokage House | | `billing_city` | YES | _string_ | Billing address city. Max char: 30. | New Delhi | | `billing_pincode` | YES | _integer_ | Pincode of the billing address. | 110002 | | `billing_state` | YES | _string_ | Billing address state. | Delhi | | `billing_country` | YES | _string_ | Billing address country. | India | | `billing_email` | YES | _string_ | Email address of the billed customer. | [John@doe.com](mailto:John@doe.com) | | `billing_phone` | YES | _integer_ | The phone number of the billing customer. | 9856321472 | | `billing_alternate_phone` | NO | _integer_ | Alternate phone number of the billing customer. | 8604690454 | | `shipping_is_billing` | YES | _boolean_ | Whether the shipping address is the same as billing address. 1 or \'true\' for yes and 0 or \'false\' for no. | true | | `shipping_customer_name` | CONDITIONAL YES | _string_ | Name of the customer the order is shipped to. Required in case billing is not same as shipping. | Jane | | `shipping_last_name` | NO | _string_ | Last name of the shipping customer. | Doe | | `shipping_address` | CONDITIONAL YES | _string_ | Address of the Shipping customer. Required in case billing is not same as shipping. | Lane number 69 | | `shipping_address_2` | NO | _string_ | Further address details of shipping customer. | Andheri | | `billing_isd_code` | NO | _string_ | ISD code of the billing address. | +91 | | `shipping_city` | CONDITIONAL YES | _string_ | Shipping address city. | Mumbai | | `shipping_pincode` | CONDITIONAL YES | _integer_ | Shipping address pincode. | 200912 | | `shipping_country` | CONDITIONAL YES | _string_ | Shipping address country. | India | | `shipping_state` | CONDITIONAL YES | _string_ | Shipping address state. | Maharashtra | | `shipping_email` | CONDITIONAL YES | _string_ | Email of the shipping customer. | [Jane@doe.com](mailto:Jane@doe.com) | | `shipping_phone` | CONDITIONAL YES | _integer_ | Phone no. of the shipping customer. |  | | `longitude` | NO | _float_ | Destination (Shipping address) Longitude. | 69.0747 | | `latitude` | NO | _float_ | Destination (Shipping address) Latitude | 22.4064 | | `order_items` | YES | / | List of items and their relevant fields in the form of Array. | / | | `name` | YES | _string_ | Name of the product. | Jeans | | `sku` | YES | _string_ | The sku id of the product. | cbs123 | | `units` | YES | _integer_ | No of units that are to be shipped. | 10 | | `selling_price` | YES | _integer_ | The selling price per unit in Rupee. Inclusive of GST. | 900 | | `discount` | NO | _integer_ | The discount amount in Rupee. Inclusive of tax. | 10 | | `tax` | NO | _integer_ | The tax percentage on the item. | 5 | | `hsn` | NO | _integer_ | Harmonised System Nomenclature code. Used to determine the category of taxation the goods fall under. | 44122 | | `payment_method` | YES | _string_ | The method of payment. Can be either COD (Cash on delivery) Or Prepaid. | COD | | `shipping_charges` | NO | _integer_ | Shipping charges if any in Rupee. | 5 | | `giftwrap_charges` | NO | _integer_ | Giftwrap charges if any in Rupee. | 5 | | `transaction_charges` | NO | _integer_ | Transaction charges if any in Rupee. | 5 | | `total_discount` | NO | _integer_ | The total discount amount in Rupee. | 15 | | `sub_total` | YES | _integer_ | Calculated sub total amount in Rupee after deductions. | 9010 | | `length` | YES | _float_ | The length of the item in cms. Must be more than 0.5. | 10 | | `breadth` | YES | _float_ | The breadth of the item in cms. Must be more than 0.5. | 10 | | `height` | YES | _float_ | The height of the item in cms. Must be more than 0.5. | 10 | | `weight` | YES | _float_ | The weight of the item in kgs. Must be more than 0. | 2.5 | | `ewaybill_no` | NO | _string_ | Details relating to the shipment of goods. . | K92373490 | | `customer_gstin` | NO | _string_ | Goods and Services Tax Identification Number. | 29ABCDE1234F2Z5 | | `invoice_number` | NO | _string_ |  |  | | `order_type` | NO | _string_ | Key to differentiate between Essentials or Non Essentials Shipments. Order type can only be ESSENTIALS or NON ESSENTIALS. Please note it is case sensitive and blank values are allowed. | ESSENTIALS | | `checkout_shipping_method` | NO | _string_ | Only for SRF users.  <br> | a. SR_RUSH: SDD, NDD  <br>b. SR_STANDARD: Surface Delivery  <br>c. SR_EXPRESS: Air Delivery  <br>d. SR_QUICK: 3 hrs delivery | | `what3words_address` | NO | _string_ | What3words is a proprietary geocode system designed to identify any location on the surface of Earth with a resolution of about 3 meters. The system encodes geographic coordinates into three permanently fixed dictionary words. | toddler.geologist.animated | | purpose_of_shipment | NO | interger | The purpose of the shipment. values are 0 - gift, 1- sample, commercial - 2. | 1 | | currency | YES | string | The currency of the order. Possible values are INR,USD,GBP, EUR, AUD, CAD, SAR, AED,SGD | USD | | reasonOfExport | YES | integer | The reason for the export. Possible values are 0 - BONAFIDE_SAMPLE, 1 - SAMPLE, 2 - GIFT, 3 - COMMERCIAL | 2 | | commodity | NO | boolean | Indicates if the order is a commodity or not | true | | mies | NO |  |  | true | | igstPaymentStatus | NO | char | possible values are \'A\'- not applicable, \'B\'- LUT or Export under Bond, \'C\'- Export Against Payment of IGST | A | | Terms_Of_Invoice | YES | string | FOB and CIF | FOB | | ioss | YES | string |  |  | | eori | YES | string |  |  |
         * @summary Create order
         * @param {InlineObject5} [inlineObject5] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalOrdersCreateAdhocPost: async (inlineObject5?: InlineObject5, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/international/orders/create/adhoc`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof inlineObject5 !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(inlineObject5 !== undefined ? inlineObject5 : {}) : (inlineObject5 || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Use this API to update your orders. You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  You can update only the order_items details before assigning the AWB (before Ready to Ship status). You can only update these key-value pairs i.e increase/decrease the quantity, update tax/discount, add/remove product items. Some params specific to international order are.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | purpose_of_shipment | NO | interger | The purpose of the shipment. values are 0 - gift, 1- sample, commercial - 2. | 1 | | currency | YES | string | The currency of the order. Possible values are INR,USD,GBP, EUR, AUD, CAD, SAR, AED,SGD | USD | | reasonOfExport | No | integer | The reason for the export. Possible values are 0 - BONAFIDE_SAMPLE, 1 - SAMPLE, 2 - GIFT, 3 - COMMERCIAL | 2 | | commodity | NO | boolean | Indicates if the order is a commodity or not | true | | mies | No | boolean |  | true | | igstPaymentStatus | YES | char | possible values are \'A\'- not applicable, \'B\'- LUT or Export under Bond, \'C\'- Export Against Payment of IGST | A | | Terms_Of_Invoice | no | string | The term of invoice either FOB and CIF | FOB |
         * @summary Update order
         * @param {InlineObject6} [inlineObject6] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalOrdersUpdateAdhocPost: async (inlineObject6?: InlineObject6, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/international/orders/update/adhoc`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof inlineObject6 !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(inlineObject6 !== undefined ? inlineObject6 : {}) : (inlineObject6 || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ThisdocumentationprovidesinformationabouttheBankDetailsAPI,whichallowsyouto   addbankdetailsforinternationalsettings.TheAPIendpoint, parameters, request sample   data, success response , and failed response are outlined below.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | bank_account_type | YES | string | ankaccounttype.Mustbe  <br>either\"saving\"or\"current\". | \"saving\" | | beneficiary_name | YES | string | Beneficiaryname.  <br>Alphabetsandspacesonly | \"JohnDoe\" | | bank_ifsc_code | YES | string | BankIFSCcode.Must  <br>followaspecificpattern | \"ABCD0123456\" | | bank_account_number | YES | integer | Bankaccountnumber.  <br>Shouldbebetween9and  <br>18digits. | 1234567890 |
         * @summary Add Bank Details
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalSettingsAddBankDetailsPost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/international/settings/add-bank-details`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Use this API for your international KYC. This API return your KYC status.   Please check the documentation for the documents for KYC.  | PARAMS | REQUIRED DATA | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | organization_type | Yes | string | Seller organization | company | | ip_address | Yes | int unsigned | Seller\'s ip_address | 192.168.1.1.0 | | documents | Yes | array | Documentaion for organization type  <br>(document size is not greater than 3 MB) | Please check request |
         * @summary International KYC
         * @param {InlineObject4} [inlineObject4] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalSettingsInternationalKycPost: async (inlineObject4?: InlineObject4, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/international/settings/international_kyc`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof inlineObject4 !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(inlineObject4 !== undefined ? inlineObject4 : {}) : (inlineObject4 || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Use this API to do multiple tasks in one go, namely creating a quick order, requesting its shipment, pickup generation generating the label and the manifest for the same order.  This API integrates several other APIs to perform all these tasks together.
         * @summary International Wrapper API
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalShipmentsCreateForwardShipmentPost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/international/shipments/create/forward-shipment`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * InternationalApi - functional programming interface
 * @export
 */
export const InternationalApiFp = function(configuration?: Configuration) {
    return {
        /**
         * Use this API to create a pickup request for your order shipment. The API returns the pickup status along with the estimated pickup time.   You will have to call the \'Generate Manifest\' API after the successful response of this API.  **Note:**  *   The AWB must be already generated for the shipment id to generate the pickup request. *   Only one shipment_id can be passed at a time.       | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the shipment which is requested for pickup. | 1603434 | | status | no | string | Use this field to retry if the pickup request fails. Value: retry | retry |
         * @summary Generate Pickup
         * @param {string} accept 
         * @param {InlineObject2} [inlineObject2] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalCourierGeneratePickupPost(accept: string, inlineObject2?: InlineObject2, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await InternationalApiAxiosParamCreator(configuration).v1ExternalCourierGeneratePickupPost(accept, inlineObject2, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * This API can be used to assign the AWB (Air Waybill Number) to your shipment. The AWB is a unique number that helps you track the shipment and get details about it.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the order you want to create the AWB for. | 1603434 | | courier_id | no | integer | The courier id of the courier service you want to select. The default courier is selected in case no id is specified. | 35 | | status | no | string | Use this to change the courier of a shipment. Value: reassign. Note that this can be done only once in 24 hours. | reassign | |  |  |  |  |  |
         * @summary AWB Assignment
         * @param {string} accept 
         * @param {InlineObject7} [inlineObject7] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalInternationalCourierAssignAwbPost(accept: string, inlineObject7?: InlineObject7, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20035>> {
            const localVarAxiosArgs = await InternationalApiAxiosParamCreator(configuration).v1ExternalInternationalCourierAssignAwbPost(accept, inlineObject7, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * This API checks courier serviceability for international orders and displays them as a list.  **Notes:**  - \'cod\' field must be 0 as COD is not available for international orders.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `weight` | YES | _integer_ | The weight of the shipment. | 10 | | `cod` | YES | _integer_ | Cash on delivery status. Must be 0. | 0 | | `delivery_country` | YES | _string_ | The destination country ISO Alpha 2 code. | US | | `order_id` | NO | _integer_ | The Shiprocket order_id of the shipment if available. | 1 | | `pickup_postcode` | NO | _integer_ | Use this field to select a different pickup postcode other than the primary pickup address. | 2 |
         * @summary Serviceability
         * @param {string} orderId 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalInternationalCourierServiceabilityGet(orderId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20034>> {
            const localVarAxiosArgs = await InternationalApiAxiosParamCreator(configuration).v1ExternalInternationalCourierServiceabilityGet(orderId, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Use this API to create a pickup request for your order shipment. The API returns the pickup status along with the estimated pickup time.   You will have to call the \'Generate Manifest\' API after the successful response of this API.  **Note:**  *   The AWB must be already generated for the shipment id to generate the pickup request. *   Only one shipment_id can be passed at a time.       | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the shipment which is requested for pickup. | 1603434 | | status | no | string | Use this field to retry if the pickup request fails. Value: retry | retry |
         * @summary Manifest Generation
         * @param {InlineObject8} [inlineObject8] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalInternationalManifestsGeneratePost(inlineObject8?: InlineObject8, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20018>> {
            const localVarAxiosArgs = await InternationalApiAxiosParamCreator(configuration).v1ExternalInternationalManifestsGeneratePost(inlineObject8, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Use this API to create a quick custom order. Quick orders are the ones where we do not store the product details in the master catalogue.  You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  **Note:**  - In case the \'shipping_is_billing\' field is false, further shipping detail fields are required.       If no channel id is passed, the order will be assigned to the default custom channel. If the channel id is not known, use the \'Get All Channels\' API to get the list of all integrated channels in your Shiprocket account.  - order_id field cannot be equal to an already existing id. Doing so does not change or affect the existing order. - New orders cannot be created with order id\'s same as that of cancelled orders. If error 422 shows up despite filling in the correct details, consider changing the order_id. - Be sure to input the correct calculated sub_total amount. The total is not calculated automatically through the API. - The \'order_id\' returned in the response is the Shiprocket order_id. Please save this order ID as we will use this in future API calls.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `order_id` | YES | _string_ | The order id you want to specify to the order. Max char: 50. (Avoid passing character values as this contradicts some other API calls). | 224477 or 224-477 | | `order_date` | YES | _string_ | The date of order creation in yyyy-mm-dd format. Time is additional. | 2019-07-24 11:11 | | `pickup_location` | YES | _string_ | The name of the pickup location added in your Shiprocket account. This cannot be a new location. | Jammu | | `channel_id` | NO | _integer_ | Mention this in case you need to assign the order to a particular channel. Deafult is \'Custom\'. | 27022 | | `comment` | NO | _string_ | Option to add \'From\' field to the shipment. To do this, enter the name in the following format: \'Reseller: \\[name\\]\'. | Reseller: Divine | | `reseller_name` | NO | _string_ | The \'from\' name if you want to print. Use \'Reseller: \\[name\\]\' | Reseller: Divine | | `company_name` | NO | _string_ | Name of the company. | Amazon | | `billing_customer_name` | YES | _string_ | First name of the billed customer. | John | | `billing_last_name` | NO | _string_ | Last name of the billed customer. | Doe | | `billing_address` | NO | _string_ | address details of the billed customer. | Civil line, House 20 | | `billing_address_2` | NO | _string_ | Further address details of the billed customer. | Near Hokage House | | `billing_city` | YES | _string_ | Billing address city. Max char: 30. | New Delhi | | `billing_pincode` | YES | _integer_ | Pincode of the billing address. | 110002 | | `billing_state` | YES | _string_ | Billing address state. | Delhi | | `billing_country` | YES | _string_ | Billing address country. | India | | `billing_email` | YES | _string_ | Email address of the billed customer. | [John@doe.com](mailto:John@doe.com) | | `billing_phone` | YES | _integer_ | The phone number of the billing customer. | 9856321472 | | `billing_alternate_phone` | NO | _integer_ | Alternate phone number of the billing customer. | 8604690454 | | `shipping_is_billing` | YES | _boolean_ | Whether the shipping address is the same as billing address. 1 or \'true\' for yes and 0 or \'false\' for no. | true | | `shipping_customer_name` | CONDITIONAL YES | _string_ | Name of the customer the order is shipped to. Required in case billing is not same as shipping. | Jane | | `shipping_last_name` | NO | _string_ | Last name of the shipping customer. | Doe | | `shipping_address` | CONDITIONAL YES | _string_ | Address of the Shipping customer. Required in case billing is not same as shipping. | Lane number 69 | | `shipping_address_2` | NO | _string_ | Further address details of shipping customer. | Andheri | | `billing_isd_code` | NO | _string_ | ISD code of the billing address. | +91 | | `shipping_city` | CONDITIONAL YES | _string_ | Shipping address city. | Mumbai | | `shipping_pincode` | CONDITIONAL YES | _integer_ | Shipping address pincode. | 200912 | | `shipping_country` | CONDITIONAL YES | _string_ | Shipping address country. | India | | `shipping_state` | CONDITIONAL YES | _string_ | Shipping address state. | Maharashtra | | `shipping_email` | CONDITIONAL YES | _string_ | Email of the shipping customer. | [Jane@doe.com](mailto:Jane@doe.com) | | `shipping_phone` | CONDITIONAL YES | _integer_ | Phone no. of the shipping customer. |  | | `longitude` | NO | _float_ | Destination (Shipping address) Longitude. | 69.0747 | | `latitude` | NO | _float_ | Destination (Shipping address) Latitude | 22.4064 | | `order_items` | YES | / | List of items and their relevant fields in the form of Array. | / | | `name` | YES | _string_ | Name of the product. | Jeans | | `sku` | YES | _string_ | The sku id of the product. | cbs123 | | `units` | YES | _integer_ | No of units that are to be shipped. | 10 | | `selling_price` | YES | _integer_ | The selling price per unit in Rupee. Inclusive of GST. | 900 | | `discount` | NO | _integer_ | The discount amount in Rupee. Inclusive of tax. | 10 | | `tax` | NO | _integer_ | The tax percentage on the item. | 5 | | `hsn` | NO | _integer_ | Harmonised System Nomenclature code. Used to determine the category of taxation the goods fall under. | 44122 | | `payment_method` | YES | _string_ | The method of payment. Can be either COD (Cash on delivery) Or Prepaid. | COD | | `shipping_charges` | NO | _integer_ | Shipping charges if any in Rupee. | 5 | | `giftwrap_charges` | NO | _integer_ | Giftwrap charges if any in Rupee. | 5 | | `transaction_charges` | NO | _integer_ | Transaction charges if any in Rupee. | 5 | | `total_discount` | NO | _integer_ | The total discount amount in Rupee. | 15 | | `sub_total` | YES | _integer_ | Calculated sub total amount in Rupee after deductions. | 9010 | | `length` | YES | _float_ | The length of the item in cms. Must be more than 0.5. | 10 | | `breadth` | YES | _float_ | The breadth of the item in cms. Must be more than 0.5. | 10 | | `height` | YES | _float_ | The height of the item in cms. Must be more than 0.5. | 10 | | `weight` | YES | _float_ | The weight of the item in kgs. Must be more than 0. | 2.5 | | `ewaybill_no` | NO | _string_ | Details relating to the shipment of goods. . | K92373490 | | `customer_gstin` | NO | _string_ | Goods and Services Tax Identification Number. | 29ABCDE1234F2Z5 | | `invoice_number` | NO | _string_ |  |  | | `order_type` | NO | _string_ | Key to differentiate between Essentials or Non Essentials Shipments. Order type can only be ESSENTIALS or NON ESSENTIALS. Please note it is case sensitive and blank values are allowed. | ESSENTIALS | | `checkout_shipping_method` | NO | _string_ | Only for SRF users.  <br> | a. SR_RUSH: SDD, NDD  <br>b. SR_STANDARD: Surface Delivery  <br>c. SR_EXPRESS: Air Delivery  <br>d. SR_QUICK: 3 hrs delivery | | `what3words_address` | NO | _string_ | What3words is a proprietary geocode system designed to identify any location on the surface of Earth with a resolution of about 3 meters. The system encodes geographic coordinates into three permanently fixed dictionary words. | toddler.geologist.animated | | purpose_of_shipment | NO | interger | The purpose of the shipment. values are 0 - gift, 1- sample, commercial - 2. | 1 | | currency | YES | string | The currency of the order. Possible values are INR,USD,GBP, EUR, AUD, CAD, SAR, AED,SGD | USD | | reasonOfExport | YES | integer | The reason for the export. Possible values are 0 - BONAFIDE_SAMPLE, 1 - SAMPLE, 2 - GIFT, 3 - COMMERCIAL | 2 | | commodity | NO | boolean | Indicates if the order is a commodity or not | true | | mies | NO |  |  | true | | igstPaymentStatus | NO | char | possible values are \'A\'- not applicable, \'B\'- LUT or Export under Bond, \'C\'- Export Against Payment of IGST | A | | Terms_Of_Invoice | YES | string | FOB and CIF | FOB | | ioss | YES | string |  |  | | eori | YES | string |  |  |
         * @summary Create order
         * @param {InlineObject5} [inlineObject5] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalInternationalOrdersCreateAdhocPost(inlineObject5?: InlineObject5, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20032>> {
            const localVarAxiosArgs = await InternationalApiAxiosParamCreator(configuration).v1ExternalInternationalOrdersCreateAdhocPost(inlineObject5, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Use this API to update your orders. You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  You can update only the order_items details before assigning the AWB (before Ready to Ship status). You can only update these key-value pairs i.e increase/decrease the quantity, update tax/discount, add/remove product items. Some params specific to international order are.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | purpose_of_shipment | NO | interger | The purpose of the shipment. values are 0 - gift, 1- sample, commercial - 2. | 1 | | currency | YES | string | The currency of the order. Possible values are INR,USD,GBP, EUR, AUD, CAD, SAR, AED,SGD | USD | | reasonOfExport | No | integer | The reason for the export. Possible values are 0 - BONAFIDE_SAMPLE, 1 - SAMPLE, 2 - GIFT, 3 - COMMERCIAL | 2 | | commodity | NO | boolean | Indicates if the order is a commodity or not | true | | mies | No | boolean |  | true | | igstPaymentStatus | YES | char | possible values are \'A\'- not applicable, \'B\'- LUT or Export under Bond, \'C\'- Export Against Payment of IGST | A | | Terms_Of_Invoice | no | string | The term of invoice either FOB and CIF | FOB |
         * @summary Update order
         * @param {InlineObject6} [inlineObject6] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalInternationalOrdersUpdateAdhocPost(inlineObject6?: InlineObject6, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse2004>> {
            const localVarAxiosArgs = await InternationalApiAxiosParamCreator(configuration).v1ExternalInternationalOrdersUpdateAdhocPost(inlineObject6, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * ThisdocumentationprovidesinformationabouttheBankDetailsAPI,whichallowsyouto   addbankdetailsforinternationalsettings.TheAPIendpoint, parameters, request sample   data, success response , and failed response are outlined below.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | bank_account_type | YES | string | ankaccounttype.Mustbe  <br>either\"saving\"or\"current\". | \"saving\" | | beneficiary_name | YES | string | Beneficiaryname.  <br>Alphabetsandspacesonly | \"JohnDoe\" | | bank_ifsc_code | YES | string | BankIFSCcode.Must  <br>followaspecificpattern | \"ABCD0123456\" | | bank_account_number | YES | integer | Bankaccountnumber.  <br>Shouldbebetween9and  <br>18digits. | 1234567890 |
         * @summary Add Bank Details
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalInternationalSettingsAddBankDetailsPost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20031>> {
            const localVarAxiosArgs = await InternationalApiAxiosParamCreator(configuration).v1ExternalInternationalSettingsAddBankDetailsPost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Use this API for your international KYC. This API return your KYC status.   Please check the documentation for the documents for KYC.  | PARAMS | REQUIRED DATA | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | organization_type | Yes | string | Seller organization | company | | ip_address | Yes | int unsigned | Seller\'s ip_address | 192.168.1.1.0 | | documents | Yes | array | Documentaion for organization type  <br>(document size is not greater than 3 MB) | Please check request |
         * @summary International KYC
         * @param {InlineObject4} [inlineObject4] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalInternationalSettingsInternationalKycPost(inlineObject4?: InlineObject4, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20030>> {
            const localVarAxiosArgs = await InternationalApiAxiosParamCreator(configuration).v1ExternalInternationalSettingsInternationalKycPost(inlineObject4, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Use this API to do multiple tasks in one go, namely creating a quick order, requesting its shipment, pickup generation generating the label and the manifest for the same order.  This API integrates several other APIs to perform all these tasks together.
         * @summary International Wrapper API
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalInternationalShipmentsCreateForwardShipmentPost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20033>> {
            const localVarAxiosArgs = await InternationalApiAxiosParamCreator(configuration).v1ExternalInternationalShipmentsCreateForwardShipmentPost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * InternationalApi - factory interface
 * @export
 */
export const InternationalApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * Use this API to create a pickup request for your order shipment. The API returns the pickup status along with the estimated pickup time.   You will have to call the \'Generate Manifest\' API after the successful response of this API.  **Note:**  *   The AWB must be already generated for the shipment id to generate the pickup request. *   Only one shipment_id can be passed at a time.       | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the shipment which is requested for pickup. | 1603434 | | status | no | string | Use this field to retry if the pickup request fails. Value: retry | retry |
         * @summary Generate Pickup
         * @param {string} accept 
         * @param {InlineObject2} [inlineObject2] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalCourierGeneratePickupPost(accept: string, inlineObject2?: InlineObject2, options?: any): AxiosPromise<void> {
            return InternationalApiFp(configuration).v1ExternalCourierGeneratePickupPost(accept, inlineObject2, options).then((request) => request(axios, basePath));
        },
        /**
         * This API can be used to assign the AWB (Air Waybill Number) to your shipment. The AWB is a unique number that helps you track the shipment and get details about it.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the order you want to create the AWB for. | 1603434 | | courier_id | no | integer | The courier id of the courier service you want to select. The default courier is selected in case no id is specified. | 35 | | status | no | string | Use this to change the courier of a shipment. Value: reassign. Note that this can be done only once in 24 hours. | reassign | |  |  |  |  |  |
         * @summary AWB Assignment
         * @param {string} accept 
         * @param {InlineObject7} [inlineObject7] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalCourierAssignAwbPost(accept: string, inlineObject7?: InlineObject7, options?: any): AxiosPromise<InlineResponse20035> {
            return InternationalApiFp(configuration).v1ExternalInternationalCourierAssignAwbPost(accept, inlineObject7, options).then((request) => request(axios, basePath));
        },
        /**
         * This API checks courier serviceability for international orders and displays them as a list.  **Notes:**  - \'cod\' field must be 0 as COD is not available for international orders.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `weight` | YES | _integer_ | The weight of the shipment. | 10 | | `cod` | YES | _integer_ | Cash on delivery status. Must be 0. | 0 | | `delivery_country` | YES | _string_ | The destination country ISO Alpha 2 code. | US | | `order_id` | NO | _integer_ | The Shiprocket order_id of the shipment if available. | 1 | | `pickup_postcode` | NO | _integer_ | Use this field to select a different pickup postcode other than the primary pickup address. | 2 |
         * @summary Serviceability
         * @param {string} orderId 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalCourierServiceabilityGet(orderId: string, options?: any): AxiosPromise<InlineResponse20034> {
            return InternationalApiFp(configuration).v1ExternalInternationalCourierServiceabilityGet(orderId, options).then((request) => request(axios, basePath));
        },
        /**
         * Use this API to create a pickup request for your order shipment. The API returns the pickup status along with the estimated pickup time.   You will have to call the \'Generate Manifest\' API after the successful response of this API.  **Note:**  *   The AWB must be already generated for the shipment id to generate the pickup request. *   Only one shipment_id can be passed at a time.       | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the shipment which is requested for pickup. | 1603434 | | status | no | string | Use this field to retry if the pickup request fails. Value: retry | retry |
         * @summary Manifest Generation
         * @param {InlineObject8} [inlineObject8] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalManifestsGeneratePost(inlineObject8?: InlineObject8, options?: any): AxiosPromise<InlineResponse20018> {
            return InternationalApiFp(configuration).v1ExternalInternationalManifestsGeneratePost(inlineObject8, options).then((request) => request(axios, basePath));
        },
        /**
         * Use this API to create a quick custom order. Quick orders are the ones where we do not store the product details in the master catalogue.  You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  **Note:**  - In case the \'shipping_is_billing\' field is false, further shipping detail fields are required.       If no channel id is passed, the order will be assigned to the default custom channel. If the channel id is not known, use the \'Get All Channels\' API to get the list of all integrated channels in your Shiprocket account.  - order_id field cannot be equal to an already existing id. Doing so does not change or affect the existing order. - New orders cannot be created with order id\'s same as that of cancelled orders. If error 422 shows up despite filling in the correct details, consider changing the order_id. - Be sure to input the correct calculated sub_total amount. The total is not calculated automatically through the API. - The \'order_id\' returned in the response is the Shiprocket order_id. Please save this order ID as we will use this in future API calls.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `order_id` | YES | _string_ | The order id you want to specify to the order. Max char: 50. (Avoid passing character values as this contradicts some other API calls). | 224477 or 224-477 | | `order_date` | YES | _string_ | The date of order creation in yyyy-mm-dd format. Time is additional. | 2019-07-24 11:11 | | `pickup_location` | YES | _string_ | The name of the pickup location added in your Shiprocket account. This cannot be a new location. | Jammu | | `channel_id` | NO | _integer_ | Mention this in case you need to assign the order to a particular channel. Deafult is \'Custom\'. | 27022 | | `comment` | NO | _string_ | Option to add \'From\' field to the shipment. To do this, enter the name in the following format: \'Reseller: \\[name\\]\'. | Reseller: Divine | | `reseller_name` | NO | _string_ | The \'from\' name if you want to print. Use \'Reseller: \\[name\\]\' | Reseller: Divine | | `company_name` | NO | _string_ | Name of the company. | Amazon | | `billing_customer_name` | YES | _string_ | First name of the billed customer. | John | | `billing_last_name` | NO | _string_ | Last name of the billed customer. | Doe | | `billing_address` | NO | _string_ | address details of the billed customer. | Civil line, House 20 | | `billing_address_2` | NO | _string_ | Further address details of the billed customer. | Near Hokage House | | `billing_city` | YES | _string_ | Billing address city. Max char: 30. | New Delhi | | `billing_pincode` | YES | _integer_ | Pincode of the billing address. | 110002 | | `billing_state` | YES | _string_ | Billing address state. | Delhi | | `billing_country` | YES | _string_ | Billing address country. | India | | `billing_email` | YES | _string_ | Email address of the billed customer. | [John@doe.com](mailto:John@doe.com) | | `billing_phone` | YES | _integer_ | The phone number of the billing customer. | 9856321472 | | `billing_alternate_phone` | NO | _integer_ | Alternate phone number of the billing customer. | 8604690454 | | `shipping_is_billing` | YES | _boolean_ | Whether the shipping address is the same as billing address. 1 or \'true\' for yes and 0 or \'false\' for no. | true | | `shipping_customer_name` | CONDITIONAL YES | _string_ | Name of the customer the order is shipped to. Required in case billing is not same as shipping. | Jane | | `shipping_last_name` | NO | _string_ | Last name of the shipping customer. | Doe | | `shipping_address` | CONDITIONAL YES | _string_ | Address of the Shipping customer. Required in case billing is not same as shipping. | Lane number 69 | | `shipping_address_2` | NO | _string_ | Further address details of shipping customer. | Andheri | | `billing_isd_code` | NO | _string_ | ISD code of the billing address. | +91 | | `shipping_city` | CONDITIONAL YES | _string_ | Shipping address city. | Mumbai | | `shipping_pincode` | CONDITIONAL YES | _integer_ | Shipping address pincode. | 200912 | | `shipping_country` | CONDITIONAL YES | _string_ | Shipping address country. | India | | `shipping_state` | CONDITIONAL YES | _string_ | Shipping address state. | Maharashtra | | `shipping_email` | CONDITIONAL YES | _string_ | Email of the shipping customer. | [Jane@doe.com](mailto:Jane@doe.com) | | `shipping_phone` | CONDITIONAL YES | _integer_ | Phone no. of the shipping customer. |  | | `longitude` | NO | _float_ | Destination (Shipping address) Longitude. | 69.0747 | | `latitude` | NO | _float_ | Destination (Shipping address) Latitude | 22.4064 | | `order_items` | YES | / | List of items and their relevant fields in the form of Array. | / | | `name` | YES | _string_ | Name of the product. | Jeans | | `sku` | YES | _string_ | The sku id of the product. | cbs123 | | `units` | YES | _integer_ | No of units that are to be shipped. | 10 | | `selling_price` | YES | _integer_ | The selling price per unit in Rupee. Inclusive of GST. | 900 | | `discount` | NO | _integer_ | The discount amount in Rupee. Inclusive of tax. | 10 | | `tax` | NO | _integer_ | The tax percentage on the item. | 5 | | `hsn` | NO | _integer_ | Harmonised System Nomenclature code. Used to determine the category of taxation the goods fall under. | 44122 | | `payment_method` | YES | _string_ | The method of payment. Can be either COD (Cash on delivery) Or Prepaid. | COD | | `shipping_charges` | NO | _integer_ | Shipping charges if any in Rupee. | 5 | | `giftwrap_charges` | NO | _integer_ | Giftwrap charges if any in Rupee. | 5 | | `transaction_charges` | NO | _integer_ | Transaction charges if any in Rupee. | 5 | | `total_discount` | NO | _integer_ | The total discount amount in Rupee. | 15 | | `sub_total` | YES | _integer_ | Calculated sub total amount in Rupee after deductions. | 9010 | | `length` | YES | _float_ | The length of the item in cms. Must be more than 0.5. | 10 | | `breadth` | YES | _float_ | The breadth of the item in cms. Must be more than 0.5. | 10 | | `height` | YES | _float_ | The height of the item in cms. Must be more than 0.5. | 10 | | `weight` | YES | _float_ | The weight of the item in kgs. Must be more than 0. | 2.5 | | `ewaybill_no` | NO | _string_ | Details relating to the shipment of goods. . | K92373490 | | `customer_gstin` | NO | _string_ | Goods and Services Tax Identification Number. | 29ABCDE1234F2Z5 | | `invoice_number` | NO | _string_ |  |  | | `order_type` | NO | _string_ | Key to differentiate between Essentials or Non Essentials Shipments. Order type can only be ESSENTIALS or NON ESSENTIALS. Please note it is case sensitive and blank values are allowed. | ESSENTIALS | | `checkout_shipping_method` | NO | _string_ | Only for SRF users.  <br> | a. SR_RUSH: SDD, NDD  <br>b. SR_STANDARD: Surface Delivery  <br>c. SR_EXPRESS: Air Delivery  <br>d. SR_QUICK: 3 hrs delivery | | `what3words_address` | NO | _string_ | What3words is a proprietary geocode system designed to identify any location on the surface of Earth with a resolution of about 3 meters. The system encodes geographic coordinates into three permanently fixed dictionary words. | toddler.geologist.animated | | purpose_of_shipment | NO | interger | The purpose of the shipment. values are 0 - gift, 1- sample, commercial - 2. | 1 | | currency | YES | string | The currency of the order. Possible values are INR,USD,GBP, EUR, AUD, CAD, SAR, AED,SGD | USD | | reasonOfExport | YES | integer | The reason for the export. Possible values are 0 - BONAFIDE_SAMPLE, 1 - SAMPLE, 2 - GIFT, 3 - COMMERCIAL | 2 | | commodity | NO | boolean | Indicates if the order is a commodity or not | true | | mies | NO |  |  | true | | igstPaymentStatus | NO | char | possible values are \'A\'- not applicable, \'B\'- LUT or Export under Bond, \'C\'- Export Against Payment of IGST | A | | Terms_Of_Invoice | YES | string | FOB and CIF | FOB | | ioss | YES | string |  |  | | eori | YES | string |  |  |
         * @summary Create order
         * @param {InlineObject5} [inlineObject5] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalOrdersCreateAdhocPost(inlineObject5?: InlineObject5, options?: any): AxiosPromise<InlineResponse20032> {
            return InternationalApiFp(configuration).v1ExternalInternationalOrdersCreateAdhocPost(inlineObject5, options).then((request) => request(axios, basePath));
        },
        /**
         * Use this API to update your orders. You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  You can update only the order_items details before assigning the AWB (before Ready to Ship status). You can only update these key-value pairs i.e increase/decrease the quantity, update tax/discount, add/remove product items. Some params specific to international order are.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | purpose_of_shipment | NO | interger | The purpose of the shipment. values are 0 - gift, 1- sample, commercial - 2. | 1 | | currency | YES | string | The currency of the order. Possible values are INR,USD,GBP, EUR, AUD, CAD, SAR, AED,SGD | USD | | reasonOfExport | No | integer | The reason for the export. Possible values are 0 - BONAFIDE_SAMPLE, 1 - SAMPLE, 2 - GIFT, 3 - COMMERCIAL | 2 | | commodity | NO | boolean | Indicates if the order is a commodity or not | true | | mies | No | boolean |  | true | | igstPaymentStatus | YES | char | possible values are \'A\'- not applicable, \'B\'- LUT or Export under Bond, \'C\'- Export Against Payment of IGST | A | | Terms_Of_Invoice | no | string | The term of invoice either FOB and CIF | FOB |
         * @summary Update order
         * @param {InlineObject6} [inlineObject6] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalOrdersUpdateAdhocPost(inlineObject6?: InlineObject6, options?: any): AxiosPromise<InlineResponse2004> {
            return InternationalApiFp(configuration).v1ExternalInternationalOrdersUpdateAdhocPost(inlineObject6, options).then((request) => request(axios, basePath));
        },
        /**
         * ThisdocumentationprovidesinformationabouttheBankDetailsAPI,whichallowsyouto   addbankdetailsforinternationalsettings.TheAPIendpoint, parameters, request sample   data, success response , and failed response are outlined below.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | bank_account_type | YES | string | ankaccounttype.Mustbe  <br>either\"saving\"or\"current\". | \"saving\" | | beneficiary_name | YES | string | Beneficiaryname.  <br>Alphabetsandspacesonly | \"JohnDoe\" | | bank_ifsc_code | YES | string | BankIFSCcode.Must  <br>followaspecificpattern | \"ABCD0123456\" | | bank_account_number | YES | integer | Bankaccountnumber.  <br>Shouldbebetween9and  <br>18digits. | 1234567890 |
         * @summary Add Bank Details
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalSettingsAddBankDetailsPost(body?: string, options?: any): AxiosPromise<InlineResponse20031> {
            return InternationalApiFp(configuration).v1ExternalInternationalSettingsAddBankDetailsPost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * Use this API for your international KYC. This API return your KYC status.   Please check the documentation for the documents for KYC.  | PARAMS | REQUIRED DATA | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | organization_type | Yes | string | Seller organization | company | | ip_address | Yes | int unsigned | Seller\'s ip_address | 192.168.1.1.0 | | documents | Yes | array | Documentaion for organization type  <br>(document size is not greater than 3 MB) | Please check request |
         * @summary International KYC
         * @param {InlineObject4} [inlineObject4] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalSettingsInternationalKycPost(inlineObject4?: InlineObject4, options?: any): AxiosPromise<InlineResponse20030> {
            return InternationalApiFp(configuration).v1ExternalInternationalSettingsInternationalKycPost(inlineObject4, options).then((request) => request(axios, basePath));
        },
        /**
         * Use this API to do multiple tasks in one go, namely creating a quick order, requesting its shipment, pickup generation generating the label and the manifest for the same order.  This API integrates several other APIs to perform all these tasks together.
         * @summary International Wrapper API
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalShipmentsCreateForwardShipmentPost(body?: string, options?: any): AxiosPromise<InlineResponse20033> {
            return InternationalApiFp(configuration).v1ExternalInternationalShipmentsCreateForwardShipmentPost(body, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * InternationalApi - interface
 * @export
 * @interface InternationalApi
 */
export interface InternationalApiInterface {
    /**
     * Use this API to create a pickup request for your order shipment. The API returns the pickup status along with the estimated pickup time.   You will have to call the \'Generate Manifest\' API after the successful response of this API.  **Note:**  *   The AWB must be already generated for the shipment id to generate the pickup request. *   Only one shipment_id can be passed at a time.       | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the shipment which is requested for pickup. | 1603434 | | status | no | string | Use this field to retry if the pickup request fails. Value: retry | retry |
     * @summary Generate Pickup
     * @param {string} accept 
     * @param {InlineObject2} [inlineObject2] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApiInterface
     */
    v1ExternalCourierGeneratePickupPost(accept: string, inlineObject2?: InlineObject2, options?: any): AxiosPromise<void>;

    /**
     * This API can be used to assign the AWB (Air Waybill Number) to your shipment. The AWB is a unique number that helps you track the shipment and get details about it.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the order you want to create the AWB for. | 1603434 | | courier_id | no | integer | The courier id of the courier service you want to select. The default courier is selected in case no id is specified. | 35 | | status | no | string | Use this to change the courier of a shipment. Value: reassign. Note that this can be done only once in 24 hours. | reassign | |  |  |  |  |  |
     * @summary AWB Assignment
     * @param {string} accept 
     * @param {InlineObject7} [inlineObject7] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApiInterface
     */
    v1ExternalInternationalCourierAssignAwbPost(accept: string, inlineObject7?: InlineObject7, options?: any): AxiosPromise<InlineResponse20035>;

    /**
     * This API checks courier serviceability for international orders and displays them as a list.  **Notes:**  - \'cod\' field must be 0 as COD is not available for international orders.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `weight` | YES | _integer_ | The weight of the shipment. | 10 | | `cod` | YES | _integer_ | Cash on delivery status. Must be 0. | 0 | | `delivery_country` | YES | _string_ | The destination country ISO Alpha 2 code. | US | | `order_id` | NO | _integer_ | The Shiprocket order_id of the shipment if available. | 1 | | `pickup_postcode` | NO | _integer_ | Use this field to select a different pickup postcode other than the primary pickup address. | 2 |
     * @summary Serviceability
     * @param {string} orderId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApiInterface
     */
    v1ExternalInternationalCourierServiceabilityGet(orderId: string, options?: any): AxiosPromise<InlineResponse20034>;

    /**
     * Use this API to create a pickup request for your order shipment. The API returns the pickup status along with the estimated pickup time.   You will have to call the \'Generate Manifest\' API after the successful response of this API.  **Note:**  *   The AWB must be already generated for the shipment id to generate the pickup request. *   Only one shipment_id can be passed at a time.       | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the shipment which is requested for pickup. | 1603434 | | status | no | string | Use this field to retry if the pickup request fails. Value: retry | retry |
     * @summary Manifest Generation
     * @param {InlineObject8} [inlineObject8] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApiInterface
     */
    v1ExternalInternationalManifestsGeneratePost(inlineObject8?: InlineObject8, options?: any): AxiosPromise<InlineResponse20018>;

    /**
     * Use this API to create a quick custom order. Quick orders are the ones where we do not store the product details in the master catalogue.  You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  **Note:**  - In case the \'shipping_is_billing\' field is false, further shipping detail fields are required.       If no channel id is passed, the order will be assigned to the default custom channel. If the channel id is not known, use the \'Get All Channels\' API to get the list of all integrated channels in your Shiprocket account.  - order_id field cannot be equal to an already existing id. Doing so does not change or affect the existing order. - New orders cannot be created with order id\'s same as that of cancelled orders. If error 422 shows up despite filling in the correct details, consider changing the order_id. - Be sure to input the correct calculated sub_total amount. The total is not calculated automatically through the API. - The \'order_id\' returned in the response is the Shiprocket order_id. Please save this order ID as we will use this in future API calls.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `order_id` | YES | _string_ | The order id you want to specify to the order. Max char: 50. (Avoid passing character values as this contradicts some other API calls). | 224477 or 224-477 | | `order_date` | YES | _string_ | The date of order creation in yyyy-mm-dd format. Time is additional. | 2019-07-24 11:11 | | `pickup_location` | YES | _string_ | The name of the pickup location added in your Shiprocket account. This cannot be a new location. | Jammu | | `channel_id` | NO | _integer_ | Mention this in case you need to assign the order to a particular channel. Deafult is \'Custom\'. | 27022 | | `comment` | NO | _string_ | Option to add \'From\' field to the shipment. To do this, enter the name in the following format: \'Reseller: \\[name\\]\'. | Reseller: Divine | | `reseller_name` | NO | _string_ | The \'from\' name if you want to print. Use \'Reseller: \\[name\\]\' | Reseller: Divine | | `company_name` | NO | _string_ | Name of the company. | Amazon | | `billing_customer_name` | YES | _string_ | First name of the billed customer. | John | | `billing_last_name` | NO | _string_ | Last name of the billed customer. | Doe | | `billing_address` | NO | _string_ | address details of the billed customer. | Civil line, House 20 | | `billing_address_2` | NO | _string_ | Further address details of the billed customer. | Near Hokage House | | `billing_city` | YES | _string_ | Billing address city. Max char: 30. | New Delhi | | `billing_pincode` | YES | _integer_ | Pincode of the billing address. | 110002 | | `billing_state` | YES | _string_ | Billing address state. | Delhi | | `billing_country` | YES | _string_ | Billing address country. | India | | `billing_email` | YES | _string_ | Email address of the billed customer. | [John@doe.com](mailto:John@doe.com) | | `billing_phone` | YES | _integer_ | The phone number of the billing customer. | 9856321472 | | `billing_alternate_phone` | NO | _integer_ | Alternate phone number of the billing customer. | 8604690454 | | `shipping_is_billing` | YES | _boolean_ | Whether the shipping address is the same as billing address. 1 or \'true\' for yes and 0 or \'false\' for no. | true | | `shipping_customer_name` | CONDITIONAL YES | _string_ | Name of the customer the order is shipped to. Required in case billing is not same as shipping. | Jane | | `shipping_last_name` | NO | _string_ | Last name of the shipping customer. | Doe | | `shipping_address` | CONDITIONAL YES | _string_ | Address of the Shipping customer. Required in case billing is not same as shipping. | Lane number 69 | | `shipping_address_2` | NO | _string_ | Further address details of shipping customer. | Andheri | | `billing_isd_code` | NO | _string_ | ISD code of the billing address. | +91 | | `shipping_city` | CONDITIONAL YES | _string_ | Shipping address city. | Mumbai | | `shipping_pincode` | CONDITIONAL YES | _integer_ | Shipping address pincode. | 200912 | | `shipping_country` | CONDITIONAL YES | _string_ | Shipping address country. | India | | `shipping_state` | CONDITIONAL YES | _string_ | Shipping address state. | Maharashtra | | `shipping_email` | CONDITIONAL YES | _string_ | Email of the shipping customer. | [Jane@doe.com](mailto:Jane@doe.com) | | `shipping_phone` | CONDITIONAL YES | _integer_ | Phone no. of the shipping customer. |  | | `longitude` | NO | _float_ | Destination (Shipping address) Longitude. | 69.0747 | | `latitude` | NO | _float_ | Destination (Shipping address) Latitude | 22.4064 | | `order_items` | YES | / | List of items and their relevant fields in the form of Array. | / | | `name` | YES | _string_ | Name of the product. | Jeans | | `sku` | YES | _string_ | The sku id of the product. | cbs123 | | `units` | YES | _integer_ | No of units that are to be shipped. | 10 | | `selling_price` | YES | _integer_ | The selling price per unit in Rupee. Inclusive of GST. | 900 | | `discount` | NO | _integer_ | The discount amount in Rupee. Inclusive of tax. | 10 | | `tax` | NO | _integer_ | The tax percentage on the item. | 5 | | `hsn` | NO | _integer_ | Harmonised System Nomenclature code. Used to determine the category of taxation the goods fall under. | 44122 | | `payment_method` | YES | _string_ | The method of payment. Can be either COD (Cash on delivery) Or Prepaid. | COD | | `shipping_charges` | NO | _integer_ | Shipping charges if any in Rupee. | 5 | | `giftwrap_charges` | NO | _integer_ | Giftwrap charges if any in Rupee. | 5 | | `transaction_charges` | NO | _integer_ | Transaction charges if any in Rupee. | 5 | | `total_discount` | NO | _integer_ | The total discount amount in Rupee. | 15 | | `sub_total` | YES | _integer_ | Calculated sub total amount in Rupee after deductions. | 9010 | | `length` | YES | _float_ | The length of the item in cms. Must be more than 0.5. | 10 | | `breadth` | YES | _float_ | The breadth of the item in cms. Must be more than 0.5. | 10 | | `height` | YES | _float_ | The height of the item in cms. Must be more than 0.5. | 10 | | `weight` | YES | _float_ | The weight of the item in kgs. Must be more than 0. | 2.5 | | `ewaybill_no` | NO | _string_ | Details relating to the shipment of goods. . | K92373490 | | `customer_gstin` | NO | _string_ | Goods and Services Tax Identification Number. | 29ABCDE1234F2Z5 | | `invoice_number` | NO | _string_ |  |  | | `order_type` | NO | _string_ | Key to differentiate between Essentials or Non Essentials Shipments. Order type can only be ESSENTIALS or NON ESSENTIALS. Please note it is case sensitive and blank values are allowed. | ESSENTIALS | | `checkout_shipping_method` | NO | _string_ | Only for SRF users.  <br> | a. SR_RUSH: SDD, NDD  <br>b. SR_STANDARD: Surface Delivery  <br>c. SR_EXPRESS: Air Delivery  <br>d. SR_QUICK: 3 hrs delivery | | `what3words_address` | NO | _string_ | What3words is a proprietary geocode system designed to identify any location on the surface of Earth with a resolution of about 3 meters. The system encodes geographic coordinates into three permanently fixed dictionary words. | toddler.geologist.animated | | purpose_of_shipment | NO | interger | The purpose of the shipment. values are 0 - gift, 1- sample, commercial - 2. | 1 | | currency | YES | string | The currency of the order. Possible values are INR,USD,GBP, EUR, AUD, CAD, SAR, AED,SGD | USD | | reasonOfExport | YES | integer | The reason for the export. Possible values are 0 - BONAFIDE_SAMPLE, 1 - SAMPLE, 2 - GIFT, 3 - COMMERCIAL | 2 | | commodity | NO | boolean | Indicates if the order is a commodity or not | true | | mies | NO |  |  | true | | igstPaymentStatus | NO | char | possible values are \'A\'- not applicable, \'B\'- LUT or Export under Bond, \'C\'- Export Against Payment of IGST | A | | Terms_Of_Invoice | YES | string | FOB and CIF | FOB | | ioss | YES | string |  |  | | eori | YES | string |  |  |
     * @summary Create order
     * @param {InlineObject5} [inlineObject5] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApiInterface
     */
    v1ExternalInternationalOrdersCreateAdhocPost(inlineObject5?: InlineObject5, options?: any): AxiosPromise<InlineResponse20032>;

    /**
     * Use this API to update your orders. You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  You can update only the order_items details before assigning the AWB (before Ready to Ship status). You can only update these key-value pairs i.e increase/decrease the quantity, update tax/discount, add/remove product items. Some params specific to international order are.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | purpose_of_shipment | NO | interger | The purpose of the shipment. values are 0 - gift, 1- sample, commercial - 2. | 1 | | currency | YES | string | The currency of the order. Possible values are INR,USD,GBP, EUR, AUD, CAD, SAR, AED,SGD | USD | | reasonOfExport | No | integer | The reason for the export. Possible values are 0 - BONAFIDE_SAMPLE, 1 - SAMPLE, 2 - GIFT, 3 - COMMERCIAL | 2 | | commodity | NO | boolean | Indicates if the order is a commodity or not | true | | mies | No | boolean |  | true | | igstPaymentStatus | YES | char | possible values are \'A\'- not applicable, \'B\'- LUT or Export under Bond, \'C\'- Export Against Payment of IGST | A | | Terms_Of_Invoice | no | string | The term of invoice either FOB and CIF | FOB |
     * @summary Update order
     * @param {InlineObject6} [inlineObject6] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApiInterface
     */
    v1ExternalInternationalOrdersUpdateAdhocPost(inlineObject6?: InlineObject6, options?: any): AxiosPromise<InlineResponse2004>;

    /**
     * ThisdocumentationprovidesinformationabouttheBankDetailsAPI,whichallowsyouto   addbankdetailsforinternationalsettings.TheAPIendpoint, parameters, request sample   data, success response , and failed response are outlined below.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | bank_account_type | YES | string | ankaccounttype.Mustbe  <br>either\"saving\"or\"current\". | \"saving\" | | beneficiary_name | YES | string | Beneficiaryname.  <br>Alphabetsandspacesonly | \"JohnDoe\" | | bank_ifsc_code | YES | string | BankIFSCcode.Must  <br>followaspecificpattern | \"ABCD0123456\" | | bank_account_number | YES | integer | Bankaccountnumber.  <br>Shouldbebetween9and  <br>18digits. | 1234567890 |
     * @summary Add Bank Details
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApiInterface
     */
    v1ExternalInternationalSettingsAddBankDetailsPost(body?: string, options?: any): AxiosPromise<InlineResponse20031>;

    /**
     * Use this API for your international KYC. This API return your KYC status.   Please check the documentation for the documents for KYC.  | PARAMS | REQUIRED DATA | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | organization_type | Yes | string | Seller organization | company | | ip_address | Yes | int unsigned | Seller\'s ip_address | 192.168.1.1.0 | | documents | Yes | array | Documentaion for organization type  <br>(document size is not greater than 3 MB) | Please check request |
     * @summary International KYC
     * @param {InlineObject4} [inlineObject4] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApiInterface
     */
    v1ExternalInternationalSettingsInternationalKycPost(inlineObject4?: InlineObject4, options?: any): AxiosPromise<InlineResponse20030>;

    /**
     * Use this API to do multiple tasks in one go, namely creating a quick order, requesting its shipment, pickup generation generating the label and the manifest for the same order.  This API integrates several other APIs to perform all these tasks together.
     * @summary International Wrapper API
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApiInterface
     */
    v1ExternalInternationalShipmentsCreateForwardShipmentPost(body?: string, options?: any): AxiosPromise<InlineResponse20033>;

}

/**
 * InternationalApi - object-oriented interface
 * @export
 * @class InternationalApi
 * @extends {BaseAPI}
 */
export class InternationalApi extends BaseAPI implements InternationalApiInterface {
    /**
     * Use this API to create a pickup request for your order shipment. The API returns the pickup status along with the estimated pickup time.   You will have to call the \'Generate Manifest\' API after the successful response of this API.  **Note:**  *   The AWB must be already generated for the shipment id to generate the pickup request. *   Only one shipment_id can be passed at a time.       | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the shipment which is requested for pickup. | 1603434 | | status | no | string | Use this field to retry if the pickup request fails. Value: retry | retry |
     * @summary Generate Pickup
     * @param {string} accept 
     * @param {InlineObject2} [inlineObject2] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApi
     */
    public v1ExternalCourierGeneratePickupPost(accept: string, inlineObject2?: InlineObject2, options?: any) {
        return InternationalApiFp(this.configuration).v1ExternalCourierGeneratePickupPost(accept, inlineObject2, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API can be used to assign the AWB (Air Waybill Number) to your shipment. The AWB is a unique number that helps you track the shipment and get details about it.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the order you want to create the AWB for. | 1603434 | | courier_id | no | integer | The courier id of the courier service you want to select. The default courier is selected in case no id is specified. | 35 | | status | no | string | Use this to change the courier of a shipment. Value: reassign. Note that this can be done only once in 24 hours. | reassign | |  |  |  |  |  |
     * @summary AWB Assignment
     * @param {string} accept 
     * @param {InlineObject7} [inlineObject7] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApi
     */
    public v1ExternalInternationalCourierAssignAwbPost(accept: string, inlineObject7?: InlineObject7, options?: any) {
        return InternationalApiFp(this.configuration).v1ExternalInternationalCourierAssignAwbPost(accept, inlineObject7, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API checks courier serviceability for international orders and displays them as a list.  **Notes:**  - \'cod\' field must be 0 as COD is not available for international orders.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `weight` | YES | _integer_ | The weight of the shipment. | 10 | | `cod` | YES | _integer_ | Cash on delivery status. Must be 0. | 0 | | `delivery_country` | YES | _string_ | The destination country ISO Alpha 2 code. | US | | `order_id` | NO | _integer_ | The Shiprocket order_id of the shipment if available. | 1 | | `pickup_postcode` | NO | _integer_ | Use this field to select a different pickup postcode other than the primary pickup address. | 2 |
     * @summary Serviceability
     * @param {string} orderId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApi
     */
    public v1ExternalInternationalCourierServiceabilityGet(orderId: string, options?: any) {
        return InternationalApiFp(this.configuration).v1ExternalInternationalCourierServiceabilityGet(orderId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Use this API to create a pickup request for your order shipment. The API returns the pickup status along with the estimated pickup time.   You will have to call the \'Generate Manifest\' API after the successful response of this API.  **Note:**  *   The AWB must be already generated for the shipment id to generate the pickup request. *   Only one shipment_id can be passed at a time.       | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | shipment_id | yes | integer | The shipment id of the shipment which is requested for pickup. | 1603434 | | status | no | string | Use this field to retry if the pickup request fails. Value: retry | retry |
     * @summary Manifest Generation
     * @param {InlineObject8} [inlineObject8] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApi
     */
    public v1ExternalInternationalManifestsGeneratePost(inlineObject8?: InlineObject8, options?: any) {
        return InternationalApiFp(this.configuration).v1ExternalInternationalManifestsGeneratePost(inlineObject8, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Use this API to create a quick custom order. Quick orders are the ones where we do not store the product details in the master catalogue.  You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  **Note:**  - In case the \'shipping_is_billing\' field is false, further shipping detail fields are required.       If no channel id is passed, the order will be assigned to the default custom channel. If the channel id is not known, use the \'Get All Channels\' API to get the list of all integrated channels in your Shiprocket account.  - order_id field cannot be equal to an already existing id. Doing so does not change or affect the existing order. - New orders cannot be created with order id\'s same as that of cancelled orders. If error 422 shows up despite filling in the correct details, consider changing the order_id. - Be sure to input the correct calculated sub_total amount. The total is not calculated automatically through the API. - The \'order_id\' returned in the response is the Shiprocket order_id. Please save this order ID as we will use this in future API calls.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `order_id` | YES | _string_ | The order id you want to specify to the order. Max char: 50. (Avoid passing character values as this contradicts some other API calls). | 224477 or 224-477 | | `order_date` | YES | _string_ | The date of order creation in yyyy-mm-dd format. Time is additional. | 2019-07-24 11:11 | | `pickup_location` | YES | _string_ | The name of the pickup location added in your Shiprocket account. This cannot be a new location. | Jammu | | `channel_id` | NO | _integer_ | Mention this in case you need to assign the order to a particular channel. Deafult is \'Custom\'. | 27022 | | `comment` | NO | _string_ | Option to add \'From\' field to the shipment. To do this, enter the name in the following format: \'Reseller: \\[name\\]\'. | Reseller: Divine | | `reseller_name` | NO | _string_ | The \'from\' name if you want to print. Use \'Reseller: \\[name\\]\' | Reseller: Divine | | `company_name` | NO | _string_ | Name of the company. | Amazon | | `billing_customer_name` | YES | _string_ | First name of the billed customer. | John | | `billing_last_name` | NO | _string_ | Last name of the billed customer. | Doe | | `billing_address` | NO | _string_ | address details of the billed customer. | Civil line, House 20 | | `billing_address_2` | NO | _string_ | Further address details of the billed customer. | Near Hokage House | | `billing_city` | YES | _string_ | Billing address city. Max char: 30. | New Delhi | | `billing_pincode` | YES | _integer_ | Pincode of the billing address. | 110002 | | `billing_state` | YES | _string_ | Billing address state. | Delhi | | `billing_country` | YES | _string_ | Billing address country. | India | | `billing_email` | YES | _string_ | Email address of the billed customer. | [John@doe.com](mailto:John@doe.com) | | `billing_phone` | YES | _integer_ | The phone number of the billing customer. | 9856321472 | | `billing_alternate_phone` | NO | _integer_ | Alternate phone number of the billing customer. | 8604690454 | | `shipping_is_billing` | YES | _boolean_ | Whether the shipping address is the same as billing address. 1 or \'true\' for yes and 0 or \'false\' for no. | true | | `shipping_customer_name` | CONDITIONAL YES | _string_ | Name of the customer the order is shipped to. Required in case billing is not same as shipping. | Jane | | `shipping_last_name` | NO | _string_ | Last name of the shipping customer. | Doe | | `shipping_address` | CONDITIONAL YES | _string_ | Address of the Shipping customer. Required in case billing is not same as shipping. | Lane number 69 | | `shipping_address_2` | NO | _string_ | Further address details of shipping customer. | Andheri | | `billing_isd_code` | NO | _string_ | ISD code of the billing address. | +91 | | `shipping_city` | CONDITIONAL YES | _string_ | Shipping address city. | Mumbai | | `shipping_pincode` | CONDITIONAL YES | _integer_ | Shipping address pincode. | 200912 | | `shipping_country` | CONDITIONAL YES | _string_ | Shipping address country. | India | | `shipping_state` | CONDITIONAL YES | _string_ | Shipping address state. | Maharashtra | | `shipping_email` | CONDITIONAL YES | _string_ | Email of the shipping customer. | [Jane@doe.com](mailto:Jane@doe.com) | | `shipping_phone` | CONDITIONAL YES | _integer_ | Phone no. of the shipping customer. |  | | `longitude` | NO | _float_ | Destination (Shipping address) Longitude. | 69.0747 | | `latitude` | NO | _float_ | Destination (Shipping address) Latitude | 22.4064 | | `order_items` | YES | / | List of items and their relevant fields in the form of Array. | / | | `name` | YES | _string_ | Name of the product. | Jeans | | `sku` | YES | _string_ | The sku id of the product. | cbs123 | | `units` | YES | _integer_ | No of units that are to be shipped. | 10 | | `selling_price` | YES | _integer_ | The selling price per unit in Rupee. Inclusive of GST. | 900 | | `discount` | NO | _integer_ | The discount amount in Rupee. Inclusive of tax. | 10 | | `tax` | NO | _integer_ | The tax percentage on the item. | 5 | | `hsn` | NO | _integer_ | Harmonised System Nomenclature code. Used to determine the category of taxation the goods fall under. | 44122 | | `payment_method` | YES | _string_ | The method of payment. Can be either COD (Cash on delivery) Or Prepaid. | COD | | `shipping_charges` | NO | _integer_ | Shipping charges if any in Rupee. | 5 | | `giftwrap_charges` | NO | _integer_ | Giftwrap charges if any in Rupee. | 5 | | `transaction_charges` | NO | _integer_ | Transaction charges if any in Rupee. | 5 | | `total_discount` | NO | _integer_ | The total discount amount in Rupee. | 15 | | `sub_total` | YES | _integer_ | Calculated sub total amount in Rupee after deductions. | 9010 | | `length` | YES | _float_ | The length of the item in cms. Must be more than 0.5. | 10 | | `breadth` | YES | _float_ | The breadth of the item in cms. Must be more than 0.5. | 10 | | `height` | YES | _float_ | The height of the item in cms. Must be more than 0.5. | 10 | | `weight` | YES | _float_ | The weight of the item in kgs. Must be more than 0. | 2.5 | | `ewaybill_no` | NO | _string_ | Details relating to the shipment of goods. . | K92373490 | | `customer_gstin` | NO | _string_ | Goods and Services Tax Identification Number. | 29ABCDE1234F2Z5 | | `invoice_number` | NO | _string_ |  |  | | `order_type` | NO | _string_ | Key to differentiate between Essentials or Non Essentials Shipments. Order type can only be ESSENTIALS or NON ESSENTIALS. Please note it is case sensitive and blank values are allowed. | ESSENTIALS | | `checkout_shipping_method` | NO | _string_ | Only for SRF users.  <br> | a. SR_RUSH: SDD, NDD  <br>b. SR_STANDARD: Surface Delivery  <br>c. SR_EXPRESS: Air Delivery  <br>d. SR_QUICK: 3 hrs delivery | | `what3words_address` | NO | _string_ | What3words is a proprietary geocode system designed to identify any location on the surface of Earth with a resolution of about 3 meters. The system encodes geographic coordinates into three permanently fixed dictionary words. | toddler.geologist.animated | | purpose_of_shipment | NO | interger | The purpose of the shipment. values are 0 - gift, 1- sample, commercial - 2. | 1 | | currency | YES | string | The currency of the order. Possible values are INR,USD,GBP, EUR, AUD, CAD, SAR, AED,SGD | USD | | reasonOfExport | YES | integer | The reason for the export. Possible values are 0 - BONAFIDE_SAMPLE, 1 - SAMPLE, 2 - GIFT, 3 - COMMERCIAL | 2 | | commodity | NO | boolean | Indicates if the order is a commodity or not | true | | mies | NO |  |  | true | | igstPaymentStatus | NO | char | possible values are \'A\'- not applicable, \'B\'- LUT or Export under Bond, \'C\'- Export Against Payment of IGST | A | | Terms_Of_Invoice | YES | string | FOB and CIF | FOB | | ioss | YES | string |  |  | | eori | YES | string |  |  |
     * @summary Create order
     * @param {InlineObject5} [inlineObject5] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApi
     */
    public v1ExternalInternationalOrdersCreateAdhocPost(inlineObject5?: InlineObject5, options?: any) {
        return InternationalApiFp(this.configuration).v1ExternalInternationalOrdersCreateAdhocPost(inlineObject5, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Use this API to update your orders. You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  You can update only the order_items details before assigning the AWB (before Ready to Ship status). You can only update these key-value pairs i.e increase/decrease the quantity, update tax/discount, add/remove product items. Some params specific to international order are.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | purpose_of_shipment | NO | interger | The purpose of the shipment. values are 0 - gift, 1- sample, commercial - 2. | 1 | | currency | YES | string | The currency of the order. Possible values are INR,USD,GBP, EUR, AUD, CAD, SAR, AED,SGD | USD | | reasonOfExport | No | integer | The reason for the export. Possible values are 0 - BONAFIDE_SAMPLE, 1 - SAMPLE, 2 - GIFT, 3 - COMMERCIAL | 2 | | commodity | NO | boolean | Indicates if the order is a commodity or not | true | | mies | No | boolean |  | true | | igstPaymentStatus | YES | char | possible values are \'A\'- not applicable, \'B\'- LUT or Export under Bond, \'C\'- Export Against Payment of IGST | A | | Terms_Of_Invoice | no | string | The term of invoice either FOB and CIF | FOB |
     * @summary Update order
     * @param {InlineObject6} [inlineObject6] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApi
     */
    public v1ExternalInternationalOrdersUpdateAdhocPost(inlineObject6?: InlineObject6, options?: any) {
        return InternationalApiFp(this.configuration).v1ExternalInternationalOrdersUpdateAdhocPost(inlineObject6, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * ThisdocumentationprovidesinformationabouttheBankDetailsAPI,whichallowsyouto   addbankdetailsforinternationalsettings.TheAPIendpoint, parameters, request sample   data, success response , and failed response are outlined below.  | PARAMS | REQUIRED | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | bank_account_type | YES | string | ankaccounttype.Mustbe  <br>either\"saving\"or\"current\". | \"saving\" | | beneficiary_name | YES | string | Beneficiaryname.  <br>Alphabetsandspacesonly | \"JohnDoe\" | | bank_ifsc_code | YES | string | BankIFSCcode.Must  <br>followaspecificpattern | \"ABCD0123456\" | | bank_account_number | YES | integer | Bankaccountnumber.  <br>Shouldbebetween9and  <br>18digits. | 1234567890 |
     * @summary Add Bank Details
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApi
     */
    public v1ExternalInternationalSettingsAddBankDetailsPost(body?: string, options?: any) {
        return InternationalApiFp(this.configuration).v1ExternalInternationalSettingsAddBankDetailsPost(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Use this API for your international KYC. This API return your KYC status.   Please check the documentation for the documents for KYC.  | PARAMS | REQUIRED DATA | DATA TYPE | DESCRIPTION | EXAMPLE | | --- | --- | --- | --- | --- | | organization_type | Yes | string | Seller organization | company | | ip_address | Yes | int unsigned | Seller\'s ip_address | 192.168.1.1.0 | | documents | Yes | array | Documentaion for organization type  <br>(document size is not greater than 3 MB) | Please check request |
     * @summary International KYC
     * @param {InlineObject4} [inlineObject4] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApi
     */
    public v1ExternalInternationalSettingsInternationalKycPost(inlineObject4?: InlineObject4, options?: any) {
        return InternationalApiFp(this.configuration).v1ExternalInternationalSettingsInternationalKycPost(inlineObject4, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Use this API to do multiple tasks in one go, namely creating a quick order, requesting its shipment, pickup generation generating the label and the manifest for the same order.  This API integrates several other APIs to perform all these tasks together.
     * @summary International Wrapper API
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalApi
     */
    public v1ExternalInternationalShipmentsCreateForwardShipmentPost(body?: string, options?: any) {
        return InternationalApiFp(this.configuration).v1ExternalInternationalShipmentsCreateForwardShipmentPost(body, options).then((request) => request(this.axios, this.basePath));
    }

}
