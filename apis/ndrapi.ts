// tslint:disable
/**
 * shiprocket
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as globalImportUrl from 'url';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { InlineResponse20023 } from '../models';
// @ts-ignore
import { InlineResponse202 } from '../models';
/**
 * NDRApi - axios parameter creator
 * @export
 */
export const NDRApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Get the shipment details of a particular order through this API by passing the AWB number in the endpoint URL itself. You can get the details like AWB, NDR Attempt, NDR Reason, Customer Details, Product Details, Courier.  Type in your AWB code in place of {AWB}. No other body parameters are required.  #### Path:  |       **EXAMPLE**        | |:-----------------------: | | https://apiv2.shiprocket.in/v1/external/ndr/94711332  |
         * @summary Get Specific NDR Shipment Details
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalNdrAWBGet: async (contentType: string, authorization: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'contentType' is not null or undefined
            if (contentType === null || contentType === undefined) {
                throw new RequiredError('contentType','Required parameter contentType was null or undefined when calling v1ExternalNdrAWBGet.');
            }
            // verify required parameter 'authorization' is not null or undefined
            if (authorization === null || authorization === undefined) {
                throw new RequiredError('authorization','Required parameter authorization was null or undefined when calling v1ExternalNdrAWBGet.');
            }
            const localVarPath = `/v1/external/ndr/{AWB}`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (contentType !== undefined && contentType !== null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (authorization !== undefined && authorization !== null) {
                localVarHeaderParameter['Authorization'] = String(authorization);
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API call will display a list of all the shipments that are in NDR in your Shiprocket account.   You can also sort and filter the data according to your needs by passing the optional parameters. Not passing anything will display the data in the default format.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                           **DESCRIPTION**                            | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:-------------------------------------------------------------------: |:-----------: | |    `page`     |      NO       |   *integer*     |                     The page number to display.                      |      5       | |  `per_page`   |      NO       |    *integer*    |                   The number of entries per page.                    |      5       | |     `to`      |      NO       |    *string*     |                            The end date.                             |  2021-08-02  | |    `from`     |      NO       |    *string*     |                           The start date.                            |  2021-08-02  |                        |   `search`    |      NO       |    *string*     | Search for AWB.  |    224477    |
         * @summary Get All NDR Shipments
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalNdrAllGet: async (contentType: string, authorization: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'contentType' is not null or undefined
            if (contentType === null || contentType === undefined) {
                throw new RequiredError('contentType','Required parameter contentType was null or undefined when calling v1ExternalNdrAllGet.');
            }
            // verify required parameter 'authorization' is not null or undefined
            if (authorization === null || authorization === undefined) {
                throw new RequiredError('authorization','Required parameter authorization was null or undefined when calling v1ExternalNdrAllGet.');
            }
            const localVarPath = `/v1/external/ndr/all`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (contentType !== undefined && contentType !== null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (authorization !== undefined && authorization !== null) {
                localVarHeaderParameter['Authorization'] = String(authorization);
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API will let you take actions like Reattempt and RTO on the shipments that are in NDR.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `action` | YES | *string* | The action needs to be specified | ‘fake-attempt’ or ‘re-attempt’ or \'return\' | | `comments` | YES | *string* | Any comment can be mentioned | The Byer does not want the product | | `phone` | NO | *string* | The phone number will be updated at the time of re-attempt and fake-attempt | 9999988888 | | `proof_audio` | CONDITIONAL YES | *string* | URL of the audio which will be updated at the time of the fake attempt | [https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/1655100133_file_example_MP3_700KB.mp3](https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/1655100133_file_example_MP3_700KB.mp3) | | `proof_image` | CONDITIONAL YES | *string* | URL of the image which will be updated at the time of the fake attempt | [https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/img_7687678678.jpg](https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/img_7687678678.jpg) | | `remarks` | CONDITIONAL YES | *string* | Remarks will be updated at the time of a fake attempt | Delivery Requested | | `address1` | NO | *string* | address1 will be updated at the time of re-attempt and fake-attempt | U-56, sector-23, Noida, India | | `address2` | NO | *string* | addres2 will be updated at the time of re-attempt and fake-attempt | U-56, sector-23, Noida, India | | `deferred_date` | NO | *date(string)* | Deferred date will be updated as preferred_date at the time of fake-attempt and re-attempt | 2022-08-10 |
         * @summary Action NDR
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalNdrAwbActionPost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/ndr/{awb}/action`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * NDRApi - functional programming interface
 * @export
 */
export const NDRApiFp = function(configuration?: Configuration) {
    return {
        /**
         * Get the shipment details of a particular order through this API by passing the AWB number in the endpoint URL itself. You can get the details like AWB, NDR Attempt, NDR Reason, Customer Details, Product Details, Courier.  Type in your AWB code in place of {AWB}. No other body parameters are required.  #### Path:  |       **EXAMPLE**        | |:-----------------------: | | https://apiv2.shiprocket.in/v1/external/ndr/94711332  |
         * @summary Get Specific NDR Shipment Details
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalNdrAWBGet(contentType: string, authorization: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20023>> {
            const localVarAxiosArgs = await NDRApiAxiosParamCreator(configuration).v1ExternalNdrAWBGet(contentType, authorization, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * This API call will display a list of all the shipments that are in NDR in your Shiprocket account.   You can also sort and filter the data according to your needs by passing the optional parameters. Not passing anything will display the data in the default format.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                           **DESCRIPTION**                            | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:-------------------------------------------------------------------: |:-----------: | |    `page`     |      NO       |   *integer*     |                     The page number to display.                      |      5       | |  `per_page`   |      NO       |    *integer*    |                   The number of entries per page.                    |      5       | |     `to`      |      NO       |    *string*     |                            The end date.                             |  2021-08-02  | |    `from`     |      NO       |    *string*     |                           The start date.                            |  2021-08-02  |                        |   `search`    |      NO       |    *string*     | Search for AWB.  |    224477    |
         * @summary Get All NDR Shipments
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalNdrAllGet(contentType: string, authorization: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
            const localVarAxiosArgs = await NDRApiAxiosParamCreator(configuration).v1ExternalNdrAllGet(contentType, authorization, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * This API will let you take actions like Reattempt and RTO on the shipments that are in NDR.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `action` | YES | *string* | The action needs to be specified | ‘fake-attempt’ or ‘re-attempt’ or \'return\' | | `comments` | YES | *string* | Any comment can be mentioned | The Byer does not want the product | | `phone` | NO | *string* | The phone number will be updated at the time of re-attempt and fake-attempt | 9999988888 | | `proof_audio` | CONDITIONAL YES | *string* | URL of the audio which will be updated at the time of the fake attempt | [https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/1655100133_file_example_MP3_700KB.mp3](https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/1655100133_file_example_MP3_700KB.mp3) | | `proof_image` | CONDITIONAL YES | *string* | URL of the image which will be updated at the time of the fake attempt | [https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/img_7687678678.jpg](https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/img_7687678678.jpg) | | `remarks` | CONDITIONAL YES | *string* | Remarks will be updated at the time of a fake attempt | Delivery Requested | | `address1` | NO | *string* | address1 will be updated at the time of re-attempt and fake-attempt | U-56, sector-23, Noida, India | | `address2` | NO | *string* | addres2 will be updated at the time of re-attempt and fake-attempt | U-56, sector-23, Noida, India | | `deferred_date` | NO | *date(string)* | Deferred date will be updated as preferred_date at the time of fake-attempt and re-attempt | 2022-08-10 |
         * @summary Action NDR
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalNdrAwbActionPost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse202>> {
            const localVarAxiosArgs = await NDRApiAxiosParamCreator(configuration).v1ExternalNdrAwbActionPost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * NDRApi - factory interface
 * @export
 */
export const NDRApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * Get the shipment details of a particular order through this API by passing the AWB number in the endpoint URL itself. You can get the details like AWB, NDR Attempt, NDR Reason, Customer Details, Product Details, Courier.  Type in your AWB code in place of {AWB}. No other body parameters are required.  #### Path:  |       **EXAMPLE**        | |:-----------------------: | | https://apiv2.shiprocket.in/v1/external/ndr/94711332  |
         * @summary Get Specific NDR Shipment Details
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalNdrAWBGet(contentType: string, authorization: string, options?: any): AxiosPromise<InlineResponse20023> {
            return NDRApiFp(configuration).v1ExternalNdrAWBGet(contentType, authorization, options).then((request) => request(axios, basePath));
        },
        /**
         * This API call will display a list of all the shipments that are in NDR in your Shiprocket account.   You can also sort and filter the data according to your needs by passing the optional parameters. Not passing anything will display the data in the default format.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                           **DESCRIPTION**                            | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:-------------------------------------------------------------------: |:-----------: | |    `page`     |      NO       |   *integer*     |                     The page number to display.                      |      5       | |  `per_page`   |      NO       |    *integer*    |                   The number of entries per page.                    |      5       | |     `to`      |      NO       |    *string*     |                            The end date.                             |  2021-08-02  | |    `from`     |      NO       |    *string*     |                           The start date.                            |  2021-08-02  |                        |   `search`    |      NO       |    *string*     | Search for AWB.  |    224477    |
         * @summary Get All NDR Shipments
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalNdrAllGet(contentType: string, authorization: string, options?: any): AxiosPromise<object> {
            return NDRApiFp(configuration).v1ExternalNdrAllGet(contentType, authorization, options).then((request) => request(axios, basePath));
        },
        /**
         * This API will let you take actions like Reattempt and RTO on the shipments that are in NDR.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `action` | YES | *string* | The action needs to be specified | ‘fake-attempt’ or ‘re-attempt’ or \'return\' | | `comments` | YES | *string* | Any comment can be mentioned | The Byer does not want the product | | `phone` | NO | *string* | The phone number will be updated at the time of re-attempt and fake-attempt | 9999988888 | | `proof_audio` | CONDITIONAL YES | *string* | URL of the audio which will be updated at the time of the fake attempt | [https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/1655100133_file_example_MP3_700KB.mp3](https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/1655100133_file_example_MP3_700KB.mp3) | | `proof_image` | CONDITIONAL YES | *string* | URL of the image which will be updated at the time of the fake attempt | [https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/img_7687678678.jpg](https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/img_7687678678.jpg) | | `remarks` | CONDITIONAL YES | *string* | Remarks will be updated at the time of a fake attempt | Delivery Requested | | `address1` | NO | *string* | address1 will be updated at the time of re-attempt and fake-attempt | U-56, sector-23, Noida, India | | `address2` | NO | *string* | addres2 will be updated at the time of re-attempt and fake-attempt | U-56, sector-23, Noida, India | | `deferred_date` | NO | *date(string)* | Deferred date will be updated as preferred_date at the time of fake-attempt and re-attempt | 2022-08-10 |
         * @summary Action NDR
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalNdrAwbActionPost(body?: string, options?: any): AxiosPromise<InlineResponse202> {
            return NDRApiFp(configuration).v1ExternalNdrAwbActionPost(body, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * NDRApi - interface
 * @export
 * @interface NDRApi
 */
export interface NDRApiInterface {
    /**
     * Get the shipment details of a particular order through this API by passing the AWB number in the endpoint URL itself. You can get the details like AWB, NDR Attempt, NDR Reason, Customer Details, Product Details, Courier.  Type in your AWB code in place of {AWB}. No other body parameters are required.  #### Path:  |       **EXAMPLE**        | |:-----------------------: | | https://apiv2.shiprocket.in/v1/external/ndr/94711332  |
     * @summary Get Specific NDR Shipment Details
     * @param {string} contentType 
     * @param {string} authorization 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NDRApiInterface
     */
    v1ExternalNdrAWBGet(contentType: string, authorization: string, options?: any): AxiosPromise<InlineResponse20023>;

    /**
     * This API call will display a list of all the shipments that are in NDR in your Shiprocket account.   You can also sort and filter the data according to your needs by passing the optional parameters. Not passing anything will display the data in the default format.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                           **DESCRIPTION**                            | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:-------------------------------------------------------------------: |:-----------: | |    `page`     |      NO       |   *integer*     |                     The page number to display.                      |      5       | |  `per_page`   |      NO       |    *integer*    |                   The number of entries per page.                    |      5       | |     `to`      |      NO       |    *string*     |                            The end date.                             |  2021-08-02  | |    `from`     |      NO       |    *string*     |                           The start date.                            |  2021-08-02  |                        |   `search`    |      NO       |    *string*     | Search for AWB.  |    224477    |
     * @summary Get All NDR Shipments
     * @param {string} contentType 
     * @param {string} authorization 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NDRApiInterface
     */
    v1ExternalNdrAllGet(contentType: string, authorization: string, options?: any): AxiosPromise<object>;

    /**
     * This API will let you take actions like Reattempt and RTO on the shipments that are in NDR.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `action` | YES | *string* | The action needs to be specified | ‘fake-attempt’ or ‘re-attempt’ or \'return\' | | `comments` | YES | *string* | Any comment can be mentioned | The Byer does not want the product | | `phone` | NO | *string* | The phone number will be updated at the time of re-attempt and fake-attempt | 9999988888 | | `proof_audio` | CONDITIONAL YES | *string* | URL of the audio which will be updated at the time of the fake attempt | [https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/1655100133_file_example_MP3_700KB.mp3](https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/1655100133_file_example_MP3_700KB.mp3) | | `proof_image` | CONDITIONAL YES | *string* | URL of the image which will be updated at the time of the fake attempt | [https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/img_7687678678.jpg](https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/img_7687678678.jpg) | | `remarks` | CONDITIONAL YES | *string* | Remarks will be updated at the time of a fake attempt | Delivery Requested | | `address1` | NO | *string* | address1 will be updated at the time of re-attempt and fake-attempt | U-56, sector-23, Noida, India | | `address2` | NO | *string* | addres2 will be updated at the time of re-attempt and fake-attempt | U-56, sector-23, Noida, India | | `deferred_date` | NO | *date(string)* | Deferred date will be updated as preferred_date at the time of fake-attempt and re-attempt | 2022-08-10 |
     * @summary Action NDR
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NDRApiInterface
     */
    v1ExternalNdrAwbActionPost(body?: string, options?: any): AxiosPromise<InlineResponse202>;

}

/**
 * NDRApi - object-oriented interface
 * @export
 * @class NDRApi
 * @extends {BaseAPI}
 */
export class NDRApi extends BaseAPI implements NDRApiInterface {
    /**
     * Get the shipment details of a particular order through this API by passing the AWB number in the endpoint URL itself. You can get the details like AWB, NDR Attempt, NDR Reason, Customer Details, Product Details, Courier.  Type in your AWB code in place of {AWB}. No other body parameters are required.  #### Path:  |       **EXAMPLE**        | |:-----------------------: | | https://apiv2.shiprocket.in/v1/external/ndr/94711332  |
     * @summary Get Specific NDR Shipment Details
     * @param {string} contentType 
     * @param {string} authorization 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NDRApi
     */
    public v1ExternalNdrAWBGet(contentType: string, authorization: string, options?: any) {
        return NDRApiFp(this.configuration).v1ExternalNdrAWBGet(contentType, authorization, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API call will display a list of all the shipments that are in NDR in your Shiprocket account.   You can also sort and filter the data according to your needs by passing the optional parameters. Not passing anything will display the data in the default format.  #### Parameters:  | **PARAMS**  | **REQUIRED**  |  **DATA TYPE**  |                           **DESCRIPTION**                            | **EXAMPLE**  | |:----------: |:------------: |:--------------: |:-------------------------------------------------------------------: |:-----------: | |    `page`     |      NO       |   *integer*     |                     The page number to display.                      |      5       | |  `per_page`   |      NO       |    *integer*    |                   The number of entries per page.                    |      5       | |     `to`      |      NO       |    *string*     |                            The end date.                             |  2021-08-02  | |    `from`     |      NO       |    *string*     |                           The start date.                            |  2021-08-02  |                        |   `search`    |      NO       |    *string*     | Search for AWB.  |    224477    |
     * @summary Get All NDR Shipments
     * @param {string} contentType 
     * @param {string} authorization 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NDRApi
     */
    public v1ExternalNdrAllGet(contentType: string, authorization: string, options?: any) {
        return NDRApiFp(this.configuration).v1ExternalNdrAllGet(contentType, authorization, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API will let you take actions like Reattempt and RTO on the shipments that are in NDR.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `action` | YES | *string* | The action needs to be specified | ‘fake-attempt’ or ‘re-attempt’ or \'return\' | | `comments` | YES | *string* | Any comment can be mentioned | The Byer does not want the product | | `phone` | NO | *string* | The phone number will be updated at the time of re-attempt and fake-attempt | 9999988888 | | `proof_audio` | CONDITIONAL YES | *string* | URL of the audio which will be updated at the time of the fake attempt | [https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/1655100133_file_example_MP3_700KB.mp3](https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/1655100133_file_example_MP3_700KB.mp3) | | `proof_image` | CONDITIONAL YES | *string* | URL of the image which will be updated at the time of the fake attempt | [https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/img_7687678678.jpg](https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/imports/ndr/img_7687678678.jpg) | | `remarks` | CONDITIONAL YES | *string* | Remarks will be updated at the time of a fake attempt | Delivery Requested | | `address1` | NO | *string* | address1 will be updated at the time of re-attempt and fake-attempt | U-56, sector-23, Noida, India | | `address2` | NO | *string* | addres2 will be updated at the time of re-attempt and fake-attempt | U-56, sector-23, Noida, India | | `deferred_date` | NO | *date(string)* | Deferred date will be updated as preferred_date at the time of fake-attempt and re-attempt | 2022-08-10 |
     * @summary Action NDR
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NDRApi
     */
    public v1ExternalNdrAwbActionPost(body?: string, options?: any) {
        return NDRApiFp(this.configuration).v1ExternalNdrAwbActionPost(body, options).then((request) => request(this.axios, this.basePath));
    }

}
