// tslint:disable
/**
 * shiprocket
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as globalImportUrl from 'url';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { InlineResponse2001 } from '../models';
// @ts-ignore
import { InlineResponse20010 } from '../models';
// @ts-ignore
import { InlineResponse20011 } from '../models';
// @ts-ignore
import { InlineResponse20012 } from '../models';
// @ts-ignore
import { InlineResponse403 } from '../models';
// @ts-ignore
import { InlineResponse422 } from '../models';
/**
 * HyperlocalOrdersApi - axios parameter creator
 * @export
 */
export const HyperlocalOrdersApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Use this API to create a quick custom order. Quick orders are the ones where we do not store the product details in the master catalogue.  You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  **Note:**  - In case the \'shipping_is_billing\' field is false, further shipping detail fields are required.       If no channel id is passed, the order will be assigned to the default custom channel. If the channel id is not known, use the \'Get All Channels\' API to get the list of all integrated channels in your Shiprocket account.  - order_id field cannot be equal to an already existing id. Doing so does not change or affect the existing order.      - New orders cannot be created with order id\'s same as that of cancelled orders. If error 422 shows up despite filling in the correct details, consider changing the order_id.      - Be sure to input the correct calculated sub_total amount. The total is not calculated automatically through the API.      - The \'order_id\' returned in the response is the Shiprocket order_id. Please save this order ID as we will use this in future API calls.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `order_id` | YES | _string_ | The order id you want to specify to the order. Max char: 50. (Avoid passing character values as this contradicts some other API calls). | 224477 or 224-477 | | `order_date` | YES | _string_ | The date of order creation in yyyy-mm-dd format. Time is additional. | 2019-07-24 11:11 | | `pickup_location` | YES | _string_ | The name of the pickup location added in your Shiprocket account. This cannot be a new location. | Jammu | | `channel_id` | NO | _integer_ | Mention this in case you need to assign the order to a particular channel. Deafult is \'Custom\'. | 27022 | | `comment` | NO | _string_ | Option to add \'From\' field to the shipment. To do this, enter the name in the following format: \'Reseller: \\[name\\]\'. | Reseller: Divine | | `reseller_name` | NO | _string_ | The \'from\' name if you want to print. Use \'Reseller: \\[name\\]\' | Reseller: Divine | | `company_name` | NO | _string_ | Name of the company. | Amazon | | `billing_customer_name` | YES | _string_ | First name of the billed customer. | John | | `billing_last_name` | NO | _string_ | Last name of the billed customer. | Doe | | `billing_address` | YES | _string_ | address details of the billed customer. | Civil line, House 20 | | `billing_address_2` | NO | _string_ | Further address details of the billed customer. | Near Hokage House | | `billing_city` | YES | _string_ | Billing address city. Max char: 30. | New Delhi | | `billing_pincode` | YES | _integer_ | Pincode of the billing address. | 110002 | | `billing_state` | YES | _string_ | Billing address state. | Delhi | | `billing_country` | YES | _string_ | Billing address country. | India | | `billing_email` | YES | _string_ | Email address of the billed customer. | [John@doe.com](https://mailto:John@doe.com) | | `billing_phone` | YES | _integer_ | The phone number of the billing customer. | 9856321472 | | `billing_alternate_phone` | NO | _integer_ | Alternate phone number of the billing customer. | 8604690454 | | `shipping_is_billing` | YES | _boolean_ | Whether the shipping address is the same as billing address. 1 or \'true\' for yes and 0 or \'false\' for no. | true | | `shipping_customer_name` | CONDITIONAL YES | _string_ | Name of the customer the order is shipped to. Required in case billing is not same as shipping. | Jane | | `shipping_last_name` | NO | _string_ | Last name of the shipping customer. | Doe | | `shipping_address` | CONDITIONAL YES | _string_ | Address of the Shipping customer. Required in case billing is not same as shipping. | Lane number 69 | | `shipping_address_2` | NO | _string_ | Further address details of shipping customer. | Andheri | | `billing_isd_code` | NO | _string_ | ISD code of the billing address. | +91 | | `shipping_city` | CONDITIONAL YES | _string_ | Shipping address city. | Mumbai | | `shipping_pincode` | CONDITIONAL YES | _integer_ | Shipping address pincode. | 200912 | | `shipping_country` | CONDITIONAL YES | _string_ | Shipping address country. | India | | `shipping_state` | CONDITIONAL YES | _string_ | Shipping address state. | Maharashtra | | `shipping_email` | NO | _string_ | Email of the shipping customer. | [Jane@doe.com](https://mailto:Jane@doe.com) | | `shipping_phone` | CONDITIONAL YES | _integer_ | Phone no. of the shipping customer. |  | | `longitude` | YES | _float_ | Delivery Longitude. Mandatory in case of Hyper local shipments | 77.06745147705078 | | `latitude` | YES | _float_ | Delivery Latitude. Mandatory in case of Hyper local shipments | 28.50724220275879 | | `order_items` | YES | / | List of items and their relevant fields in the form of Array. | / | | `name` | YES | _string_ | Name of the product. | Jeans | | `sku` | YES | _string_ | The sku id of the product. | cbs123 | | `units` | YES | _integer_ | No of units that are to be shipped. | 10 | | `selling_price` | YES | _integer_ | The selling price per unit in Rupee. Inclusive of GST. | 900 | | `discount` | NO | _integer_ | The discount amount in Rupee. Inclusive of tax. | 10 | | `tax` | NO | _integer_ | The tax percentage on the item. | 5 | | `hsn` | NO | _integer_ | Harmonised System Nomenclature code. Used to determine the category of taxation the goods fall under. | 44122 | | `payment_method` | YES | _string_ | The method of payment. Can be either COD (Cash on delivery) Or Prepaid. | COD | | `shipping_charges` | NO | _integer_ | Shipping charges if any in Rupee. | 5 | | `giftwrap_charges` | NO | _integer_ | Giftwrap charges if any in Rupee. | 5 | | `transaction_charges` | NO | _integer_ | Transaction charges if any in Rupee. | 5 | | `total_discount` | NO | _integer_ | The total discount amount in Rupee. | 15 | | `sub_total` | YES | _integer_ | Calculated sub total amount in Rupee after deductions. | 9010 | | `length` | YES | _float_ | The length of the item in cms. Must be more than 0.5. | 10 | | `breadth` | YES | _float_ | The breadth of the item in cms. Must be more than 0.5. | 10 | | `height` | YES | _float_ | The height of the item in cms. Must be more than 0.5. | 10 | | `weight` | YES | _float_ | The weight of the item in kgs. Must be more than 0. | 2.5 | | `ewaybill_no` | NO | _string_ | Details relating to the shipment of goods. . | K92373490 | | `customer_gstin` | NO | _string_ | Goods and Services Tax Identification Number. | 29ABCDE1234F2Z5 | | `invoice_number` | NO | _string_ |  |  | | `order_type` | NO | _string_ | Key to differentiate between Essentials or Non Essentials Shipments. Order type can only be ESSENTIALS or NON ESSENTIALS. Please note it is case sensitive and blank values are allowed. | ESSENTIALS | | `checkout_shipping_method` | NO | _string_ | Only for SRF users. | a. SR_RUSH: SDD, NDD  <br>b. SR_STANDARD: Surface Delivery  <br>c. SR_EXPRESS: Air Delivery  <br>d. SR_QUICK: 3 hrs delivery | | `what3words_address` | NO | _string_ | What3words is a proprietary geocode system designed to identify any location on the surface of Earth with a resolution of about 3 meters. The system encodes geographic coordinates into three permanently fixed dictionary words. | toddler.geologist.animated | | `is_insurance_opt` | NO | _boolean_ | To secure shipments above the order value of Rs 2500 | true | | `is_document` | NO | _integer_ | To create a document order | 1 or 0 | | `shipping_method` | YES | _string_ | Shipping method use HL in case of Hyper local shipments | HL |
         * @summary Create Custom Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersCreateAdhocPost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/orders/create/adhoc`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API downloads and creates a CSV file of all the orders in your Shiprocket account and sends the download URL to the linked email account of the API user.  The CSV file containing is accessible via this URL. No parameters are required to access this API.
         * @summary Export your orders
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersExportPost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/orders/export`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API call will display a list of all created and available orders in your Shiprocket account. The product and shipment details are displayed as sub-arrays within each order detail.  You can also sort and filter the data according to your needs by passing the optional parameters. Not passing anything will display the data in the default format.  You can also fetch the data based on the order update date. PFB the validations:  ``` 1. if updated_to => passed and updated_from not passed =>, error will come => Please send update_from date along with update_to date 2. if updated_from => passed and updated_to => paased => and from-to > 30 then error => Difference between updated_from and update_to date should not be greater than 30 days. 3. if updated_From < 30 then error => Updated_from date should not be less than 30 days from current date   ```  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `page` | NO | _integer_ | The page number to display. | 5 | | `per_page` | NO | _integer_ | The number of entries per page. | 5 | | `sort` | NO | _string_ | Sort conditions: ASC or DESC | ASC | | `sort_by` | NO | _string_ | The Field to sort by: id or status | id | | `to` | NO | _string_ | The end date. | 2018-07-24 | | `from` | NO | _string_ | The start date. | 2019-07-24 | | `filter_by` | NO | _string_ | Field to filter by. | status, payment_method, delivery_country, channel_order_id | | `filter` | NO | _string_ | Value of the field |  | | `search` | NO | _string_ | Search for AWB or by Channel order_id (order id specified by you). | 224477 | | `pickup_location` | NO | _string_ | Search Orders on the basis of pickup location. | xyz | | `channel_id` | NO | _integer_ | Channel ID Returned in Get Integrated Channels API | 123 | | `fbs` | NO | _integer_ | Use this filter if you want to view and filter the SRF orders | 0 or 1 |
         * @summary Get all Orders
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersGet: async (contentType: string, authorization: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'contentType' is not null or undefined
            if (contentType === null || contentType === undefined) {
                throw new RequiredError('contentType','Required parameter contentType was null or undefined when calling v1ExternalOrdersGet.');
            }
            // verify required parameter 'authorization' is not null or undefined
            if (authorization === null || authorization === undefined) {
                throw new RequiredError('authorization','Required parameter authorization was null or undefined when calling v1ExternalOrdersGet.');
            }
            const localVarPath = `/v1/external/orders`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (contentType !== undefined && contentType !== null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (authorization !== undefined && authorization !== null) {
                localVarHeaderParameter['Authorization'] = String(authorization);
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get the order and shipment details of a particular order through this API by passing the Shiprocket order_id in the endpoint URL itself — type in your order_id in place of {id}.  No other body parameters are required.  **Note:**  For SRF orders, you\'ll receive an extra parameter viz., fulfillment_status. This key will have four values:  *   Ready to Pack,  *   Packed *   Added to Picklist *   Picked up         #### Path:  | **EXAMPLE** | | --- | | [https://apiv2.shiprocket.in/v1/external/orders/show/16167171](https://apiv2.shiprocket.in/v1/external/orders/show/16167171) |
         * @summary Get Specific Order Details
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersShowGet: async (contentType: string, authorization: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'contentType' is not null or undefined
            if (contentType === null || contentType === undefined) {
                throw new RequiredError('contentType','Required parameter contentType was null or undefined when calling v1ExternalOrdersShowGet.');
            }
            // verify required parameter 'authorization' is not null or undefined
            if (authorization === null || authorization === undefined) {
                throw new RequiredError('authorization','Required parameter authorization was null or undefined when calling v1ExternalOrdersShowGet.');
            }
            const localVarPath = `/v1/external/orders/show`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (contentType !== undefined && contentType !== null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (authorization !== undefined && authorization !== null) {
                localVarHeaderParameter['Authorization'] = String(authorization);
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * HyperlocalOrdersApi - functional programming interface
 * @export
 */
export const HyperlocalOrdersApiFp = function(configuration?: Configuration) {
    return {
        /**
         * Use this API to create a quick custom order. Quick orders are the ones where we do not store the product details in the master catalogue.  You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  **Note:**  - In case the \'shipping_is_billing\' field is false, further shipping detail fields are required.       If no channel id is passed, the order will be assigned to the default custom channel. If the channel id is not known, use the \'Get All Channels\' API to get the list of all integrated channels in your Shiprocket account.  - order_id field cannot be equal to an already existing id. Doing so does not change or affect the existing order.      - New orders cannot be created with order id\'s same as that of cancelled orders. If error 422 shows up despite filling in the correct details, consider changing the order_id.      - Be sure to input the correct calculated sub_total amount. The total is not calculated automatically through the API.      - The \'order_id\' returned in the response is the Shiprocket order_id. Please save this order ID as we will use this in future API calls.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `order_id` | YES | _string_ | The order id you want to specify to the order. Max char: 50. (Avoid passing character values as this contradicts some other API calls). | 224477 or 224-477 | | `order_date` | YES | _string_ | The date of order creation in yyyy-mm-dd format. Time is additional. | 2019-07-24 11:11 | | `pickup_location` | YES | _string_ | The name of the pickup location added in your Shiprocket account. This cannot be a new location. | Jammu | | `channel_id` | NO | _integer_ | Mention this in case you need to assign the order to a particular channel. Deafult is \'Custom\'. | 27022 | | `comment` | NO | _string_ | Option to add \'From\' field to the shipment. To do this, enter the name in the following format: \'Reseller: \\[name\\]\'. | Reseller: Divine | | `reseller_name` | NO | _string_ | The \'from\' name if you want to print. Use \'Reseller: \\[name\\]\' | Reseller: Divine | | `company_name` | NO | _string_ | Name of the company. | Amazon | | `billing_customer_name` | YES | _string_ | First name of the billed customer. | John | | `billing_last_name` | NO | _string_ | Last name of the billed customer. | Doe | | `billing_address` | YES | _string_ | address details of the billed customer. | Civil line, House 20 | | `billing_address_2` | NO | _string_ | Further address details of the billed customer. | Near Hokage House | | `billing_city` | YES | _string_ | Billing address city. Max char: 30. | New Delhi | | `billing_pincode` | YES | _integer_ | Pincode of the billing address. | 110002 | | `billing_state` | YES | _string_ | Billing address state. | Delhi | | `billing_country` | YES | _string_ | Billing address country. | India | | `billing_email` | YES | _string_ | Email address of the billed customer. | [John@doe.com](https://mailto:John@doe.com) | | `billing_phone` | YES | _integer_ | The phone number of the billing customer. | 9856321472 | | `billing_alternate_phone` | NO | _integer_ | Alternate phone number of the billing customer. | 8604690454 | | `shipping_is_billing` | YES | _boolean_ | Whether the shipping address is the same as billing address. 1 or \'true\' for yes and 0 or \'false\' for no. | true | | `shipping_customer_name` | CONDITIONAL YES | _string_ | Name of the customer the order is shipped to. Required in case billing is not same as shipping. | Jane | | `shipping_last_name` | NO | _string_ | Last name of the shipping customer. | Doe | | `shipping_address` | CONDITIONAL YES | _string_ | Address of the Shipping customer. Required in case billing is not same as shipping. | Lane number 69 | | `shipping_address_2` | NO | _string_ | Further address details of shipping customer. | Andheri | | `billing_isd_code` | NO | _string_ | ISD code of the billing address. | +91 | | `shipping_city` | CONDITIONAL YES | _string_ | Shipping address city. | Mumbai | | `shipping_pincode` | CONDITIONAL YES | _integer_ | Shipping address pincode. | 200912 | | `shipping_country` | CONDITIONAL YES | _string_ | Shipping address country. | India | | `shipping_state` | CONDITIONAL YES | _string_ | Shipping address state. | Maharashtra | | `shipping_email` | NO | _string_ | Email of the shipping customer. | [Jane@doe.com](https://mailto:Jane@doe.com) | | `shipping_phone` | CONDITIONAL YES | _integer_ | Phone no. of the shipping customer. |  | | `longitude` | YES | _float_ | Delivery Longitude. Mandatory in case of Hyper local shipments | 77.06745147705078 | | `latitude` | YES | _float_ | Delivery Latitude. Mandatory in case of Hyper local shipments | 28.50724220275879 | | `order_items` | YES | / | List of items and their relevant fields in the form of Array. | / | | `name` | YES | _string_ | Name of the product. | Jeans | | `sku` | YES | _string_ | The sku id of the product. | cbs123 | | `units` | YES | _integer_ | No of units that are to be shipped. | 10 | | `selling_price` | YES | _integer_ | The selling price per unit in Rupee. Inclusive of GST. | 900 | | `discount` | NO | _integer_ | The discount amount in Rupee. Inclusive of tax. | 10 | | `tax` | NO | _integer_ | The tax percentage on the item. | 5 | | `hsn` | NO | _integer_ | Harmonised System Nomenclature code. Used to determine the category of taxation the goods fall under. | 44122 | | `payment_method` | YES | _string_ | The method of payment. Can be either COD (Cash on delivery) Or Prepaid. | COD | | `shipping_charges` | NO | _integer_ | Shipping charges if any in Rupee. | 5 | | `giftwrap_charges` | NO | _integer_ | Giftwrap charges if any in Rupee. | 5 | | `transaction_charges` | NO | _integer_ | Transaction charges if any in Rupee. | 5 | | `total_discount` | NO | _integer_ | The total discount amount in Rupee. | 15 | | `sub_total` | YES | _integer_ | Calculated sub total amount in Rupee after deductions. | 9010 | | `length` | YES | _float_ | The length of the item in cms. Must be more than 0.5. | 10 | | `breadth` | YES | _float_ | The breadth of the item in cms. Must be more than 0.5. | 10 | | `height` | YES | _float_ | The height of the item in cms. Must be more than 0.5. | 10 | | `weight` | YES | _float_ | The weight of the item in kgs. Must be more than 0. | 2.5 | | `ewaybill_no` | NO | _string_ | Details relating to the shipment of goods. . | K92373490 | | `customer_gstin` | NO | _string_ | Goods and Services Tax Identification Number. | 29ABCDE1234F2Z5 | | `invoice_number` | NO | _string_ |  |  | | `order_type` | NO | _string_ | Key to differentiate between Essentials or Non Essentials Shipments. Order type can only be ESSENTIALS or NON ESSENTIALS. Please note it is case sensitive and blank values are allowed. | ESSENTIALS | | `checkout_shipping_method` | NO | _string_ | Only for SRF users. | a. SR_RUSH: SDD, NDD  <br>b. SR_STANDARD: Surface Delivery  <br>c. SR_EXPRESS: Air Delivery  <br>d. SR_QUICK: 3 hrs delivery | | `what3words_address` | NO | _string_ | What3words is a proprietary geocode system designed to identify any location on the surface of Earth with a resolution of about 3 meters. The system encodes geographic coordinates into three permanently fixed dictionary words. | toddler.geologist.animated | | `is_insurance_opt` | NO | _boolean_ | To secure shipments above the order value of Rs 2500 | true | | `is_document` | NO | _integer_ | To create a document order | 1 or 0 | | `shipping_method` | YES | _string_ | Shipping method use HL in case of Hyper local shipments | HL |
         * @summary Create Custom Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersCreateAdhocPost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse2001>> {
            const localVarAxiosArgs = await HyperlocalOrdersApiAxiosParamCreator(configuration).v1ExternalOrdersCreateAdhocPost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * This API downloads and creates a CSV file of all the orders in your Shiprocket account and sends the download URL to the linked email account of the API user.  The CSV file containing is accessible via this URL. No parameters are required to access this API.
         * @summary Export your orders
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersExportPost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20012>> {
            const localVarAxiosArgs = await HyperlocalOrdersApiAxiosParamCreator(configuration).v1ExternalOrdersExportPost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * This API call will display a list of all created and available orders in your Shiprocket account. The product and shipment details are displayed as sub-arrays within each order detail.  You can also sort and filter the data according to your needs by passing the optional parameters. Not passing anything will display the data in the default format.  You can also fetch the data based on the order update date. PFB the validations:  ``` 1. if updated_to => passed and updated_from not passed =>, error will come => Please send update_from date along with update_to date 2. if updated_from => passed and updated_to => paased => and from-to > 30 then error => Difference between updated_from and update_to date should not be greater than 30 days. 3. if updated_From < 30 then error => Updated_from date should not be less than 30 days from current date   ```  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `page` | NO | _integer_ | The page number to display. | 5 | | `per_page` | NO | _integer_ | The number of entries per page. | 5 | | `sort` | NO | _string_ | Sort conditions: ASC or DESC | ASC | | `sort_by` | NO | _string_ | The Field to sort by: id or status | id | | `to` | NO | _string_ | The end date. | 2018-07-24 | | `from` | NO | _string_ | The start date. | 2019-07-24 | | `filter_by` | NO | _string_ | Field to filter by. | status, payment_method, delivery_country, channel_order_id | | `filter` | NO | _string_ | Value of the field |  | | `search` | NO | _string_ | Search for AWB or by Channel order_id (order id specified by you). | 224477 | | `pickup_location` | NO | _string_ | Search Orders on the basis of pickup location. | xyz | | `channel_id` | NO | _integer_ | Channel ID Returned in Get Integrated Channels API | 123 | | `fbs` | NO | _integer_ | Use this filter if you want to view and filter the SRF orders | 0 or 1 |
         * @summary Get all Orders
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersGet(contentType: string, authorization: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20010>> {
            const localVarAxiosArgs = await HyperlocalOrdersApiAxiosParamCreator(configuration).v1ExternalOrdersGet(contentType, authorization, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Get the order and shipment details of a particular order through this API by passing the Shiprocket order_id in the endpoint URL itself — type in your order_id in place of {id}.  No other body parameters are required.  **Note:**  For SRF orders, you\'ll receive an extra parameter viz., fulfillment_status. This key will have four values:  *   Ready to Pack,  *   Packed *   Added to Picklist *   Picked up         #### Path:  | **EXAMPLE** | | --- | | [https://apiv2.shiprocket.in/v1/external/orders/show/16167171](https://apiv2.shiprocket.in/v1/external/orders/show/16167171) |
         * @summary Get Specific Order Details
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersShowGet(contentType: string, authorization: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20011>> {
            const localVarAxiosArgs = await HyperlocalOrdersApiAxiosParamCreator(configuration).v1ExternalOrdersShowGet(contentType, authorization, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * HyperlocalOrdersApi - factory interface
 * @export
 */
export const HyperlocalOrdersApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * Use this API to create a quick custom order. Quick orders are the ones where we do not store the product details in the master catalogue.  You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  **Note:**  - In case the \'shipping_is_billing\' field is false, further shipping detail fields are required.       If no channel id is passed, the order will be assigned to the default custom channel. If the channel id is not known, use the \'Get All Channels\' API to get the list of all integrated channels in your Shiprocket account.  - order_id field cannot be equal to an already existing id. Doing so does not change or affect the existing order.      - New orders cannot be created with order id\'s same as that of cancelled orders. If error 422 shows up despite filling in the correct details, consider changing the order_id.      - Be sure to input the correct calculated sub_total amount. The total is not calculated automatically through the API.      - The \'order_id\' returned in the response is the Shiprocket order_id. Please save this order ID as we will use this in future API calls.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `order_id` | YES | _string_ | The order id you want to specify to the order. Max char: 50. (Avoid passing character values as this contradicts some other API calls). | 224477 or 224-477 | | `order_date` | YES | _string_ | The date of order creation in yyyy-mm-dd format. Time is additional. | 2019-07-24 11:11 | | `pickup_location` | YES | _string_ | The name of the pickup location added in your Shiprocket account. This cannot be a new location. | Jammu | | `channel_id` | NO | _integer_ | Mention this in case you need to assign the order to a particular channel. Deafult is \'Custom\'. | 27022 | | `comment` | NO | _string_ | Option to add \'From\' field to the shipment. To do this, enter the name in the following format: \'Reseller: \\[name\\]\'. | Reseller: Divine | | `reseller_name` | NO | _string_ | The \'from\' name if you want to print. Use \'Reseller: \\[name\\]\' | Reseller: Divine | | `company_name` | NO | _string_ | Name of the company. | Amazon | | `billing_customer_name` | YES | _string_ | First name of the billed customer. | John | | `billing_last_name` | NO | _string_ | Last name of the billed customer. | Doe | | `billing_address` | YES | _string_ | address details of the billed customer. | Civil line, House 20 | | `billing_address_2` | NO | _string_ | Further address details of the billed customer. | Near Hokage House | | `billing_city` | YES | _string_ | Billing address city. Max char: 30. | New Delhi | | `billing_pincode` | YES | _integer_ | Pincode of the billing address. | 110002 | | `billing_state` | YES | _string_ | Billing address state. | Delhi | | `billing_country` | YES | _string_ | Billing address country. | India | | `billing_email` | YES | _string_ | Email address of the billed customer. | [John@doe.com](https://mailto:John@doe.com) | | `billing_phone` | YES | _integer_ | The phone number of the billing customer. | 9856321472 | | `billing_alternate_phone` | NO | _integer_ | Alternate phone number of the billing customer. | 8604690454 | | `shipping_is_billing` | YES | _boolean_ | Whether the shipping address is the same as billing address. 1 or \'true\' for yes and 0 or \'false\' for no. | true | | `shipping_customer_name` | CONDITIONAL YES | _string_ | Name of the customer the order is shipped to. Required in case billing is not same as shipping. | Jane | | `shipping_last_name` | NO | _string_ | Last name of the shipping customer. | Doe | | `shipping_address` | CONDITIONAL YES | _string_ | Address of the Shipping customer. Required in case billing is not same as shipping. | Lane number 69 | | `shipping_address_2` | NO | _string_ | Further address details of shipping customer. | Andheri | | `billing_isd_code` | NO | _string_ | ISD code of the billing address. | +91 | | `shipping_city` | CONDITIONAL YES | _string_ | Shipping address city. | Mumbai | | `shipping_pincode` | CONDITIONAL YES | _integer_ | Shipping address pincode. | 200912 | | `shipping_country` | CONDITIONAL YES | _string_ | Shipping address country. | India | | `shipping_state` | CONDITIONAL YES | _string_ | Shipping address state. | Maharashtra | | `shipping_email` | NO | _string_ | Email of the shipping customer. | [Jane@doe.com](https://mailto:Jane@doe.com) | | `shipping_phone` | CONDITIONAL YES | _integer_ | Phone no. of the shipping customer. |  | | `longitude` | YES | _float_ | Delivery Longitude. Mandatory in case of Hyper local shipments | 77.06745147705078 | | `latitude` | YES | _float_ | Delivery Latitude. Mandatory in case of Hyper local shipments | 28.50724220275879 | | `order_items` | YES | / | List of items and their relevant fields in the form of Array. | / | | `name` | YES | _string_ | Name of the product. | Jeans | | `sku` | YES | _string_ | The sku id of the product. | cbs123 | | `units` | YES | _integer_ | No of units that are to be shipped. | 10 | | `selling_price` | YES | _integer_ | The selling price per unit in Rupee. Inclusive of GST. | 900 | | `discount` | NO | _integer_ | The discount amount in Rupee. Inclusive of tax. | 10 | | `tax` | NO | _integer_ | The tax percentage on the item. | 5 | | `hsn` | NO | _integer_ | Harmonised System Nomenclature code. Used to determine the category of taxation the goods fall under. | 44122 | | `payment_method` | YES | _string_ | The method of payment. Can be either COD (Cash on delivery) Or Prepaid. | COD | | `shipping_charges` | NO | _integer_ | Shipping charges if any in Rupee. | 5 | | `giftwrap_charges` | NO | _integer_ | Giftwrap charges if any in Rupee. | 5 | | `transaction_charges` | NO | _integer_ | Transaction charges if any in Rupee. | 5 | | `total_discount` | NO | _integer_ | The total discount amount in Rupee. | 15 | | `sub_total` | YES | _integer_ | Calculated sub total amount in Rupee after deductions. | 9010 | | `length` | YES | _float_ | The length of the item in cms. Must be more than 0.5. | 10 | | `breadth` | YES | _float_ | The breadth of the item in cms. Must be more than 0.5. | 10 | | `height` | YES | _float_ | The height of the item in cms. Must be more than 0.5. | 10 | | `weight` | YES | _float_ | The weight of the item in kgs. Must be more than 0. | 2.5 | | `ewaybill_no` | NO | _string_ | Details relating to the shipment of goods. . | K92373490 | | `customer_gstin` | NO | _string_ | Goods and Services Tax Identification Number. | 29ABCDE1234F2Z5 | | `invoice_number` | NO | _string_ |  |  | | `order_type` | NO | _string_ | Key to differentiate between Essentials or Non Essentials Shipments. Order type can only be ESSENTIALS or NON ESSENTIALS. Please note it is case sensitive and blank values are allowed. | ESSENTIALS | | `checkout_shipping_method` | NO | _string_ | Only for SRF users. | a. SR_RUSH: SDD, NDD  <br>b. SR_STANDARD: Surface Delivery  <br>c. SR_EXPRESS: Air Delivery  <br>d. SR_QUICK: 3 hrs delivery | | `what3words_address` | NO | _string_ | What3words is a proprietary geocode system designed to identify any location on the surface of Earth with a resolution of about 3 meters. The system encodes geographic coordinates into three permanently fixed dictionary words. | toddler.geologist.animated | | `is_insurance_opt` | NO | _boolean_ | To secure shipments above the order value of Rs 2500 | true | | `is_document` | NO | _integer_ | To create a document order | 1 or 0 | | `shipping_method` | YES | _string_ | Shipping method use HL in case of Hyper local shipments | HL |
         * @summary Create Custom Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersCreateAdhocPost(body?: string, options?: any): AxiosPromise<InlineResponse2001> {
            return HyperlocalOrdersApiFp(configuration).v1ExternalOrdersCreateAdhocPost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * This API downloads and creates a CSV file of all the orders in your Shiprocket account and sends the download URL to the linked email account of the API user.  The CSV file containing is accessible via this URL. No parameters are required to access this API.
         * @summary Export your orders
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersExportPost(body?: string, options?: any): AxiosPromise<InlineResponse20012> {
            return HyperlocalOrdersApiFp(configuration).v1ExternalOrdersExportPost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * This API call will display a list of all created and available orders in your Shiprocket account. The product and shipment details are displayed as sub-arrays within each order detail.  You can also sort and filter the data according to your needs by passing the optional parameters. Not passing anything will display the data in the default format.  You can also fetch the data based on the order update date. PFB the validations:  ``` 1. if updated_to => passed and updated_from not passed =>, error will come => Please send update_from date along with update_to date 2. if updated_from => passed and updated_to => paased => and from-to > 30 then error => Difference between updated_from and update_to date should not be greater than 30 days. 3. if updated_From < 30 then error => Updated_from date should not be less than 30 days from current date   ```  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `page` | NO | _integer_ | The page number to display. | 5 | | `per_page` | NO | _integer_ | The number of entries per page. | 5 | | `sort` | NO | _string_ | Sort conditions: ASC or DESC | ASC | | `sort_by` | NO | _string_ | The Field to sort by: id or status | id | | `to` | NO | _string_ | The end date. | 2018-07-24 | | `from` | NO | _string_ | The start date. | 2019-07-24 | | `filter_by` | NO | _string_ | Field to filter by. | status, payment_method, delivery_country, channel_order_id | | `filter` | NO | _string_ | Value of the field |  | | `search` | NO | _string_ | Search for AWB or by Channel order_id (order id specified by you). | 224477 | | `pickup_location` | NO | _string_ | Search Orders on the basis of pickup location. | xyz | | `channel_id` | NO | _integer_ | Channel ID Returned in Get Integrated Channels API | 123 | | `fbs` | NO | _integer_ | Use this filter if you want to view and filter the SRF orders | 0 or 1 |
         * @summary Get all Orders
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersGet(contentType: string, authorization: string, options?: any): AxiosPromise<InlineResponse20010> {
            return HyperlocalOrdersApiFp(configuration).v1ExternalOrdersGet(contentType, authorization, options).then((request) => request(axios, basePath));
        },
        /**
         * Get the order and shipment details of a particular order through this API by passing the Shiprocket order_id in the endpoint URL itself — type in your order_id in place of {id}.  No other body parameters are required.  **Note:**  For SRF orders, you\'ll receive an extra parameter viz., fulfillment_status. This key will have four values:  *   Ready to Pack,  *   Packed *   Added to Picklist *   Picked up         #### Path:  | **EXAMPLE** | | --- | | [https://apiv2.shiprocket.in/v1/external/orders/show/16167171](https://apiv2.shiprocket.in/v1/external/orders/show/16167171) |
         * @summary Get Specific Order Details
         * @param {string} contentType 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersShowGet(contentType: string, authorization: string, options?: any): AxiosPromise<InlineResponse20011> {
            return HyperlocalOrdersApiFp(configuration).v1ExternalOrdersShowGet(contentType, authorization, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * HyperlocalOrdersApi - interface
 * @export
 * @interface HyperlocalOrdersApi
 */
export interface HyperlocalOrdersApiInterface {
    /**
     * Use this API to create a quick custom order. Quick orders are the ones where we do not store the product details in the master catalogue.  You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  **Note:**  - In case the \'shipping_is_billing\' field is false, further shipping detail fields are required.       If no channel id is passed, the order will be assigned to the default custom channel. If the channel id is not known, use the \'Get All Channels\' API to get the list of all integrated channels in your Shiprocket account.  - order_id field cannot be equal to an already existing id. Doing so does not change or affect the existing order.      - New orders cannot be created with order id\'s same as that of cancelled orders. If error 422 shows up despite filling in the correct details, consider changing the order_id.      - Be sure to input the correct calculated sub_total amount. The total is not calculated automatically through the API.      - The \'order_id\' returned in the response is the Shiprocket order_id. Please save this order ID as we will use this in future API calls.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `order_id` | YES | _string_ | The order id you want to specify to the order. Max char: 50. (Avoid passing character values as this contradicts some other API calls). | 224477 or 224-477 | | `order_date` | YES | _string_ | The date of order creation in yyyy-mm-dd format. Time is additional. | 2019-07-24 11:11 | | `pickup_location` | YES | _string_ | The name of the pickup location added in your Shiprocket account. This cannot be a new location. | Jammu | | `channel_id` | NO | _integer_ | Mention this in case you need to assign the order to a particular channel. Deafult is \'Custom\'. | 27022 | | `comment` | NO | _string_ | Option to add \'From\' field to the shipment. To do this, enter the name in the following format: \'Reseller: \\[name\\]\'. | Reseller: Divine | | `reseller_name` | NO | _string_ | The \'from\' name if you want to print. Use \'Reseller: \\[name\\]\' | Reseller: Divine | | `company_name` | NO | _string_ | Name of the company. | Amazon | | `billing_customer_name` | YES | _string_ | First name of the billed customer. | John | | `billing_last_name` | NO | _string_ | Last name of the billed customer. | Doe | | `billing_address` | YES | _string_ | address details of the billed customer. | Civil line, House 20 | | `billing_address_2` | NO | _string_ | Further address details of the billed customer. | Near Hokage House | | `billing_city` | YES | _string_ | Billing address city. Max char: 30. | New Delhi | | `billing_pincode` | YES | _integer_ | Pincode of the billing address. | 110002 | | `billing_state` | YES | _string_ | Billing address state. | Delhi | | `billing_country` | YES | _string_ | Billing address country. | India | | `billing_email` | YES | _string_ | Email address of the billed customer. | [John@doe.com](https://mailto:John@doe.com) | | `billing_phone` | YES | _integer_ | The phone number of the billing customer. | 9856321472 | | `billing_alternate_phone` | NO | _integer_ | Alternate phone number of the billing customer. | 8604690454 | | `shipping_is_billing` | YES | _boolean_ | Whether the shipping address is the same as billing address. 1 or \'true\' for yes and 0 or \'false\' for no. | true | | `shipping_customer_name` | CONDITIONAL YES | _string_ | Name of the customer the order is shipped to. Required in case billing is not same as shipping. | Jane | | `shipping_last_name` | NO | _string_ | Last name of the shipping customer. | Doe | | `shipping_address` | CONDITIONAL YES | _string_ | Address of the Shipping customer. Required in case billing is not same as shipping. | Lane number 69 | | `shipping_address_2` | NO | _string_ | Further address details of shipping customer. | Andheri | | `billing_isd_code` | NO | _string_ | ISD code of the billing address. | +91 | | `shipping_city` | CONDITIONAL YES | _string_ | Shipping address city. | Mumbai | | `shipping_pincode` | CONDITIONAL YES | _integer_ | Shipping address pincode. | 200912 | | `shipping_country` | CONDITIONAL YES | _string_ | Shipping address country. | India | | `shipping_state` | CONDITIONAL YES | _string_ | Shipping address state. | Maharashtra | | `shipping_email` | NO | _string_ | Email of the shipping customer. | [Jane@doe.com](https://mailto:Jane@doe.com) | | `shipping_phone` | CONDITIONAL YES | _integer_ | Phone no. of the shipping customer. |  | | `longitude` | YES | _float_ | Delivery Longitude. Mandatory in case of Hyper local shipments | 77.06745147705078 | | `latitude` | YES | _float_ | Delivery Latitude. Mandatory in case of Hyper local shipments | 28.50724220275879 | | `order_items` | YES | / | List of items and their relevant fields in the form of Array. | / | | `name` | YES | _string_ | Name of the product. | Jeans | | `sku` | YES | _string_ | The sku id of the product. | cbs123 | | `units` | YES | _integer_ | No of units that are to be shipped. | 10 | | `selling_price` | YES | _integer_ | The selling price per unit in Rupee. Inclusive of GST. | 900 | | `discount` | NO | _integer_ | The discount amount in Rupee. Inclusive of tax. | 10 | | `tax` | NO | _integer_ | The tax percentage on the item. | 5 | | `hsn` | NO | _integer_ | Harmonised System Nomenclature code. Used to determine the category of taxation the goods fall under. | 44122 | | `payment_method` | YES | _string_ | The method of payment. Can be either COD (Cash on delivery) Or Prepaid. | COD | | `shipping_charges` | NO | _integer_ | Shipping charges if any in Rupee. | 5 | | `giftwrap_charges` | NO | _integer_ | Giftwrap charges if any in Rupee. | 5 | | `transaction_charges` | NO | _integer_ | Transaction charges if any in Rupee. | 5 | | `total_discount` | NO | _integer_ | The total discount amount in Rupee. | 15 | | `sub_total` | YES | _integer_ | Calculated sub total amount in Rupee after deductions. | 9010 | | `length` | YES | _float_ | The length of the item in cms. Must be more than 0.5. | 10 | | `breadth` | YES | _float_ | The breadth of the item in cms. Must be more than 0.5. | 10 | | `height` | YES | _float_ | The height of the item in cms. Must be more than 0.5. | 10 | | `weight` | YES | _float_ | The weight of the item in kgs. Must be more than 0. | 2.5 | | `ewaybill_no` | NO | _string_ | Details relating to the shipment of goods. . | K92373490 | | `customer_gstin` | NO | _string_ | Goods and Services Tax Identification Number. | 29ABCDE1234F2Z5 | | `invoice_number` | NO | _string_ |  |  | | `order_type` | NO | _string_ | Key to differentiate between Essentials or Non Essentials Shipments. Order type can only be ESSENTIALS or NON ESSENTIALS. Please note it is case sensitive and blank values are allowed. | ESSENTIALS | | `checkout_shipping_method` | NO | _string_ | Only for SRF users. | a. SR_RUSH: SDD, NDD  <br>b. SR_STANDARD: Surface Delivery  <br>c. SR_EXPRESS: Air Delivery  <br>d. SR_QUICK: 3 hrs delivery | | `what3words_address` | NO | _string_ | What3words is a proprietary geocode system designed to identify any location on the surface of Earth with a resolution of about 3 meters. The system encodes geographic coordinates into three permanently fixed dictionary words. | toddler.geologist.animated | | `is_insurance_opt` | NO | _boolean_ | To secure shipments above the order value of Rs 2500 | true | | `is_document` | NO | _integer_ | To create a document order | 1 or 0 | | `shipping_method` | YES | _string_ | Shipping method use HL in case of Hyper local shipments | HL |
     * @summary Create Custom Order
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalOrdersApiInterface
     */
    v1ExternalOrdersCreateAdhocPost(body?: string, options?: any): AxiosPromise<InlineResponse2001>;

    /**
     * This API downloads and creates a CSV file of all the orders in your Shiprocket account and sends the download URL to the linked email account of the API user.  The CSV file containing is accessible via this URL. No parameters are required to access this API.
     * @summary Export your orders
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalOrdersApiInterface
     */
    v1ExternalOrdersExportPost(body?: string, options?: any): AxiosPromise<InlineResponse20012>;

    /**
     * This API call will display a list of all created and available orders in your Shiprocket account. The product and shipment details are displayed as sub-arrays within each order detail.  You can also sort and filter the data according to your needs by passing the optional parameters. Not passing anything will display the data in the default format.  You can also fetch the data based on the order update date. PFB the validations:  ``` 1. if updated_to => passed and updated_from not passed =>, error will come => Please send update_from date along with update_to date 2. if updated_from => passed and updated_to => paased => and from-to > 30 then error => Difference between updated_from and update_to date should not be greater than 30 days. 3. if updated_From < 30 then error => Updated_from date should not be less than 30 days from current date   ```  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `page` | NO | _integer_ | The page number to display. | 5 | | `per_page` | NO | _integer_ | The number of entries per page. | 5 | | `sort` | NO | _string_ | Sort conditions: ASC or DESC | ASC | | `sort_by` | NO | _string_ | The Field to sort by: id or status | id | | `to` | NO | _string_ | The end date. | 2018-07-24 | | `from` | NO | _string_ | The start date. | 2019-07-24 | | `filter_by` | NO | _string_ | Field to filter by. | status, payment_method, delivery_country, channel_order_id | | `filter` | NO | _string_ | Value of the field |  | | `search` | NO | _string_ | Search for AWB or by Channel order_id (order id specified by you). | 224477 | | `pickup_location` | NO | _string_ | Search Orders on the basis of pickup location. | xyz | | `channel_id` | NO | _integer_ | Channel ID Returned in Get Integrated Channels API | 123 | | `fbs` | NO | _integer_ | Use this filter if you want to view and filter the SRF orders | 0 or 1 |
     * @summary Get all Orders
     * @param {string} contentType 
     * @param {string} authorization 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalOrdersApiInterface
     */
    v1ExternalOrdersGet(contentType: string, authorization: string, options?: any): AxiosPromise<InlineResponse20010>;

    /**
     * Get the order and shipment details of a particular order through this API by passing the Shiprocket order_id in the endpoint URL itself — type in your order_id in place of {id}.  No other body parameters are required.  **Note:**  For SRF orders, you\'ll receive an extra parameter viz., fulfillment_status. This key will have four values:  *   Ready to Pack,  *   Packed *   Added to Picklist *   Picked up         #### Path:  | **EXAMPLE** | | --- | | [https://apiv2.shiprocket.in/v1/external/orders/show/16167171](https://apiv2.shiprocket.in/v1/external/orders/show/16167171) |
     * @summary Get Specific Order Details
     * @param {string} contentType 
     * @param {string} authorization 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalOrdersApiInterface
     */
    v1ExternalOrdersShowGet(contentType: string, authorization: string, options?: any): AxiosPromise<InlineResponse20011>;

}

/**
 * HyperlocalOrdersApi - object-oriented interface
 * @export
 * @class HyperlocalOrdersApi
 * @extends {BaseAPI}
 */
export class HyperlocalOrdersApi extends BaseAPI implements HyperlocalOrdersApiInterface {
    /**
     * Use this API to create a quick custom order. Quick orders are the ones where we do not store the product details in the master catalogue.  You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  **Note:**  - In case the \'shipping_is_billing\' field is false, further shipping detail fields are required.       If no channel id is passed, the order will be assigned to the default custom channel. If the channel id is not known, use the \'Get All Channels\' API to get the list of all integrated channels in your Shiprocket account.  - order_id field cannot be equal to an already existing id. Doing so does not change or affect the existing order.      - New orders cannot be created with order id\'s same as that of cancelled orders. If error 422 shows up despite filling in the correct details, consider changing the order_id.      - Be sure to input the correct calculated sub_total amount. The total is not calculated automatically through the API.      - The \'order_id\' returned in the response is the Shiprocket order_id. Please save this order ID as we will use this in future API calls.       #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `order_id` | YES | _string_ | The order id you want to specify to the order. Max char: 50. (Avoid passing character values as this contradicts some other API calls). | 224477 or 224-477 | | `order_date` | YES | _string_ | The date of order creation in yyyy-mm-dd format. Time is additional. | 2019-07-24 11:11 | | `pickup_location` | YES | _string_ | The name of the pickup location added in your Shiprocket account. This cannot be a new location. | Jammu | | `channel_id` | NO | _integer_ | Mention this in case you need to assign the order to a particular channel. Deafult is \'Custom\'. | 27022 | | `comment` | NO | _string_ | Option to add \'From\' field to the shipment. To do this, enter the name in the following format: \'Reseller: \\[name\\]\'. | Reseller: Divine | | `reseller_name` | NO | _string_ | The \'from\' name if you want to print. Use \'Reseller: \\[name\\]\' | Reseller: Divine | | `company_name` | NO | _string_ | Name of the company. | Amazon | | `billing_customer_name` | YES | _string_ | First name of the billed customer. | John | | `billing_last_name` | NO | _string_ | Last name of the billed customer. | Doe | | `billing_address` | YES | _string_ | address details of the billed customer. | Civil line, House 20 | | `billing_address_2` | NO | _string_ | Further address details of the billed customer. | Near Hokage House | | `billing_city` | YES | _string_ | Billing address city. Max char: 30. | New Delhi | | `billing_pincode` | YES | _integer_ | Pincode of the billing address. | 110002 | | `billing_state` | YES | _string_ | Billing address state. | Delhi | | `billing_country` | YES | _string_ | Billing address country. | India | | `billing_email` | YES | _string_ | Email address of the billed customer. | [John@doe.com](https://mailto:John@doe.com) | | `billing_phone` | YES | _integer_ | The phone number of the billing customer. | 9856321472 | | `billing_alternate_phone` | NO | _integer_ | Alternate phone number of the billing customer. | 8604690454 | | `shipping_is_billing` | YES | _boolean_ | Whether the shipping address is the same as billing address. 1 or \'true\' for yes and 0 or \'false\' for no. | true | | `shipping_customer_name` | CONDITIONAL YES | _string_ | Name of the customer the order is shipped to. Required in case billing is not same as shipping. | Jane | | `shipping_last_name` | NO | _string_ | Last name of the shipping customer. | Doe | | `shipping_address` | CONDITIONAL YES | _string_ | Address of the Shipping customer. Required in case billing is not same as shipping. | Lane number 69 | | `shipping_address_2` | NO | _string_ | Further address details of shipping customer. | Andheri | | `billing_isd_code` | NO | _string_ | ISD code of the billing address. | +91 | | `shipping_city` | CONDITIONAL YES | _string_ | Shipping address city. | Mumbai | | `shipping_pincode` | CONDITIONAL YES | _integer_ | Shipping address pincode. | 200912 | | `shipping_country` | CONDITIONAL YES | _string_ | Shipping address country. | India | | `shipping_state` | CONDITIONAL YES | _string_ | Shipping address state. | Maharashtra | | `shipping_email` | NO | _string_ | Email of the shipping customer. | [Jane@doe.com](https://mailto:Jane@doe.com) | | `shipping_phone` | CONDITIONAL YES | _integer_ | Phone no. of the shipping customer. |  | | `longitude` | YES | _float_ | Delivery Longitude. Mandatory in case of Hyper local shipments | 77.06745147705078 | | `latitude` | YES | _float_ | Delivery Latitude. Mandatory in case of Hyper local shipments | 28.50724220275879 | | `order_items` | YES | / | List of items and their relevant fields in the form of Array. | / | | `name` | YES | _string_ | Name of the product. | Jeans | | `sku` | YES | _string_ | The sku id of the product. | cbs123 | | `units` | YES | _integer_ | No of units that are to be shipped. | 10 | | `selling_price` | YES | _integer_ | The selling price per unit in Rupee. Inclusive of GST. | 900 | | `discount` | NO | _integer_ | The discount amount in Rupee. Inclusive of tax. | 10 | | `tax` | NO | _integer_ | The tax percentage on the item. | 5 | | `hsn` | NO | _integer_ | Harmonised System Nomenclature code. Used to determine the category of taxation the goods fall under. | 44122 | | `payment_method` | YES | _string_ | The method of payment. Can be either COD (Cash on delivery) Or Prepaid. | COD | | `shipping_charges` | NO | _integer_ | Shipping charges if any in Rupee. | 5 | | `giftwrap_charges` | NO | _integer_ | Giftwrap charges if any in Rupee. | 5 | | `transaction_charges` | NO | _integer_ | Transaction charges if any in Rupee. | 5 | | `total_discount` | NO | _integer_ | The total discount amount in Rupee. | 15 | | `sub_total` | YES | _integer_ | Calculated sub total amount in Rupee after deductions. | 9010 | | `length` | YES | _float_ | The length of the item in cms. Must be more than 0.5. | 10 | | `breadth` | YES | _float_ | The breadth of the item in cms. Must be more than 0.5. | 10 | | `height` | YES | _float_ | The height of the item in cms. Must be more than 0.5. | 10 | | `weight` | YES | _float_ | The weight of the item in kgs. Must be more than 0. | 2.5 | | `ewaybill_no` | NO | _string_ | Details relating to the shipment of goods. . | K92373490 | | `customer_gstin` | NO | _string_ | Goods and Services Tax Identification Number. | 29ABCDE1234F2Z5 | | `invoice_number` | NO | _string_ |  |  | | `order_type` | NO | _string_ | Key to differentiate between Essentials or Non Essentials Shipments. Order type can only be ESSENTIALS or NON ESSENTIALS. Please note it is case sensitive and blank values are allowed. | ESSENTIALS | | `checkout_shipping_method` | NO | _string_ | Only for SRF users. | a. SR_RUSH: SDD, NDD  <br>b. SR_STANDARD: Surface Delivery  <br>c. SR_EXPRESS: Air Delivery  <br>d. SR_QUICK: 3 hrs delivery | | `what3words_address` | NO | _string_ | What3words is a proprietary geocode system designed to identify any location on the surface of Earth with a resolution of about 3 meters. The system encodes geographic coordinates into three permanently fixed dictionary words. | toddler.geologist.animated | | `is_insurance_opt` | NO | _boolean_ | To secure shipments above the order value of Rs 2500 | true | | `is_document` | NO | _integer_ | To create a document order | 1 or 0 | | `shipping_method` | YES | _string_ | Shipping method use HL in case of Hyper local shipments | HL |
     * @summary Create Custom Order
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalOrdersApi
     */
    public v1ExternalOrdersCreateAdhocPost(body?: string, options?: any) {
        return HyperlocalOrdersApiFp(this.configuration).v1ExternalOrdersCreateAdhocPost(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API downloads and creates a CSV file of all the orders in your Shiprocket account and sends the download URL to the linked email account of the API user.  The CSV file containing is accessible via this URL. No parameters are required to access this API.
     * @summary Export your orders
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalOrdersApi
     */
    public v1ExternalOrdersExportPost(body?: string, options?: any) {
        return HyperlocalOrdersApiFp(this.configuration).v1ExternalOrdersExportPost(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API call will display a list of all created and available orders in your Shiprocket account. The product and shipment details are displayed as sub-arrays within each order detail.  You can also sort and filter the data according to your needs by passing the optional parameters. Not passing anything will display the data in the default format.  You can also fetch the data based on the order update date. PFB the validations:  ``` 1. if updated_to => passed and updated_from not passed =>, error will come => Please send update_from date along with update_to date 2. if updated_from => passed and updated_to => paased => and from-to > 30 then error => Difference between updated_from and update_to date should not be greater than 30 days. 3. if updated_From < 30 then error => Updated_from date should not be less than 30 days from current date   ```  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `page` | NO | _integer_ | The page number to display. | 5 | | `per_page` | NO | _integer_ | The number of entries per page. | 5 | | `sort` | NO | _string_ | Sort conditions: ASC or DESC | ASC | | `sort_by` | NO | _string_ | The Field to sort by: id or status | id | | `to` | NO | _string_ | The end date. | 2018-07-24 | | `from` | NO | _string_ | The start date. | 2019-07-24 | | `filter_by` | NO | _string_ | Field to filter by. | status, payment_method, delivery_country, channel_order_id | | `filter` | NO | _string_ | Value of the field |  | | `search` | NO | _string_ | Search for AWB or by Channel order_id (order id specified by you). | 224477 | | `pickup_location` | NO | _string_ | Search Orders on the basis of pickup location. | xyz | | `channel_id` | NO | _integer_ | Channel ID Returned in Get Integrated Channels API | 123 | | `fbs` | NO | _integer_ | Use this filter if you want to view and filter the SRF orders | 0 or 1 |
     * @summary Get all Orders
     * @param {string} contentType 
     * @param {string} authorization 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalOrdersApi
     */
    public v1ExternalOrdersGet(contentType: string, authorization: string, options?: any) {
        return HyperlocalOrdersApiFp(this.configuration).v1ExternalOrdersGet(contentType, authorization, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get the order and shipment details of a particular order through this API by passing the Shiprocket order_id in the endpoint URL itself — type in your order_id in place of {id}.  No other body parameters are required.  **Note:**  For SRF orders, you\'ll receive an extra parameter viz., fulfillment_status. This key will have four values:  *   Ready to Pack,  *   Packed *   Added to Picklist *   Picked up         #### Path:  | **EXAMPLE** | | --- | | [https://apiv2.shiprocket.in/v1/external/orders/show/16167171](https://apiv2.shiprocket.in/v1/external/orders/show/16167171) |
     * @summary Get Specific Order Details
     * @param {string} contentType 
     * @param {string} authorization 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HyperlocalOrdersApi
     */
    public v1ExternalOrdersShowGet(contentType: string, authorization: string, options?: any) {
        return HyperlocalOrdersApiFp(this.configuration).v1ExternalOrdersShowGet(contentType, authorization, options).then((request) => request(this.axios, this.basePath));
    }

}
