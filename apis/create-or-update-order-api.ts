// tslint:disable
/**
 * shiprocket
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as globalImportUrl from 'url';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { InlineResponse2002 } from '../models';
// @ts-ignore
import { InlineResponse2003 } from '../models';
// @ts-ignore
import { InlineResponse2004 } from '../models';
// @ts-ignore
import { InlineResponse2005 } from '../models';
// @ts-ignore
import { InlineResponse2006 } from '../models';
// @ts-ignore
import { InlineResponse2007 } from '../models';
// @ts-ignore
import { InlineResponse400 } from '../models';
// @ts-ignore
import { InlineResponse403 } from '../models';
// @ts-ignore
import { InlineResponse4221 } from '../models';
// @ts-ignore
import { InlineResponse4222 } from '../models';
// @ts-ignore
import { InlineResponse4223 } from '../models';
// @ts-ignore
import { InlineResponse4224 } from '../models';
/**
 * CreateOrUpdateOrderApi - axios parameter creator
 * @export
 */
export const CreateOrUpdateOrderApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Using this API, you can modify the pickup location of an already created order. Multiple order ids can be passed to update their pickup location together.  **Note:** - Pickup location can only be changed/updated to an already existing pickup location in your account.  - The \'order_id\' to be passed is the Shiprocket order_id received at the time of order creation. - Multiple order ids can be passed as an array, separated by commas. eg: [\"141414,142424,143434\"]  #### Parameters:  |    **PARAMS**    | **REQUIRED**  |  **DATA TYPE**  |                             **DESCRIPTION**                              | **EXAMPLE**  | |:---------------: |:------------: |:--------------: |:-----------------------------------------------------------------------: |:-----------: | |     `order_id`     |      YES      |    *integer*    |             The Shiprocket order_id specified to the order.              |   16167171   | | `pickup_location`  |      YES      |    *string*     | The pickup location you want to change your current pickup location to.  |    Delhi     |
         * @summary Change/Update Pickup Location of Created Orders
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersAddressPickupPatch: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/orders/address/pickup`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * You can update the customer\'s name and delivery address through this API by passing the Shiprocket order id and the necessary customer details.  #### Parameters:  |       **PARAMS**        | **REQUIRED**  |  **DATA TYPE**  |                 **DESCRIPTION**                  |   **EXAMPLE**    | |:----------------------: |:------------: |:--------------: |:-----------------------------------------------: |:---------------: | |        `order_id`         |      YES      |    *integer*    | The Shiprocket order_id specified to the order.  |     16178831     | | `shipping_customer_name`  |      YES      |    *string*     |            The name of the customer.             |     John Doe     | |     `shipping_phone`      |      YES      |    *integer*    |          Phone number of the customer.           |    9988998899    | |    `shipping_address`     |      YES      |    *string*     |         Primary address of the customer.         |   House no 123   | |   `shipping_address_2`    |      NO       |    *string*     |     Further address details of the customer.     | Beside CM house  | |      `shipping_city`      |      YES      |    *string*     |               Shipping city name.                |       Pune       | |     `shipping_state`      |      YES      |    *string*     |               Shipping state name.               |   Maharashtra    | |    `shipping_country`     |      YES      |    *string*     |              Shipping country name.              |      India       | |    `shipping_pincode`     |      YES      |    *integer*    |            Shipping address pincode.             |      120023      | |     `shipping_email`      |      NO       |    *string*     |            Customer\'s email address.             |   john@doe.com   | |     `billing_alternate_phone`      |      NO       |    *string*     |          The customer alternate phone.             |   8604690454   |
         * @summary Update Customer Delivery Address
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersAddressUpdatePost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/orders/address/update`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Use this API to cancel a created order. Multiple order_ids can be passed together as an array to cancel them simultaneously.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `ids` | YES | *integer* | The Shiprocket order id/ids of the orders that need to be canceled. | 16178831 |
         * @summary Cancel an Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersCancelPost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/orders/cancel`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API can be used to create a custom order, the same as the Custom order API, except that you have to specify and select a custom channel to create the order.   The order created will be added under the specified channel. All the other parameters are the same.  **Note:** - Channel_id field is required. - Order_id cannot be the same as the already existing order id. - Inventory Sync must be turned on to use this API. This can be done under the \'Channels\' portion on the left-hand panel of your Shiprocket account. - Inventory details of your Shiprocket account can be accessed using the \'Get Inventory Details\' API.  #### Parameters:  |       **PARAMS**        |   **REQUIRED**   |  **DATA TYPE**  |                                                                         **DESCRIPTION**                                                                          |        **EXAMPLE**        | |:----------------------: |:---------------: |:--------------: |:---------------------------------------------------------------------------------------------------------------------------------------------------------------: |:------------------------: | |        `order_id`         |       YES        |    *string*     |               The order id you want to specify to the order. Max char: 20.  (Avoid passing character values as this contradicts some other API calls).              |     224477 or 224-477     | |       `order_date`        |       YES        |    *string*     |                                         The date of order creation in yyyy-mm-dd format. Time is an additional option.                                         |     2019-07-24 11:11      | |     `pickup_location`     |        NO        |    *string*     |  The name of the pickup location added in your Shiprocket account. This cannot be a new location. Default Pickup location is selected in case the parameter is not filled.  |           Jammu           | |       `channel_id`        |       YES        |    *integer*    |                                                          The id of the specific channel to be selected.                                                          |           27022           | |         `comment`         |        NO        |    *string*     |                       Option to add \'From\' field to the shipment.   To do this, enter the name in the following format: \'Reseller: [name].\'                       |     Reseller: Divine      | |  `billing_customer_name`  |       YES        |    *string*     |                                                            First name of the customer who is billed.                                                             |          John           | |   ` billing_last_name`    |        NO        |    *string*     |                                                                Last name of the billed customer.                                                                 |          Doe          | |     `billing_address`     |       YES        |    *string*     |                                                       Primary address of the billed customer.  Min char: 3.                                                       | House 221B, Leaf Village  | |    `billing_address_2`    |        NO        |    *string*     |                                                         Further address details of the billed customer.                                                          |     Near Hokage House     | |      `billing_city`       |       YES        |    *string*     |                                                               Billing address city.  Max char: 30.                                                                |         New Delhi         | |     `billing_pincode`     |       YES        |    *integer*    |                                                                 Pincode of the billing address.                                                                  |          110002           | |      `billing_state`      |       YES        |    *string*     |                                                                      Billing address state.                                                                      |           Delhi           | |    ` billing_country`     |       YES        |    *string*     |                                                                     Billing address country.                                                                     |           India           | |      `billing_email`      |       YES        |    *string*     |                                                              Email address of the billed customer.                                                               |    John@doe.com     | |      `billing_phone`      |       YES        |    *integer*    |                                                               Phone number of the billed customer.                                                               |        9876543210         | |   `shipping_is_billing`   |       YES        |    *boolean*    |                            Whether the shipping address is the same as billing address.   1 or \'true\' for yes and 0 or \'false\' for no.                           |           true            | | `shipping_customer_name`  | CONDITIONAL YES  |    *string*     |                                 Name of the customer the order is shipped to.   Required in case billing is not same as shipping.                                |          Jane           | |   `shipping_last_name`    |        NO        |    *string*     |                                                               Last name of the shipping customer.                                                                |          Doe          | |    `shipping_address`     | CONDITIONAL YES  |    *string*     |                                        Address of the Shipping customer. Required in case billing is not same as shipping.                                       |       Lane 69       | |   `shipping_address_2`    |        NO        |    *string*     |                                                          Further address details of shipping customer.                                                           |       Andheri        | |      `shipping_city`      | CONDITIONAL YES  |    *string*     |                                                                      Shipping address city.                                                                      |          Mumbai           | |    `shipping_pincode`     | CONDITIONAL YES  |    *integer*    |                                                                    Shipping address pincode.                                                                     |          200912           | |    `shipping_country`     | CONDITIONAL YES  |    *string*     |                                                                    Shipping address country.                                                                     |           India           | |     `shipping_state`      | CONDITIONAL YES  |    *string*     |                                                                    Shipping address state.                                                                     |        Maharashtra        | |     `shipping_email`      | CONDITIONAL YES  |    *string*     |                                                                 Email of the shipping customer.                                                                  |    jane@doe.com     | |     `shipping_phone`      | CONDITIONAL YES  |    *integer*    |                                                                Phone no. of the shipping customer                                                                |        9887655432         | |       `order_items`       |       YES        |        /        |                                                                 Array containing further fields.                                                                 |             /             | |          `name`           |       YES        |    *string*     |                                                                       Name of the product.                                                                       |           Jeans           | |           `sku`           |       YES        |    *string*     |                                                                    The sku id of the product.                                                                    |         cbs123         | |          `units`          |       YES        |    *integer*    |                                                               No. of units that are to be shipped.                                                                |            10             | |      `selling_price`      |       YES        |    *integer*    |                                                      The selling price per unit in Rupee. Inclusive of GST.                                                      |            900            | |        `discount`         |        NO        |    *integer*    |                                                         The discount amount in Rupee. Inclusive of tax.                                                          |            10             | |           `tax`           |        NO        |    *integer*    |                                                                 The tax percentage on the item.                                                                  |             5             | |           `hsn`           |        NO        |    *integer*    |                              Harmonised System Nomenclature code.   Used to determine the category of taxation the goods fall under.                             |           44122           | |    ` payment_method`      |       YES        |    *string*     |                                             The method of payment. Can be either COD (Cash on delivery) Or Prepaid.                                              |            COD            | |    `shipping_charges`     |        NO        |    *integer*    |                                                                Shipping charges if any in Rupee.                                                                 |             5             | |    `giftwrap_charges`     |        NO        |    *integer*    |                                                                Giftwrap charges if any in Rupee.                                                                 |             5             | |   `transaction_charges`   |        NO        |    *integer*    |                                                               Transaction charges if any in Rupee.                                                               |             5             | |     `total_discount`      |        NO        |    *integer*    |                                                               The total discount amount in Rupee.                                                                |            15             | |        `sub_total`        |       YES        |    *integer*    |                                                              Calculated sub total amount in Rupee.                                                               |           9010            | |         `length`          |       YES        |    *integer*    |                                                      The length of the item in cms. Must be more than 0.5.                                                       |            10             | |         `breadth`         |       YES        |    *integer*    |                                                      The breadth of the item in cms. Must be more than 0.5.                                                      |            10             | |         `height`          |       YES        |    *integer*    |                                                      The height of the item in cms. Must be more than 0.5.                                                       |            10             | |         `weight`          |       YES        |    *integer*    |                                                       The weight of the item in kgs. Must be more than 0.                                                        |            2.5            |
         * @summary Create Channel Specific Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersCreatePost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/orders/create`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Use this API to add inventory for ordered products that are out of stock or low on quantity. You have to pass the order id and order product id. You can also specify the number of items.  **Notes:** - Inventory sync of your account must be turned on to use this API. - The order_id to be passed is the shiprocket order id. If you don\'t know the product id, Use the \'Get Product Details\' API to get details about all the existing products.  #### Parameters:  |    **PARAMS**     | **REQUIRED**  |  **DATA TYPE**  |                 **DESCRIPTION**                  | **EXAMPLE**  | |:----------------: |:------------: |:--------------: |:-----------------------------------------------: |:-----------: | |     `order_id`      |      YES      |    *integer*    | The Shiprocket order_id specified to the order.  |   16167171   | | `order_product_id`  |      YES      |    *integer*    |    The product id of the product to be added.    |   17171717   | |     `quantity`      |      YES      | *string*        | The number of items you want to add.             | 10           | |      `action`       |      YES      | *string*        | The action you want to carry out. Is \'add\'.      | add          |
         * @summary Add Inventory for Ordered Product
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersFulfillPatch: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/orders/fulfill`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Use this API to import orders in bulk to your Shiprocket account from an existing \'.csv\' file. The imported orders are automatically added to your panel.  
         * @summary Import Orders in Bulk
         * @param {string} contentType 
         * @param {any} file 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersImportPost: async (contentType: string, file: any, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'contentType' is not null or undefined
            if (contentType === null || contentType === undefined) {
                throw new RequiredError('contentType','Required parameter contentType was null or undefined when calling v1ExternalOrdersImportPost.');
            }
            // verify required parameter 'file' is not null or undefined
            if (file === null || file === undefined) {
                throw new RequiredError('file','Required parameter file was null or undefined when calling v1ExternalOrdersImportPost.');
            }
            const localVarPath = `/v1/external/orders/import`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;
            const localVarFormParams = new FormData();

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (contentType !== undefined && contentType !== null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }


            if (file !== undefined) { 
                localVarFormParams.append('file', file as any);
            }
    
    
            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';
    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = localVarFormParams;

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API maps your unmapped inventory products.   **Note:** - Products must be unmapped to run this API successfully. - Inventory sync must be turned on to use this API.  #### Parameters:  |    **PARAMS**     | **REQUIRED**  |  **DATA TYPE**  |                                                                            **DESCRIPTION**                                                                            | **EXAMPLE**  | |:----------------: |:------------: |:--------------: |:--------------------------------------------------------------------------------------------------------------------------------------------------------------------: |:-----------: | |     `order_id`      |      YES      |    *integer*    |                                                            The Shiprocket order_id specified to the order.                                                            |   16167171   | | `order_product_id`  |      YES      |    *integer*    |                                                              The product id of the product to be mapped.                                                              |   17171717   | |    `master_sku`     |      YES      |    *string*     |  The sku id of the product. In the case of a single integrated channel, master sku is the same as channel_sku; Otherwise, it can be found using the \'Get All Products\' API.  |  chakra123   |
         * @summary Map Unmapped Products
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersMappingPatch: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/orders/mapping`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Use this API to update your orders. You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  You can update only the order_items details before assigning the AWB (before Ready to Ship status). You can only update these key-value pairs i.e., increase/decrease the quantity, update tax/discount, add/remove product items. We\'ve also enabled changing the nature of the order from a non-document to a document. You jus t need to pass the is_document key with the value of 1 in the payload.
         * @summary Update Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersUpdateAdhocPost: async (body?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/orders/update/adhoc`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarHeaderParameter['Content-Type'] = 'text/plain';

            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CreateOrUpdateOrderApi - functional programming interface
 * @export
 */
export const CreateOrUpdateOrderApiFp = function(configuration?: Configuration) {
    return {
        /**
         * Using this API, you can modify the pickup location of an already created order. Multiple order ids can be passed to update their pickup location together.  **Note:** - Pickup location can only be changed/updated to an already existing pickup location in your account.  - The \'order_id\' to be passed is the Shiprocket order_id received at the time of order creation. - Multiple order ids can be passed as an array, separated by commas. eg: [\"141414,142424,143434\"]  #### Parameters:  |    **PARAMS**    | **REQUIRED**  |  **DATA TYPE**  |                             **DESCRIPTION**                              | **EXAMPLE**  | |:---------------: |:------------: |:--------------: |:-----------------------------------------------------------------------: |:-----------: | |     `order_id`     |      YES      |    *integer*    |             The Shiprocket order_id specified to the order.              |   16167171   | | `pickup_location`  |      YES      |    *string*     | The pickup location you want to change your current pickup location to.  |    Delhi     |
         * @summary Change/Update Pickup Location of Created Orders
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersAddressPickupPatch(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse2003>> {
            const localVarAxiosArgs = await CreateOrUpdateOrderApiAxiosParamCreator(configuration).v1ExternalOrdersAddressPickupPatch(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * You can update the customer\'s name and delivery address through this API by passing the Shiprocket order id and the necessary customer details.  #### Parameters:  |       **PARAMS**        | **REQUIRED**  |  **DATA TYPE**  |                 **DESCRIPTION**                  |   **EXAMPLE**    | |:----------------------: |:------------: |:--------------: |:-----------------------------------------------: |:---------------: | |        `order_id`         |      YES      |    *integer*    | The Shiprocket order_id specified to the order.  |     16178831     | | `shipping_customer_name`  |      YES      |    *string*     |            The name of the customer.             |     John Doe     | |     `shipping_phone`      |      YES      |    *integer*    |          Phone number of the customer.           |    9988998899    | |    `shipping_address`     |      YES      |    *string*     |         Primary address of the customer.         |   House no 123   | |   `shipping_address_2`    |      NO       |    *string*     |     Further address details of the customer.     | Beside CM house  | |      `shipping_city`      |      YES      |    *string*     |               Shipping city name.                |       Pune       | |     `shipping_state`      |      YES      |    *string*     |               Shipping state name.               |   Maharashtra    | |    `shipping_country`     |      YES      |    *string*     |              Shipping country name.              |      India       | |    `shipping_pincode`     |      YES      |    *integer*    |            Shipping address pincode.             |      120023      | |     `shipping_email`      |      NO       |    *string*     |            Customer\'s email address.             |   john@doe.com   | |     `billing_alternate_phone`      |      NO       |    *string*     |          The customer alternate phone.             |   8604690454   |
         * @summary Update Customer Delivery Address
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersAddressUpdatePost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
            const localVarAxiosArgs = await CreateOrUpdateOrderApiAxiosParamCreator(configuration).v1ExternalOrdersAddressUpdatePost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Use this API to cancel a created order. Multiple order_ids can be passed together as an array to cancel them simultaneously.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `ids` | YES | *integer* | The Shiprocket order id/ids of the orders that need to be canceled. | 16178831 |
         * @summary Cancel an Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersCancelPost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
            const localVarAxiosArgs = await CreateOrUpdateOrderApiAxiosParamCreator(configuration).v1ExternalOrdersCancelPost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * This API can be used to create a custom order, the same as the Custom order API, except that you have to specify and select a custom channel to create the order.   The order created will be added under the specified channel. All the other parameters are the same.  **Note:** - Channel_id field is required. - Order_id cannot be the same as the already existing order id. - Inventory Sync must be turned on to use this API. This can be done under the \'Channels\' portion on the left-hand panel of your Shiprocket account. - Inventory details of your Shiprocket account can be accessed using the \'Get Inventory Details\' API.  #### Parameters:  |       **PARAMS**        |   **REQUIRED**   |  **DATA TYPE**  |                                                                         **DESCRIPTION**                                                                          |        **EXAMPLE**        | |:----------------------: |:---------------: |:--------------: |:---------------------------------------------------------------------------------------------------------------------------------------------------------------: |:------------------------: | |        `order_id`         |       YES        |    *string*     |               The order id you want to specify to the order. Max char: 20.  (Avoid passing character values as this contradicts some other API calls).              |     224477 or 224-477     | |       `order_date`        |       YES        |    *string*     |                                         The date of order creation in yyyy-mm-dd format. Time is an additional option.                                         |     2019-07-24 11:11      | |     `pickup_location`     |        NO        |    *string*     |  The name of the pickup location added in your Shiprocket account. This cannot be a new location. Default Pickup location is selected in case the parameter is not filled.  |           Jammu           | |       `channel_id`        |       YES        |    *integer*    |                                                          The id of the specific channel to be selected.                                                          |           27022           | |         `comment`         |        NO        |    *string*     |                       Option to add \'From\' field to the shipment.   To do this, enter the name in the following format: \'Reseller: [name].\'                       |     Reseller: Divine      | |  `billing_customer_name`  |       YES        |    *string*     |                                                            First name of the customer who is billed.                                                             |          John           | |   ` billing_last_name`    |        NO        |    *string*     |                                                                Last name of the billed customer.                                                                 |          Doe          | |     `billing_address`     |       YES        |    *string*     |                                                       Primary address of the billed customer.  Min char: 3.                                                       | House 221B, Leaf Village  | |    `billing_address_2`    |        NO        |    *string*     |                                                         Further address details of the billed customer.                                                          |     Near Hokage House     | |      `billing_city`       |       YES        |    *string*     |                                                               Billing address city.  Max char: 30.                                                                |         New Delhi         | |     `billing_pincode`     |       YES        |    *integer*    |                                                                 Pincode of the billing address.                                                                  |          110002           | |      `billing_state`      |       YES        |    *string*     |                                                                      Billing address state.                                                                      |           Delhi           | |    ` billing_country`     |       YES        |    *string*     |                                                                     Billing address country.                                                                     |           India           | |      `billing_email`      |       YES        |    *string*     |                                                              Email address of the billed customer.                                                               |    John@doe.com     | |      `billing_phone`      |       YES        |    *integer*    |                                                               Phone number of the billed customer.                                                               |        9876543210         | |   `shipping_is_billing`   |       YES        |    *boolean*    |                            Whether the shipping address is the same as billing address.   1 or \'true\' for yes and 0 or \'false\' for no.                           |           true            | | `shipping_customer_name`  | CONDITIONAL YES  |    *string*     |                                 Name of the customer the order is shipped to.   Required in case billing is not same as shipping.                                |          Jane           | |   `shipping_last_name`    |        NO        |    *string*     |                                                               Last name of the shipping customer.                                                                |          Doe          | |    `shipping_address`     | CONDITIONAL YES  |    *string*     |                                        Address of the Shipping customer. Required in case billing is not same as shipping.                                       |       Lane 69       | |   `shipping_address_2`    |        NO        |    *string*     |                                                          Further address details of shipping customer.                                                           |       Andheri        | |      `shipping_city`      | CONDITIONAL YES  |    *string*     |                                                                      Shipping address city.                                                                      |          Mumbai           | |    `shipping_pincode`     | CONDITIONAL YES  |    *integer*    |                                                                    Shipping address pincode.                                                                     |          200912           | |    `shipping_country`     | CONDITIONAL YES  |    *string*     |                                                                    Shipping address country.                                                                     |           India           | |     `shipping_state`      | CONDITIONAL YES  |    *string*     |                                                                    Shipping address state.                                                                     |        Maharashtra        | |     `shipping_email`      | CONDITIONAL YES  |    *string*     |                                                                 Email of the shipping customer.                                                                  |    jane@doe.com     | |     `shipping_phone`      | CONDITIONAL YES  |    *integer*    |                                                                Phone no. of the shipping customer                                                                |        9887655432         | |       `order_items`       |       YES        |        /        |                                                                 Array containing further fields.                                                                 |             /             | |          `name`           |       YES        |    *string*     |                                                                       Name of the product.                                                                       |           Jeans           | |           `sku`           |       YES        |    *string*     |                                                                    The sku id of the product.                                                                    |         cbs123         | |          `units`          |       YES        |    *integer*    |                                                               No. of units that are to be shipped.                                                                |            10             | |      `selling_price`      |       YES        |    *integer*    |                                                      The selling price per unit in Rupee. Inclusive of GST.                                                      |            900            | |        `discount`         |        NO        |    *integer*    |                                                         The discount amount in Rupee. Inclusive of tax.                                                          |            10             | |           `tax`           |        NO        |    *integer*    |                                                                 The tax percentage on the item.                                                                  |             5             | |           `hsn`           |        NO        |    *integer*    |                              Harmonised System Nomenclature code.   Used to determine the category of taxation the goods fall under.                             |           44122           | |    ` payment_method`      |       YES        |    *string*     |                                             The method of payment. Can be either COD (Cash on delivery) Or Prepaid.                                              |            COD            | |    `shipping_charges`     |        NO        |    *integer*    |                                                                Shipping charges if any in Rupee.                                                                 |             5             | |    `giftwrap_charges`     |        NO        |    *integer*    |                                                                Giftwrap charges if any in Rupee.                                                                 |             5             | |   `transaction_charges`   |        NO        |    *integer*    |                                                               Transaction charges if any in Rupee.                                                               |             5             | |     `total_discount`      |        NO        |    *integer*    |                                                               The total discount amount in Rupee.                                                                |            15             | |        `sub_total`        |       YES        |    *integer*    |                                                              Calculated sub total amount in Rupee.                                                               |           9010            | |         `length`          |       YES        |    *integer*    |                                                      The length of the item in cms. Must be more than 0.5.                                                       |            10             | |         `breadth`         |       YES        |    *integer*    |                                                      The breadth of the item in cms. Must be more than 0.5.                                                      |            10             | |         `height`          |       YES        |    *integer*    |                                                      The height of the item in cms. Must be more than 0.5.                                                       |            10             | |         `weight`          |       YES        |    *integer*    |                                                       The weight of the item in kgs. Must be more than 0.                                                        |            2.5            |
         * @summary Create Channel Specific Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersCreatePost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse2002>> {
            const localVarAxiosArgs = await CreateOrUpdateOrderApiAxiosParamCreator(configuration).v1ExternalOrdersCreatePost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Use this API to add inventory for ordered products that are out of stock or low on quantity. You have to pass the order id and order product id. You can also specify the number of items.  **Notes:** - Inventory sync of your account must be turned on to use this API. - The order_id to be passed is the shiprocket order id. If you don\'t know the product id, Use the \'Get Product Details\' API to get details about all the existing products.  #### Parameters:  |    **PARAMS**     | **REQUIRED**  |  **DATA TYPE**  |                 **DESCRIPTION**                  | **EXAMPLE**  | |:----------------: |:------------: |:--------------: |:-----------------------------------------------: |:-----------: | |     `order_id`      |      YES      |    *integer*    | The Shiprocket order_id specified to the order.  |   16167171   | | `order_product_id`  |      YES      |    *integer*    |    The product id of the product to be added.    |   17171717   | |     `quantity`      |      YES      | *string*        | The number of items you want to add.             | 10           | |      `action`       |      YES      | *string*        | The action you want to carry out. Is \'add\'.      | add          |
         * @summary Add Inventory for Ordered Product
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersFulfillPatch(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<InlineResponse2005>>> {
            const localVarAxiosArgs = await CreateOrUpdateOrderApiAxiosParamCreator(configuration).v1ExternalOrdersFulfillPatch(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Use this API to import orders in bulk to your Shiprocket account from an existing \'.csv\' file. The imported orders are automatically added to your panel.  
         * @summary Import Orders in Bulk
         * @param {string} contentType 
         * @param {any} file 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersImportPost(contentType: string, file: any, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse2007>> {
            const localVarAxiosArgs = await CreateOrUpdateOrderApiAxiosParamCreator(configuration).v1ExternalOrdersImportPost(contentType, file, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * This API maps your unmapped inventory products.   **Note:** - Products must be unmapped to run this API successfully. - Inventory sync must be turned on to use this API.  #### Parameters:  |    **PARAMS**     | **REQUIRED**  |  **DATA TYPE**  |                                                                            **DESCRIPTION**                                                                            | **EXAMPLE**  | |:----------------: |:------------: |:--------------: |:--------------------------------------------------------------------------------------------------------------------------------------------------------------------: |:-----------: | |     `order_id`      |      YES      |    *integer*    |                                                            The Shiprocket order_id specified to the order.                                                            |   16167171   | | `order_product_id`  |      YES      |    *integer*    |                                                              The product id of the product to be mapped.                                                              |   17171717   | |    `master_sku`     |      YES      |    *string*     |  The sku id of the product. In the case of a single integrated channel, master sku is the same as channel_sku; Otherwise, it can be found using the \'Get All Products\' API.  |  chakra123   |
         * @summary Map Unmapped Products
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersMappingPatch(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<InlineResponse2006>>> {
            const localVarAxiosArgs = await CreateOrUpdateOrderApiAxiosParamCreator(configuration).v1ExternalOrdersMappingPatch(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Use this API to update your orders. You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  You can update only the order_items details before assigning the AWB (before Ready to Ship status). You can only update these key-value pairs i.e., increase/decrease the quantity, update tax/discount, add/remove product items. We\'ve also enabled changing the nature of the order from a non-document to a document. You jus t need to pass the is_document key with the value of 1 in the payload.
         * @summary Update Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalOrdersUpdateAdhocPost(body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse2004>> {
            const localVarAxiosArgs = await CreateOrUpdateOrderApiAxiosParamCreator(configuration).v1ExternalOrdersUpdateAdhocPost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * CreateOrUpdateOrderApi - factory interface
 * @export
 */
export const CreateOrUpdateOrderApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * Using this API, you can modify the pickup location of an already created order. Multiple order ids can be passed to update their pickup location together.  **Note:** - Pickup location can only be changed/updated to an already existing pickup location in your account.  - The \'order_id\' to be passed is the Shiprocket order_id received at the time of order creation. - Multiple order ids can be passed as an array, separated by commas. eg: [\"141414,142424,143434\"]  #### Parameters:  |    **PARAMS**    | **REQUIRED**  |  **DATA TYPE**  |                             **DESCRIPTION**                              | **EXAMPLE**  | |:---------------: |:------------: |:--------------: |:-----------------------------------------------------------------------: |:-----------: | |     `order_id`     |      YES      |    *integer*    |             The Shiprocket order_id specified to the order.              |   16167171   | | `pickup_location`  |      YES      |    *string*     | The pickup location you want to change your current pickup location to.  |    Delhi     |
         * @summary Change/Update Pickup Location of Created Orders
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersAddressPickupPatch(body?: string, options?: any): AxiosPromise<InlineResponse2003> {
            return CreateOrUpdateOrderApiFp(configuration).v1ExternalOrdersAddressPickupPatch(body, options).then((request) => request(axios, basePath));
        },
        /**
         * You can update the customer\'s name and delivery address through this API by passing the Shiprocket order id and the necessary customer details.  #### Parameters:  |       **PARAMS**        | **REQUIRED**  |  **DATA TYPE**  |                 **DESCRIPTION**                  |   **EXAMPLE**    | |:----------------------: |:------------: |:--------------: |:-----------------------------------------------: |:---------------: | |        `order_id`         |      YES      |    *integer*    | The Shiprocket order_id specified to the order.  |     16178831     | | `shipping_customer_name`  |      YES      |    *string*     |            The name of the customer.             |     John Doe     | |     `shipping_phone`      |      YES      |    *integer*    |          Phone number of the customer.           |    9988998899    | |    `shipping_address`     |      YES      |    *string*     |         Primary address of the customer.         |   House no 123   | |   `shipping_address_2`    |      NO       |    *string*     |     Further address details of the customer.     | Beside CM house  | |      `shipping_city`      |      YES      |    *string*     |               Shipping city name.                |       Pune       | |     `shipping_state`      |      YES      |    *string*     |               Shipping state name.               |   Maharashtra    | |    `shipping_country`     |      YES      |    *string*     |              Shipping country name.              |      India       | |    `shipping_pincode`     |      YES      |    *integer*    |            Shipping address pincode.             |      120023      | |     `shipping_email`      |      NO       |    *string*     |            Customer\'s email address.             |   john@doe.com   | |     `billing_alternate_phone`      |      NO       |    *string*     |          The customer alternate phone.             |   8604690454   |
         * @summary Update Customer Delivery Address
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersAddressUpdatePost(body?: string, options?: any): AxiosPromise<object> {
            return CreateOrUpdateOrderApiFp(configuration).v1ExternalOrdersAddressUpdatePost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * Use this API to cancel a created order. Multiple order_ids can be passed together as an array to cancel them simultaneously.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `ids` | YES | *integer* | The Shiprocket order id/ids of the orders that need to be canceled. | 16178831 |
         * @summary Cancel an Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersCancelPost(body?: string, options?: any): AxiosPromise<object> {
            return CreateOrUpdateOrderApiFp(configuration).v1ExternalOrdersCancelPost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * This API can be used to create a custom order, the same as the Custom order API, except that you have to specify and select a custom channel to create the order.   The order created will be added under the specified channel. All the other parameters are the same.  **Note:** - Channel_id field is required. - Order_id cannot be the same as the already existing order id. - Inventory Sync must be turned on to use this API. This can be done under the \'Channels\' portion on the left-hand panel of your Shiprocket account. - Inventory details of your Shiprocket account can be accessed using the \'Get Inventory Details\' API.  #### Parameters:  |       **PARAMS**        |   **REQUIRED**   |  **DATA TYPE**  |                                                                         **DESCRIPTION**                                                                          |        **EXAMPLE**        | |:----------------------: |:---------------: |:--------------: |:---------------------------------------------------------------------------------------------------------------------------------------------------------------: |:------------------------: | |        `order_id`         |       YES        |    *string*     |               The order id you want to specify to the order. Max char: 20.  (Avoid passing character values as this contradicts some other API calls).              |     224477 or 224-477     | |       `order_date`        |       YES        |    *string*     |                                         The date of order creation in yyyy-mm-dd format. Time is an additional option.                                         |     2019-07-24 11:11      | |     `pickup_location`     |        NO        |    *string*     |  The name of the pickup location added in your Shiprocket account. This cannot be a new location. Default Pickup location is selected in case the parameter is not filled.  |           Jammu           | |       `channel_id`        |       YES        |    *integer*    |                                                          The id of the specific channel to be selected.                                                          |           27022           | |         `comment`         |        NO        |    *string*     |                       Option to add \'From\' field to the shipment.   To do this, enter the name in the following format: \'Reseller: [name].\'                       |     Reseller: Divine      | |  `billing_customer_name`  |       YES        |    *string*     |                                                            First name of the customer who is billed.                                                             |          John           | |   ` billing_last_name`    |        NO        |    *string*     |                                                                Last name of the billed customer.                                                                 |          Doe          | |     `billing_address`     |       YES        |    *string*     |                                                       Primary address of the billed customer.  Min char: 3.                                                       | House 221B, Leaf Village  | |    `billing_address_2`    |        NO        |    *string*     |                                                         Further address details of the billed customer.                                                          |     Near Hokage House     | |      `billing_city`       |       YES        |    *string*     |                                                               Billing address city.  Max char: 30.                                                                |         New Delhi         | |     `billing_pincode`     |       YES        |    *integer*    |                                                                 Pincode of the billing address.                                                                  |          110002           | |      `billing_state`      |       YES        |    *string*     |                                                                      Billing address state.                                                                      |           Delhi           | |    ` billing_country`     |       YES        |    *string*     |                                                                     Billing address country.                                                                     |           India           | |      `billing_email`      |       YES        |    *string*     |                                                              Email address of the billed customer.                                                               |    John@doe.com     | |      `billing_phone`      |       YES        |    *integer*    |                                                               Phone number of the billed customer.                                                               |        9876543210         | |   `shipping_is_billing`   |       YES        |    *boolean*    |                            Whether the shipping address is the same as billing address.   1 or \'true\' for yes and 0 or \'false\' for no.                           |           true            | | `shipping_customer_name`  | CONDITIONAL YES  |    *string*     |                                 Name of the customer the order is shipped to.   Required in case billing is not same as shipping.                                |          Jane           | |   `shipping_last_name`    |        NO        |    *string*     |                                                               Last name of the shipping customer.                                                                |          Doe          | |    `shipping_address`     | CONDITIONAL YES  |    *string*     |                                        Address of the Shipping customer. Required in case billing is not same as shipping.                                       |       Lane 69       | |   `shipping_address_2`    |        NO        |    *string*     |                                                          Further address details of shipping customer.                                                           |       Andheri        | |      `shipping_city`      | CONDITIONAL YES  |    *string*     |                                                                      Shipping address city.                                                                      |          Mumbai           | |    `shipping_pincode`     | CONDITIONAL YES  |    *integer*    |                                                                    Shipping address pincode.                                                                     |          200912           | |    `shipping_country`     | CONDITIONAL YES  |    *string*     |                                                                    Shipping address country.                                                                     |           India           | |     `shipping_state`      | CONDITIONAL YES  |    *string*     |                                                                    Shipping address state.                                                                     |        Maharashtra        | |     `shipping_email`      | CONDITIONAL YES  |    *string*     |                                                                 Email of the shipping customer.                                                                  |    jane@doe.com     | |     `shipping_phone`      | CONDITIONAL YES  |    *integer*    |                                                                Phone no. of the shipping customer                                                                |        9887655432         | |       `order_items`       |       YES        |        /        |                                                                 Array containing further fields.                                                                 |             /             | |          `name`           |       YES        |    *string*     |                                                                       Name of the product.                                                                       |           Jeans           | |           `sku`           |       YES        |    *string*     |                                                                    The sku id of the product.                                                                    |         cbs123         | |          `units`          |       YES        |    *integer*    |                                                               No. of units that are to be shipped.                                                                |            10             | |      `selling_price`      |       YES        |    *integer*    |                                                      The selling price per unit in Rupee. Inclusive of GST.                                                      |            900            | |        `discount`         |        NO        |    *integer*    |                                                         The discount amount in Rupee. Inclusive of tax.                                                          |            10             | |           `tax`           |        NO        |    *integer*    |                                                                 The tax percentage on the item.                                                                  |             5             | |           `hsn`           |        NO        |    *integer*    |                              Harmonised System Nomenclature code.   Used to determine the category of taxation the goods fall under.                             |           44122           | |    ` payment_method`      |       YES        |    *string*     |                                             The method of payment. Can be either COD (Cash on delivery) Or Prepaid.                                              |            COD            | |    `shipping_charges`     |        NO        |    *integer*    |                                                                Shipping charges if any in Rupee.                                                                 |             5             | |    `giftwrap_charges`     |        NO        |    *integer*    |                                                                Giftwrap charges if any in Rupee.                                                                 |             5             | |   `transaction_charges`   |        NO        |    *integer*    |                                                               Transaction charges if any in Rupee.                                                               |             5             | |     `total_discount`      |        NO        |    *integer*    |                                                               The total discount amount in Rupee.                                                                |            15             | |        `sub_total`        |       YES        |    *integer*    |                                                              Calculated sub total amount in Rupee.                                                               |           9010            | |         `length`          |       YES        |    *integer*    |                                                      The length of the item in cms. Must be more than 0.5.                                                       |            10             | |         `breadth`         |       YES        |    *integer*    |                                                      The breadth of the item in cms. Must be more than 0.5.                                                      |            10             | |         `height`          |       YES        |    *integer*    |                                                      The height of the item in cms. Must be more than 0.5.                                                       |            10             | |         `weight`          |       YES        |    *integer*    |                                                       The weight of the item in kgs. Must be more than 0.                                                        |            2.5            |
         * @summary Create Channel Specific Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersCreatePost(body?: string, options?: any): AxiosPromise<InlineResponse2002> {
            return CreateOrUpdateOrderApiFp(configuration).v1ExternalOrdersCreatePost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * Use this API to add inventory for ordered products that are out of stock or low on quantity. You have to pass the order id and order product id. You can also specify the number of items.  **Notes:** - Inventory sync of your account must be turned on to use this API. - The order_id to be passed is the shiprocket order id. If you don\'t know the product id, Use the \'Get Product Details\' API to get details about all the existing products.  #### Parameters:  |    **PARAMS**     | **REQUIRED**  |  **DATA TYPE**  |                 **DESCRIPTION**                  | **EXAMPLE**  | |:----------------: |:------------: |:--------------: |:-----------------------------------------------: |:-----------: | |     `order_id`      |      YES      |    *integer*    | The Shiprocket order_id specified to the order.  |   16167171   | | `order_product_id`  |      YES      |    *integer*    |    The product id of the product to be added.    |   17171717   | |     `quantity`      |      YES      | *string*        | The number of items you want to add.             | 10           | |      `action`       |      YES      | *string*        | The action you want to carry out. Is \'add\'.      | add          |
         * @summary Add Inventory for Ordered Product
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersFulfillPatch(body?: string, options?: any): AxiosPromise<Array<InlineResponse2005>> {
            return CreateOrUpdateOrderApiFp(configuration).v1ExternalOrdersFulfillPatch(body, options).then((request) => request(axios, basePath));
        },
        /**
         * Use this API to import orders in bulk to your Shiprocket account from an existing \'.csv\' file. The imported orders are automatically added to your panel.  
         * @summary Import Orders in Bulk
         * @param {string} contentType 
         * @param {any} file 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersImportPost(contentType: string, file: any, options?: any): AxiosPromise<InlineResponse2007> {
            return CreateOrUpdateOrderApiFp(configuration).v1ExternalOrdersImportPost(contentType, file, options).then((request) => request(axios, basePath));
        },
        /**
         * This API maps your unmapped inventory products.   **Note:** - Products must be unmapped to run this API successfully. - Inventory sync must be turned on to use this API.  #### Parameters:  |    **PARAMS**     | **REQUIRED**  |  **DATA TYPE**  |                                                                            **DESCRIPTION**                                                                            | **EXAMPLE**  | |:----------------: |:------------: |:--------------: |:--------------------------------------------------------------------------------------------------------------------------------------------------------------------: |:-----------: | |     `order_id`      |      YES      |    *integer*    |                                                            The Shiprocket order_id specified to the order.                                                            |   16167171   | | `order_product_id`  |      YES      |    *integer*    |                                                              The product id of the product to be mapped.                                                              |   17171717   | |    `master_sku`     |      YES      |    *string*     |  The sku id of the product. In the case of a single integrated channel, master sku is the same as channel_sku; Otherwise, it can be found using the \'Get All Products\' API.  |  chakra123   |
         * @summary Map Unmapped Products
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersMappingPatch(body?: string, options?: any): AxiosPromise<Array<InlineResponse2006>> {
            return CreateOrUpdateOrderApiFp(configuration).v1ExternalOrdersMappingPatch(body, options).then((request) => request(axios, basePath));
        },
        /**
         * Use this API to update your orders. You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  You can update only the order_items details before assigning the AWB (before Ready to Ship status). You can only update these key-value pairs i.e., increase/decrease the quantity, update tax/discount, add/remove product items. We\'ve also enabled changing the nature of the order from a non-document to a document. You jus t need to pass the is_document key with the value of 1 in the payload.
         * @summary Update Order
         * @param {string} [body] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalOrdersUpdateAdhocPost(body?: string, options?: any): AxiosPromise<InlineResponse2004> {
            return CreateOrUpdateOrderApiFp(configuration).v1ExternalOrdersUpdateAdhocPost(body, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * CreateOrUpdateOrderApi - interface
 * @export
 * @interface CreateOrUpdateOrderApi
 */
export interface CreateOrUpdateOrderApiInterface {
    /**
     * Using this API, you can modify the pickup location of an already created order. Multiple order ids can be passed to update their pickup location together.  **Note:** - Pickup location can only be changed/updated to an already existing pickup location in your account.  - The \'order_id\' to be passed is the Shiprocket order_id received at the time of order creation. - Multiple order ids can be passed as an array, separated by commas. eg: [\"141414,142424,143434\"]  #### Parameters:  |    **PARAMS**    | **REQUIRED**  |  **DATA TYPE**  |                             **DESCRIPTION**                              | **EXAMPLE**  | |:---------------: |:------------: |:--------------: |:-----------------------------------------------------------------------: |:-----------: | |     `order_id`     |      YES      |    *integer*    |             The Shiprocket order_id specified to the order.              |   16167171   | | `pickup_location`  |      YES      |    *string*     | The pickup location you want to change your current pickup location to.  |    Delhi     |
     * @summary Change/Update Pickup Location of Created Orders
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApiInterface
     */
    v1ExternalOrdersAddressPickupPatch(body?: string, options?: any): AxiosPromise<InlineResponse2003>;

    /**
     * You can update the customer\'s name and delivery address through this API by passing the Shiprocket order id and the necessary customer details.  #### Parameters:  |       **PARAMS**        | **REQUIRED**  |  **DATA TYPE**  |                 **DESCRIPTION**                  |   **EXAMPLE**    | |:----------------------: |:------------: |:--------------: |:-----------------------------------------------: |:---------------: | |        `order_id`         |      YES      |    *integer*    | The Shiprocket order_id specified to the order.  |     16178831     | | `shipping_customer_name`  |      YES      |    *string*     |            The name of the customer.             |     John Doe     | |     `shipping_phone`      |      YES      |    *integer*    |          Phone number of the customer.           |    9988998899    | |    `shipping_address`     |      YES      |    *string*     |         Primary address of the customer.         |   House no 123   | |   `shipping_address_2`    |      NO       |    *string*     |     Further address details of the customer.     | Beside CM house  | |      `shipping_city`      |      YES      |    *string*     |               Shipping city name.                |       Pune       | |     `shipping_state`      |      YES      |    *string*     |               Shipping state name.               |   Maharashtra    | |    `shipping_country`     |      YES      |    *string*     |              Shipping country name.              |      India       | |    `shipping_pincode`     |      YES      |    *integer*    |            Shipping address pincode.             |      120023      | |     `shipping_email`      |      NO       |    *string*     |            Customer\'s email address.             |   john@doe.com   | |     `billing_alternate_phone`      |      NO       |    *string*     |          The customer alternate phone.             |   8604690454   |
     * @summary Update Customer Delivery Address
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApiInterface
     */
    v1ExternalOrdersAddressUpdatePost(body?: string, options?: any): AxiosPromise<object>;

    /**
     * Use this API to cancel a created order. Multiple order_ids can be passed together as an array to cancel them simultaneously.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `ids` | YES | *integer* | The Shiprocket order id/ids of the orders that need to be canceled. | 16178831 |
     * @summary Cancel an Order
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApiInterface
     */
    v1ExternalOrdersCancelPost(body?: string, options?: any): AxiosPromise<object>;

    /**
     * This API can be used to create a custom order, the same as the Custom order API, except that you have to specify and select a custom channel to create the order.   The order created will be added under the specified channel. All the other parameters are the same.  **Note:** - Channel_id field is required. - Order_id cannot be the same as the already existing order id. - Inventory Sync must be turned on to use this API. This can be done under the \'Channels\' portion on the left-hand panel of your Shiprocket account. - Inventory details of your Shiprocket account can be accessed using the \'Get Inventory Details\' API.  #### Parameters:  |       **PARAMS**        |   **REQUIRED**   |  **DATA TYPE**  |                                                                         **DESCRIPTION**                                                                          |        **EXAMPLE**        | |:----------------------: |:---------------: |:--------------: |:---------------------------------------------------------------------------------------------------------------------------------------------------------------: |:------------------------: | |        `order_id`         |       YES        |    *string*     |               The order id you want to specify to the order. Max char: 20.  (Avoid passing character values as this contradicts some other API calls).              |     224477 or 224-477     | |       `order_date`        |       YES        |    *string*     |                                         The date of order creation in yyyy-mm-dd format. Time is an additional option.                                         |     2019-07-24 11:11      | |     `pickup_location`     |        NO        |    *string*     |  The name of the pickup location added in your Shiprocket account. This cannot be a new location. Default Pickup location is selected in case the parameter is not filled.  |           Jammu           | |       `channel_id`        |       YES        |    *integer*    |                                                          The id of the specific channel to be selected.                                                          |           27022           | |         `comment`         |        NO        |    *string*     |                       Option to add \'From\' field to the shipment.   To do this, enter the name in the following format: \'Reseller: [name].\'                       |     Reseller: Divine      | |  `billing_customer_name`  |       YES        |    *string*     |                                                            First name of the customer who is billed.                                                             |          John           | |   ` billing_last_name`    |        NO        |    *string*     |                                                                Last name of the billed customer.                                                                 |          Doe          | |     `billing_address`     |       YES        |    *string*     |                                                       Primary address of the billed customer.  Min char: 3.                                                       | House 221B, Leaf Village  | |    `billing_address_2`    |        NO        |    *string*     |                                                         Further address details of the billed customer.                                                          |     Near Hokage House     | |      `billing_city`       |       YES        |    *string*     |                                                               Billing address city.  Max char: 30.                                                                |         New Delhi         | |     `billing_pincode`     |       YES        |    *integer*    |                                                                 Pincode of the billing address.                                                                  |          110002           | |      `billing_state`      |       YES        |    *string*     |                                                                      Billing address state.                                                                      |           Delhi           | |    ` billing_country`     |       YES        |    *string*     |                                                                     Billing address country.                                                                     |           India           | |      `billing_email`      |       YES        |    *string*     |                                                              Email address of the billed customer.                                                               |    John@doe.com     | |      `billing_phone`      |       YES        |    *integer*    |                                                               Phone number of the billed customer.                                                               |        9876543210         | |   `shipping_is_billing`   |       YES        |    *boolean*    |                            Whether the shipping address is the same as billing address.   1 or \'true\' for yes and 0 or \'false\' for no.                           |           true            | | `shipping_customer_name`  | CONDITIONAL YES  |    *string*     |                                 Name of the customer the order is shipped to.   Required in case billing is not same as shipping.                                |          Jane           | |   `shipping_last_name`    |        NO        |    *string*     |                                                               Last name of the shipping customer.                                                                |          Doe          | |    `shipping_address`     | CONDITIONAL YES  |    *string*     |                                        Address of the Shipping customer. Required in case billing is not same as shipping.                                       |       Lane 69       | |   `shipping_address_2`    |        NO        |    *string*     |                                                          Further address details of shipping customer.                                                           |       Andheri        | |      `shipping_city`      | CONDITIONAL YES  |    *string*     |                                                                      Shipping address city.                                                                      |          Mumbai           | |    `shipping_pincode`     | CONDITIONAL YES  |    *integer*    |                                                                    Shipping address pincode.                                                                     |          200912           | |    `shipping_country`     | CONDITIONAL YES  |    *string*     |                                                                    Shipping address country.                                                                     |           India           | |     `shipping_state`      | CONDITIONAL YES  |    *string*     |                                                                    Shipping address state.                                                                     |        Maharashtra        | |     `shipping_email`      | CONDITIONAL YES  |    *string*     |                                                                 Email of the shipping customer.                                                                  |    jane@doe.com     | |     `shipping_phone`      | CONDITIONAL YES  |    *integer*    |                                                                Phone no. of the shipping customer                                                                |        9887655432         | |       `order_items`       |       YES        |        /        |                                                                 Array containing further fields.                                                                 |             /             | |          `name`           |       YES        |    *string*     |                                                                       Name of the product.                                                                       |           Jeans           | |           `sku`           |       YES        |    *string*     |                                                                    The sku id of the product.                                                                    |         cbs123         | |          `units`          |       YES        |    *integer*    |                                                               No. of units that are to be shipped.                                                                |            10             | |      `selling_price`      |       YES        |    *integer*    |                                                      The selling price per unit in Rupee. Inclusive of GST.                                                      |            900            | |        `discount`         |        NO        |    *integer*    |                                                         The discount amount in Rupee. Inclusive of tax.                                                          |            10             | |           `tax`           |        NO        |    *integer*    |                                                                 The tax percentage on the item.                                                                  |             5             | |           `hsn`           |        NO        |    *integer*    |                              Harmonised System Nomenclature code.   Used to determine the category of taxation the goods fall under.                             |           44122           | |    ` payment_method`      |       YES        |    *string*     |                                             The method of payment. Can be either COD (Cash on delivery) Or Prepaid.                                              |            COD            | |    `shipping_charges`     |        NO        |    *integer*    |                                                                Shipping charges if any in Rupee.                                                                 |             5             | |    `giftwrap_charges`     |        NO        |    *integer*    |                                                                Giftwrap charges if any in Rupee.                                                                 |             5             | |   `transaction_charges`   |        NO        |    *integer*    |                                                               Transaction charges if any in Rupee.                                                               |             5             | |     `total_discount`      |        NO        |    *integer*    |                                                               The total discount amount in Rupee.                                                                |            15             | |        `sub_total`        |       YES        |    *integer*    |                                                              Calculated sub total amount in Rupee.                                                               |           9010            | |         `length`          |       YES        |    *integer*    |                                                      The length of the item in cms. Must be more than 0.5.                                                       |            10             | |         `breadth`         |       YES        |    *integer*    |                                                      The breadth of the item in cms. Must be more than 0.5.                                                      |            10             | |         `height`          |       YES        |    *integer*    |                                                      The height of the item in cms. Must be more than 0.5.                                                       |            10             | |         `weight`          |       YES        |    *integer*    |                                                       The weight of the item in kgs. Must be more than 0.                                                        |            2.5            |
     * @summary Create Channel Specific Order
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApiInterface
     */
    v1ExternalOrdersCreatePost(body?: string, options?: any): AxiosPromise<InlineResponse2002>;

    /**
     * Use this API to add inventory for ordered products that are out of stock or low on quantity. You have to pass the order id and order product id. You can also specify the number of items.  **Notes:** - Inventory sync of your account must be turned on to use this API. - The order_id to be passed is the shiprocket order id. If you don\'t know the product id, Use the \'Get Product Details\' API to get details about all the existing products.  #### Parameters:  |    **PARAMS**     | **REQUIRED**  |  **DATA TYPE**  |                 **DESCRIPTION**                  | **EXAMPLE**  | |:----------------: |:------------: |:--------------: |:-----------------------------------------------: |:-----------: | |     `order_id`      |      YES      |    *integer*    | The Shiprocket order_id specified to the order.  |   16167171   | | `order_product_id`  |      YES      |    *integer*    |    The product id of the product to be added.    |   17171717   | |     `quantity`      |      YES      | *string*        | The number of items you want to add.             | 10           | |      `action`       |      YES      | *string*        | The action you want to carry out. Is \'add\'.      | add          |
     * @summary Add Inventory for Ordered Product
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApiInterface
     */
    v1ExternalOrdersFulfillPatch(body?: string, options?: any): AxiosPromise<Array<InlineResponse2005>>;

    /**
     * Use this API to import orders in bulk to your Shiprocket account from an existing \'.csv\' file. The imported orders are automatically added to your panel.  
     * @summary Import Orders in Bulk
     * @param {string} contentType 
     * @param {any} file 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApiInterface
     */
    v1ExternalOrdersImportPost(contentType: string, file: any, options?: any): AxiosPromise<InlineResponse2007>;

    /**
     * This API maps your unmapped inventory products.   **Note:** - Products must be unmapped to run this API successfully. - Inventory sync must be turned on to use this API.  #### Parameters:  |    **PARAMS**     | **REQUIRED**  |  **DATA TYPE**  |                                                                            **DESCRIPTION**                                                                            | **EXAMPLE**  | |:----------------: |:------------: |:--------------: |:--------------------------------------------------------------------------------------------------------------------------------------------------------------------: |:-----------: | |     `order_id`      |      YES      |    *integer*    |                                                            The Shiprocket order_id specified to the order.                                                            |   16167171   | | `order_product_id`  |      YES      |    *integer*    |                                                              The product id of the product to be mapped.                                                              |   17171717   | |    `master_sku`     |      YES      |    *string*     |  The sku id of the product. In the case of a single integrated channel, master sku is the same as channel_sku; Otherwise, it can be found using the \'Get All Products\' API.  |  chakra123   |
     * @summary Map Unmapped Products
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApiInterface
     */
    v1ExternalOrdersMappingPatch(body?: string, options?: any): AxiosPromise<Array<InlineResponse2006>>;

    /**
     * Use this API to update your orders. You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  You can update only the order_items details before assigning the AWB (before Ready to Ship status). You can only update these key-value pairs i.e., increase/decrease the quantity, update tax/discount, add/remove product items. We\'ve also enabled changing the nature of the order from a non-document to a document. You jus t need to pass the is_document key with the value of 1 in the payload.
     * @summary Update Order
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApiInterface
     */
    v1ExternalOrdersUpdateAdhocPost(body?: string, options?: any): AxiosPromise<InlineResponse2004>;

}

/**
 * CreateOrUpdateOrderApi - object-oriented interface
 * @export
 * @class CreateOrUpdateOrderApi
 * @extends {BaseAPI}
 */
export class CreateOrUpdateOrderApi extends BaseAPI implements CreateOrUpdateOrderApiInterface {
    /**
     * Using this API, you can modify the pickup location of an already created order. Multiple order ids can be passed to update their pickup location together.  **Note:** - Pickup location can only be changed/updated to an already existing pickup location in your account.  - The \'order_id\' to be passed is the Shiprocket order_id received at the time of order creation. - Multiple order ids can be passed as an array, separated by commas. eg: [\"141414,142424,143434\"]  #### Parameters:  |    **PARAMS**    | **REQUIRED**  |  **DATA TYPE**  |                             **DESCRIPTION**                              | **EXAMPLE**  | |:---------------: |:------------: |:--------------: |:-----------------------------------------------------------------------: |:-----------: | |     `order_id`     |      YES      |    *integer*    |             The Shiprocket order_id specified to the order.              |   16167171   | | `pickup_location`  |      YES      |    *string*     | The pickup location you want to change your current pickup location to.  |    Delhi     |
     * @summary Change/Update Pickup Location of Created Orders
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApi
     */
    public v1ExternalOrdersAddressPickupPatch(body?: string, options?: any) {
        return CreateOrUpdateOrderApiFp(this.configuration).v1ExternalOrdersAddressPickupPatch(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * You can update the customer\'s name and delivery address through this API by passing the Shiprocket order id and the necessary customer details.  #### Parameters:  |       **PARAMS**        | **REQUIRED**  |  **DATA TYPE**  |                 **DESCRIPTION**                  |   **EXAMPLE**    | |:----------------------: |:------------: |:--------------: |:-----------------------------------------------: |:---------------: | |        `order_id`         |      YES      |    *integer*    | The Shiprocket order_id specified to the order.  |     16178831     | | `shipping_customer_name`  |      YES      |    *string*     |            The name of the customer.             |     John Doe     | |     `shipping_phone`      |      YES      |    *integer*    |          Phone number of the customer.           |    9988998899    | |    `shipping_address`     |      YES      |    *string*     |         Primary address of the customer.         |   House no 123   | |   `shipping_address_2`    |      NO       |    *string*     |     Further address details of the customer.     | Beside CM house  | |      `shipping_city`      |      YES      |    *string*     |               Shipping city name.                |       Pune       | |     `shipping_state`      |      YES      |    *string*     |               Shipping state name.               |   Maharashtra    | |    `shipping_country`     |      YES      |    *string*     |              Shipping country name.              |      India       | |    `shipping_pincode`     |      YES      |    *integer*    |            Shipping address pincode.             |      120023      | |     `shipping_email`      |      NO       |    *string*     |            Customer\'s email address.             |   john@doe.com   | |     `billing_alternate_phone`      |      NO       |    *string*     |          The customer alternate phone.             |   8604690454   |
     * @summary Update Customer Delivery Address
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApi
     */
    public v1ExternalOrdersAddressUpdatePost(body?: string, options?: any) {
        return CreateOrUpdateOrderApiFp(this.configuration).v1ExternalOrdersAddressUpdatePost(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Use this API to cancel a created order. Multiple order_ids can be passed together as an array to cancel them simultaneously.  #### Parameters:  | **PARAMS** | **REQUIRED** | **DATA TYPE** | **DESCRIPTION** | **EXAMPLE** | | --- | --- | --- | --- | --- | | `ids` | YES | *integer* | The Shiprocket order id/ids of the orders that need to be canceled. | 16178831 |
     * @summary Cancel an Order
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApi
     */
    public v1ExternalOrdersCancelPost(body?: string, options?: any) {
        return CreateOrUpdateOrderApiFp(this.configuration).v1ExternalOrdersCancelPost(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API can be used to create a custom order, the same as the Custom order API, except that you have to specify and select a custom channel to create the order.   The order created will be added under the specified channel. All the other parameters are the same.  **Note:** - Channel_id field is required. - Order_id cannot be the same as the already existing order id. - Inventory Sync must be turned on to use this API. This can be done under the \'Channels\' portion on the left-hand panel of your Shiprocket account. - Inventory details of your Shiprocket account can be accessed using the \'Get Inventory Details\' API.  #### Parameters:  |       **PARAMS**        |   **REQUIRED**   |  **DATA TYPE**  |                                                                         **DESCRIPTION**                                                                          |        **EXAMPLE**        | |:----------------------: |:---------------: |:--------------: |:---------------------------------------------------------------------------------------------------------------------------------------------------------------: |:------------------------: | |        `order_id`         |       YES        |    *string*     |               The order id you want to specify to the order. Max char: 20.  (Avoid passing character values as this contradicts some other API calls).              |     224477 or 224-477     | |       `order_date`        |       YES        |    *string*     |                                         The date of order creation in yyyy-mm-dd format. Time is an additional option.                                         |     2019-07-24 11:11      | |     `pickup_location`     |        NO        |    *string*     |  The name of the pickup location added in your Shiprocket account. This cannot be a new location. Default Pickup location is selected in case the parameter is not filled.  |           Jammu           | |       `channel_id`        |       YES        |    *integer*    |                                                          The id of the specific channel to be selected.                                                          |           27022           | |         `comment`         |        NO        |    *string*     |                       Option to add \'From\' field to the shipment.   To do this, enter the name in the following format: \'Reseller: [name].\'                       |     Reseller: Divine      | |  `billing_customer_name`  |       YES        |    *string*     |                                                            First name of the customer who is billed.                                                             |          John           | |   ` billing_last_name`    |        NO        |    *string*     |                                                                Last name of the billed customer.                                                                 |          Doe          | |     `billing_address`     |       YES        |    *string*     |                                                       Primary address of the billed customer.  Min char: 3.                                                       | House 221B, Leaf Village  | |    `billing_address_2`    |        NO        |    *string*     |                                                         Further address details of the billed customer.                                                          |     Near Hokage House     | |      `billing_city`       |       YES        |    *string*     |                                                               Billing address city.  Max char: 30.                                                                |         New Delhi         | |     `billing_pincode`     |       YES        |    *integer*    |                                                                 Pincode of the billing address.                                                                  |          110002           | |      `billing_state`      |       YES        |    *string*     |                                                                      Billing address state.                                                                      |           Delhi           | |    ` billing_country`     |       YES        |    *string*     |                                                                     Billing address country.                                                                     |           India           | |      `billing_email`      |       YES        |    *string*     |                                                              Email address of the billed customer.                                                               |    John@doe.com     | |      `billing_phone`      |       YES        |    *integer*    |                                                               Phone number of the billed customer.                                                               |        9876543210         | |   `shipping_is_billing`   |       YES        |    *boolean*    |                            Whether the shipping address is the same as billing address.   1 or \'true\' for yes and 0 or \'false\' for no.                           |           true            | | `shipping_customer_name`  | CONDITIONAL YES  |    *string*     |                                 Name of the customer the order is shipped to.   Required in case billing is not same as shipping.                                |          Jane           | |   `shipping_last_name`    |        NO        |    *string*     |                                                               Last name of the shipping customer.                                                                |          Doe          | |    `shipping_address`     | CONDITIONAL YES  |    *string*     |                                        Address of the Shipping customer. Required in case billing is not same as shipping.                                       |       Lane 69       | |   `shipping_address_2`    |        NO        |    *string*     |                                                          Further address details of shipping customer.                                                           |       Andheri        | |      `shipping_city`      | CONDITIONAL YES  |    *string*     |                                                                      Shipping address city.                                                                      |          Mumbai           | |    `shipping_pincode`     | CONDITIONAL YES  |    *integer*    |                                                                    Shipping address pincode.                                                                     |          200912           | |    `shipping_country`     | CONDITIONAL YES  |    *string*     |                                                                    Shipping address country.                                                                     |           India           | |     `shipping_state`      | CONDITIONAL YES  |    *string*     |                                                                    Shipping address state.                                                                     |        Maharashtra        | |     `shipping_email`      | CONDITIONAL YES  |    *string*     |                                                                 Email of the shipping customer.                                                                  |    jane@doe.com     | |     `shipping_phone`      | CONDITIONAL YES  |    *integer*    |                                                                Phone no. of the shipping customer                                                                |        9887655432         | |       `order_items`       |       YES        |        /        |                                                                 Array containing further fields.                                                                 |             /             | |          `name`           |       YES        |    *string*     |                                                                       Name of the product.                                                                       |           Jeans           | |           `sku`           |       YES        |    *string*     |                                                                    The sku id of the product.                                                                    |         cbs123         | |          `units`          |       YES        |    *integer*    |                                                               No. of units that are to be shipped.                                                                |            10             | |      `selling_price`      |       YES        |    *integer*    |                                                      The selling price per unit in Rupee. Inclusive of GST.                                                      |            900            | |        `discount`         |        NO        |    *integer*    |                                                         The discount amount in Rupee. Inclusive of tax.                                                          |            10             | |           `tax`           |        NO        |    *integer*    |                                                                 The tax percentage on the item.                                                                  |             5             | |           `hsn`           |        NO        |    *integer*    |                              Harmonised System Nomenclature code.   Used to determine the category of taxation the goods fall under.                             |           44122           | |    ` payment_method`      |       YES        |    *string*     |                                             The method of payment. Can be either COD (Cash on delivery) Or Prepaid.                                              |            COD            | |    `shipping_charges`     |        NO        |    *integer*    |                                                                Shipping charges if any in Rupee.                                                                 |             5             | |    `giftwrap_charges`     |        NO        |    *integer*    |                                                                Giftwrap charges if any in Rupee.                                                                 |             5             | |   `transaction_charges`   |        NO        |    *integer*    |                                                               Transaction charges if any in Rupee.                                                               |             5             | |     `total_discount`      |        NO        |    *integer*    |                                                               The total discount amount in Rupee.                                                                |            15             | |        `sub_total`        |       YES        |    *integer*    |                                                              Calculated sub total amount in Rupee.                                                               |           9010            | |         `length`          |       YES        |    *integer*    |                                                      The length of the item in cms. Must be more than 0.5.                                                       |            10             | |         `breadth`         |       YES        |    *integer*    |                                                      The breadth of the item in cms. Must be more than 0.5.                                                      |            10             | |         `height`          |       YES        |    *integer*    |                                                      The height of the item in cms. Must be more than 0.5.                                                       |            10             | |         `weight`          |       YES        |    *integer*    |                                                       The weight of the item in kgs. Must be more than 0.                                                        |            2.5            |
     * @summary Create Channel Specific Order
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApi
     */
    public v1ExternalOrdersCreatePost(body?: string, options?: any) {
        return CreateOrUpdateOrderApiFp(this.configuration).v1ExternalOrdersCreatePost(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Use this API to add inventory for ordered products that are out of stock or low on quantity. You have to pass the order id and order product id. You can also specify the number of items.  **Notes:** - Inventory sync of your account must be turned on to use this API. - The order_id to be passed is the shiprocket order id. If you don\'t know the product id, Use the \'Get Product Details\' API to get details about all the existing products.  #### Parameters:  |    **PARAMS**     | **REQUIRED**  |  **DATA TYPE**  |                 **DESCRIPTION**                  | **EXAMPLE**  | |:----------------: |:------------: |:--------------: |:-----------------------------------------------: |:-----------: | |     `order_id`      |      YES      |    *integer*    | The Shiprocket order_id specified to the order.  |   16167171   | | `order_product_id`  |      YES      |    *integer*    |    The product id of the product to be added.    |   17171717   | |     `quantity`      |      YES      | *string*        | The number of items you want to add.             | 10           | |      `action`       |      YES      | *string*        | The action you want to carry out. Is \'add\'.      | add          |
     * @summary Add Inventory for Ordered Product
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApi
     */
    public v1ExternalOrdersFulfillPatch(body?: string, options?: any) {
        return CreateOrUpdateOrderApiFp(this.configuration).v1ExternalOrdersFulfillPatch(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Use this API to import orders in bulk to your Shiprocket account from an existing \'.csv\' file. The imported orders are automatically added to your panel.  
     * @summary Import Orders in Bulk
     * @param {string} contentType 
     * @param {any} file 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApi
     */
    public v1ExternalOrdersImportPost(contentType: string, file: any, options?: any) {
        return CreateOrUpdateOrderApiFp(this.configuration).v1ExternalOrdersImportPost(contentType, file, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API maps your unmapped inventory products.   **Note:** - Products must be unmapped to run this API successfully. - Inventory sync must be turned on to use this API.  #### Parameters:  |    **PARAMS**     | **REQUIRED**  |  **DATA TYPE**  |                                                                            **DESCRIPTION**                                                                            | **EXAMPLE**  | |:----------------: |:------------: |:--------------: |:--------------------------------------------------------------------------------------------------------------------------------------------------------------------: |:-----------: | |     `order_id`      |      YES      |    *integer*    |                                                            The Shiprocket order_id specified to the order.                                                            |   16167171   | | `order_product_id`  |      YES      |    *integer*    |                                                              The product id of the product to be mapped.                                                              |   17171717   | |    `master_sku`     |      YES      |    *string*     |  The sku id of the product. In the case of a single integrated channel, master sku is the same as channel_sku; Otherwise, it can be found using the \'Get All Products\' API.  |  chakra123   |
     * @summary Map Unmapped Products
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApi
     */
    public v1ExternalOrdersMappingPatch(body?: string, options?: any) {
        return CreateOrUpdateOrderApiFp(this.configuration).v1ExternalOrdersMappingPatch(body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Use this API to update your orders. You have to pass all the required params at the minimum to create a quick custom order. You can add additional parameters as per your preference.  You can update only the order_items details before assigning the AWB (before Ready to Ship status). You can only update these key-value pairs i.e., increase/decrease the quantity, update tax/discount, add/remove product items. We\'ve also enabled changing the nature of the order from a non-document to a document. You jus t need to pass the is_document key with the value of 1 in the payload.
     * @summary Update Order
     * @param {string} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreateOrUpdateOrderApi
     */
    public v1ExternalOrdersUpdateAdhocPost(body?: string, options?: any) {
        return CreateOrUpdateOrderApiFp(this.configuration).v1ExternalOrdersUpdateAdhocPost(body, options).then((request) => request(this.axios, this.basePath));
    }

}
