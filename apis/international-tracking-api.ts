// tslint:disable
/**
 * shiprocket
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as globalImportUrl from 'url';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { InlineResponse20024 } from '../models';
// @ts-ignore
import { InlineResponse20026 } from '../models';
// @ts-ignore
import { InlineResponse20027 } from '../models';
// @ts-ignore
import { InlineResponse20036 } from '../models';
// @ts-ignore
import { InlineResponse403 } from '../models';
/**
 * InternationalTrackingApi - axios parameter creator
 * @export
 */
export const InternationalTrackingApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Get the tracking details of your shipment by entering the AWB code of the same in the endpoint URL itself. No other body parameters are required to access this API.  The response is displayed in JSON format.  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track/awb/788830567028  |
         * @summary Get Tracking through AWB
         * @param {string} contentType 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalCourierTrackAwbAwbCodeGet: async (contentType: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'contentType' is not null or undefined
            if (contentType === null || contentType === undefined) {
                throw new RequiredError('contentType','Required parameter contentType was null or undefined when calling v1ExternalCourierTrackAwbAwbCodeGet.');
            }
            const localVarPath = `/v1/external/courier/track/awb/{awb_code}`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (contentType !== undefined && contentType !== null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get the tracking details of your shipment by entering the Order ID of the same in the endpoint URL itself. If you have the same order ID in more than one channel, then use the param channel_id.  The response is displayed in JSON format.  #### Parameters: | **PARAMS**    | **REQUIRED**  |  **DATA TYPE**  |                           **DESCRIPTION**                            | **EXAMPLE**  | |:----------:   |:------------: |:--------------: |:-------------------------------------------------------------------: |:-----------: | |    `order_id`   |      YES      |   *string*     |                     The order ID/number of your store.                |      NO-123   | |    `channel_id` |    NO      | *integer*  |       Channel ID corresponding to the store    |    12345 |  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track?order_id=123&channel_id=12345  |
         * @summary Get Tracking Data through Order iD
         * @param {string} orderId 
         * @param {string} channelId 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalCourierTrackGet: async (orderId: string, channelId: string, authorization: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'orderId' is not null or undefined
            if (orderId === null || orderId === undefined) {
                throw new RequiredError('orderId','Required parameter orderId was null or undefined when calling v1ExternalCourierTrackGet.');
            }
            // verify required parameter 'channelId' is not null or undefined
            if (channelId === null || channelId === undefined) {
                throw new RequiredError('channelId','Required parameter channelId was null or undefined when calling v1ExternalCourierTrackGet.');
            }
            // verify required parameter 'authorization' is not null or undefined
            if (authorization === null || authorization === undefined) {
                throw new RequiredError('authorization','Required parameter authorization was null or undefined when calling v1ExternalCourierTrackGet.');
            }
            const localVarPath = `/v1/external/courier/track`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (orderId !== undefined) {
                localVarQueryParameter['order_id'] = orderId;
            }

            if (channelId !== undefined) {
                localVarQueryParameter['channel_id'] = channelId;
            }

            if (authorization !== undefined && authorization !== null) {
                localVarHeaderParameter['Authorization'] = String(authorization);
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get the tracking details of your shipment by entering the shipment_id of the same in the endpoint URL. No other body parameters are required to access this API.  The response is displayed in JSON format.  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track/shipment/16104408  |
         * @summary Get Tracking through Shipment ID
         * @param {string} contentType 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalCourierTrackShipmentShipmentIdGet: async (contentType: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'contentType' is not null or undefined
            if (contentType === null || contentType === undefined) {
                throw new RequiredError('contentType','Required parameter contentType was null or undefined when calling v1ExternalCourierTrackShipmentShipmentIdGet.');
            }
            const localVarPath = `/v1/external/courier/track/shipment/{shipment_id}`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (contentType !== undefined && contentType !== null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get the tracking details of your shipments. No other body parameters are required to access this API.
         * @summary Tracking
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalOrdersTrackGet: async (options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/external/international/orders/track`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * InternationalTrackingApi - functional programming interface
 * @export
 */
export const InternationalTrackingApiFp = function(configuration?: Configuration) {
    return {
        /**
         * Get the tracking details of your shipment by entering the AWB code of the same in the endpoint URL itself. No other body parameters are required to access this API.  The response is displayed in JSON format.  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track/awb/788830567028  |
         * @summary Get Tracking through AWB
         * @param {string} contentType 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalCourierTrackAwbAwbCodeGet(contentType: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20024>> {
            const localVarAxiosArgs = await InternationalTrackingApiAxiosParamCreator(configuration).v1ExternalCourierTrackAwbAwbCodeGet(contentType, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Get the tracking details of your shipment by entering the Order ID of the same in the endpoint URL itself. If you have the same order ID in more than one channel, then use the param channel_id.  The response is displayed in JSON format.  #### Parameters: | **PARAMS**    | **REQUIRED**  |  **DATA TYPE**  |                           **DESCRIPTION**                            | **EXAMPLE**  | |:----------:   |:------------: |:--------------: |:-------------------------------------------------------------------: |:-----------: | |    `order_id`   |      YES      |   *string*     |                     The order ID/number of your store.                |      NO-123   | |    `channel_id` |    NO      | *integer*  |       Channel ID corresponding to the store    |    12345 |  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track?order_id=123&channel_id=12345  |
         * @summary Get Tracking Data through Order iD
         * @param {string} orderId 
         * @param {string} channelId 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalCourierTrackGet(orderId: string, channelId: string, authorization: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<InlineResponse20027>>> {
            const localVarAxiosArgs = await InternationalTrackingApiAxiosParamCreator(configuration).v1ExternalCourierTrackGet(orderId, channelId, authorization, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Get the tracking details of your shipment by entering the shipment_id of the same in the endpoint URL. No other body parameters are required to access this API.  The response is displayed in JSON format.  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track/shipment/16104408  |
         * @summary Get Tracking through Shipment ID
         * @param {string} contentType 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalCourierTrackShipmentShipmentIdGet(contentType: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20026>> {
            const localVarAxiosArgs = await InternationalTrackingApiAxiosParamCreator(configuration).v1ExternalCourierTrackShipmentShipmentIdGet(contentType, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * Get the tracking details of your shipments. No other body parameters are required to access this API.
         * @summary Tracking
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ExternalInternationalOrdersTrackGet(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse20036>> {
            const localVarAxiosArgs = await InternationalTrackingApiAxiosParamCreator(configuration).v1ExternalInternationalOrdersTrackGet(options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * InternationalTrackingApi - factory interface
 * @export
 */
export const InternationalTrackingApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * Get the tracking details of your shipment by entering the AWB code of the same in the endpoint URL itself. No other body parameters are required to access this API.  The response is displayed in JSON format.  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track/awb/788830567028  |
         * @summary Get Tracking through AWB
         * @param {string} contentType 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalCourierTrackAwbAwbCodeGet(contentType: string, options?: any): AxiosPromise<InlineResponse20024> {
            return InternationalTrackingApiFp(configuration).v1ExternalCourierTrackAwbAwbCodeGet(contentType, options).then((request) => request(axios, basePath));
        },
        /**
         * Get the tracking details of your shipment by entering the Order ID of the same in the endpoint URL itself. If you have the same order ID in more than one channel, then use the param channel_id.  The response is displayed in JSON format.  #### Parameters: | **PARAMS**    | **REQUIRED**  |  **DATA TYPE**  |                           **DESCRIPTION**                            | **EXAMPLE**  | |:----------:   |:------------: |:--------------: |:-------------------------------------------------------------------: |:-----------: | |    `order_id`   |      YES      |   *string*     |                     The order ID/number of your store.                |      NO-123   | |    `channel_id` |    NO      | *integer*  |       Channel ID corresponding to the store    |    12345 |  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track?order_id=123&channel_id=12345  |
         * @summary Get Tracking Data through Order iD
         * @param {string} orderId 
         * @param {string} channelId 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalCourierTrackGet(orderId: string, channelId: string, authorization: string, options?: any): AxiosPromise<Array<InlineResponse20027>> {
            return InternationalTrackingApiFp(configuration).v1ExternalCourierTrackGet(orderId, channelId, authorization, options).then((request) => request(axios, basePath));
        },
        /**
         * Get the tracking details of your shipment by entering the shipment_id of the same in the endpoint URL. No other body parameters are required to access this API.  The response is displayed in JSON format.  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track/shipment/16104408  |
         * @summary Get Tracking through Shipment ID
         * @param {string} contentType 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalCourierTrackShipmentShipmentIdGet(contentType: string, options?: any): AxiosPromise<InlineResponse20026> {
            return InternationalTrackingApiFp(configuration).v1ExternalCourierTrackShipmentShipmentIdGet(contentType, options).then((request) => request(axios, basePath));
        },
        /**
         * Get the tracking details of your shipments. No other body parameters are required to access this API.
         * @summary Tracking
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ExternalInternationalOrdersTrackGet(options?: any): AxiosPromise<InlineResponse20036> {
            return InternationalTrackingApiFp(configuration).v1ExternalInternationalOrdersTrackGet(options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * InternationalTrackingApi - interface
 * @export
 * @interface InternationalTrackingApi
 */
export interface InternationalTrackingApiInterface {
    /**
     * Get the tracking details of your shipment by entering the AWB code of the same in the endpoint URL itself. No other body parameters are required to access this API.  The response is displayed in JSON format.  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track/awb/788830567028  |
     * @summary Get Tracking through AWB
     * @param {string} contentType 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalTrackingApiInterface
     */
    v1ExternalCourierTrackAwbAwbCodeGet(contentType: string, options?: any): AxiosPromise<InlineResponse20024>;

    /**
     * Get the tracking details of your shipment by entering the Order ID of the same in the endpoint URL itself. If you have the same order ID in more than one channel, then use the param channel_id.  The response is displayed in JSON format.  #### Parameters: | **PARAMS**    | **REQUIRED**  |  **DATA TYPE**  |                           **DESCRIPTION**                            | **EXAMPLE**  | |:----------:   |:------------: |:--------------: |:-------------------------------------------------------------------: |:-----------: | |    `order_id`   |      YES      |   *string*     |                     The order ID/number of your store.                |      NO-123   | |    `channel_id` |    NO      | *integer*  |       Channel ID corresponding to the store    |    12345 |  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track?order_id=123&channel_id=12345  |
     * @summary Get Tracking Data through Order iD
     * @param {string} orderId 
     * @param {string} channelId 
     * @param {string} authorization 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalTrackingApiInterface
     */
    v1ExternalCourierTrackGet(orderId: string, channelId: string, authorization: string, options?: any): AxiosPromise<Array<InlineResponse20027>>;

    /**
     * Get the tracking details of your shipment by entering the shipment_id of the same in the endpoint URL. No other body parameters are required to access this API.  The response is displayed in JSON format.  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track/shipment/16104408  |
     * @summary Get Tracking through Shipment ID
     * @param {string} contentType 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalTrackingApiInterface
     */
    v1ExternalCourierTrackShipmentShipmentIdGet(contentType: string, options?: any): AxiosPromise<InlineResponse20026>;

    /**
     * Get the tracking details of your shipments. No other body parameters are required to access this API.
     * @summary Tracking
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalTrackingApiInterface
     */
    v1ExternalInternationalOrdersTrackGet(options?: any): AxiosPromise<InlineResponse20036>;

}

/**
 * InternationalTrackingApi - object-oriented interface
 * @export
 * @class InternationalTrackingApi
 * @extends {BaseAPI}
 */
export class InternationalTrackingApi extends BaseAPI implements InternationalTrackingApiInterface {
    /**
     * Get the tracking details of your shipment by entering the AWB code of the same in the endpoint URL itself. No other body parameters are required to access this API.  The response is displayed in JSON format.  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track/awb/788830567028  |
     * @summary Get Tracking through AWB
     * @param {string} contentType 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalTrackingApi
     */
    public v1ExternalCourierTrackAwbAwbCodeGet(contentType: string, options?: any) {
        return InternationalTrackingApiFp(this.configuration).v1ExternalCourierTrackAwbAwbCodeGet(contentType, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get the tracking details of your shipment by entering the Order ID of the same in the endpoint URL itself. If you have the same order ID in more than one channel, then use the param channel_id.  The response is displayed in JSON format.  #### Parameters: | **PARAMS**    | **REQUIRED**  |  **DATA TYPE**  |                           **DESCRIPTION**                            | **EXAMPLE**  | |:----------:   |:------------: |:--------------: |:-------------------------------------------------------------------: |:-----------: | |    `order_id`   |      YES      |   *string*     |                     The order ID/number of your store.                |      NO-123   | |    `channel_id` |    NO      | *integer*  |       Channel ID corresponding to the store    |    12345 |  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track?order_id=123&channel_id=12345  |
     * @summary Get Tracking Data through Order iD
     * @param {string} orderId 
     * @param {string} channelId 
     * @param {string} authorization 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalTrackingApi
     */
    public v1ExternalCourierTrackGet(orderId: string, channelId: string, authorization: string, options?: any) {
        return InternationalTrackingApiFp(this.configuration).v1ExternalCourierTrackGet(orderId, channelId, authorization, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get the tracking details of your shipment by entering the shipment_id of the same in the endpoint URL. No other body parameters are required to access this API.  The response is displayed in JSON format.  #### Path:  |                 **EXAMPLE**                 | |:------------------------------------------: | | https://apiv2.shiprocket.in/v1/external/courier/track/shipment/16104408  |
     * @summary Get Tracking through Shipment ID
     * @param {string} contentType 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalTrackingApi
     */
    public v1ExternalCourierTrackShipmentShipmentIdGet(contentType: string, options?: any) {
        return InternationalTrackingApiFp(this.configuration).v1ExternalCourierTrackShipmentShipmentIdGet(contentType, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get the tracking details of your shipments. No other body parameters are required to access this API.
     * @summary Tracking
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternationalTrackingApi
     */
    public v1ExternalInternationalOrdersTrackGet(options?: any) {
        return InternationalTrackingApiFp(this.configuration).v1ExternalInternationalOrdersTrackGet(options).then((request) => request(this.axios, this.basePath));
    }

}
